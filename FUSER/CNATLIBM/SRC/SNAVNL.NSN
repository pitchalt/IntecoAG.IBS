* >Natural Source Header 000000 /*<RO>>
* :NatName SNAVNL
* :UID NIMI3
* :Mode S
* :CP
* :Date 20001205
* :Time 1112330
* <Natural Source Header /*<<RO>
***********************************************
* бедемхе йндхтхйюрнпю йнднб х ярюбнй мюкнцнб *
***********************************************
DEFINE DATA
*  GLOBAL USING UFROG       /* цкнаюкэмше оепелеммше дкъ бяеи яхярелш
PARAMETER USING PRMNAVI
*
  LOCAL  USING LCLKKL1      /* VIEW мю тюик IBS-SYS-FILE
  LOCAL  USING LCLFROL1      /* наыхе оепелеммше
  LOCAL  USING PRMHELP
  LOCAL
    1 SELFUN(A60) INIT<'йНДХТХЙЮРНП ЙНДНБ Х ЯРЮБНЙ МЮКНЦНБ'>
    1 SELREG(A40)
    1 INPUT-REC(A036/1:13)
    1 REDEFINE INPUT-REC
      2 #INPUT-REC(13)
* онкъ мебшбндхлше мю щйпюм
        3 FIELD-FF  (B001) /* ткюц хглемемхъ/сдюкемхъ гюохях
        3 FIELD-ISN (P007) /* ISN гюохях
        3 FIELD-UP  (A001) /* ткюц гюыхрш гюохях
* онкъ бшбндхлше мю щйпюм
        3 #FIELD-01 (N005)      /* йнд
        3 REDEFINE #FIELD-01
          4 #FIELD-01-A(A005)
        3 #FIELD-02 (N3.2)      /* ярюбйю
        3 #FIELD-03 (A020)      /* мюхлемнбюмхе
* дхмюлхвеяйхе юрпхасрш дкъ бшбндхлшу онкеи
*   1 #FIELD-01C (C/1:15)
*   1 #FIELD-02C (C/1:15)
*   1 #FIELD-03C (C/1:15)
*
* ярпсйрспю щкелемрю ярейю я дюммшлх
*
    1 STEK-REC(A36)
    1 REDEFINE STEK-REC
      2 STEK-FF(B01)
      2 STEK-ISN(P07)
      2 STEK-UP(A01)
*
      2 STEK-01(N005)
      2 STEK-02(N3.2)
      2 STEK-03(A020)
    1 LINE(A30)
    1 REDEFINE LINE
      2 LINE-ST(N3.2)
      2 LINE-NM(A20)
      2 LINE-KD(N5)
END-DEFINE
*
SET KEY PF1 PF2 PF3 PF4 PF5 PF6 PF7 PF8 PF9 PF10 PF11 PF12
INCLUDE CCASKOG
*
MOVE 1   TO N-DATA N-DATA-B     /* мнлеп ярейю я дюммшлх
MOVE 36  TO L-DATA L-DATA-B     /* дкхмю щкелемрю б ярейе я дюммшлх
MOVE 15   TO Q-DATA Q-DATA-B    /* йнкхвеярбн щкелемрнб б ярейе
*
MOVE 2   TO N-DEL  N-DEL-B      /* мнлеп ярейю я ISN сдюкеммшу гюохяеи
MOVE 4   TO L-DEL  L-DEL-B      /* дкхмю щкелемрю б ярейе я ISN
MOVE 15   TO Q-DEL  Q-DEL-B     /* йнкхвеярбн щкелемрнб б ярейе я ISN
*
ASSIGN Q-FIELD = 3          /* онкеи б ярпнйе
ASSIGN Q-LINE = 13          /* ярпнй мю щйпюме
ASSIGN F-LINE = 5           /* ялеыемхе оепбни ярпнйх
ASSIGN T-KEY = 7            /* мювюкэмюъ онгхжхъ йкчвебнцн юрпхасрю
ASSIGN L-KEY = 5            /* дкхмю йкчвебнцн юрпхасрю
*
* нямнбмни жхйк
*
REPEAT
*
  IF MAX-EL(N-DATA) = 0 THEN /* еякх бнгбпюр ме бшдекъел ярейх
*
  CALL 'GTSX' L-DATA-B Q-DATA-B N-DATA-B /* ярей C дюмшлх
  CALL 'NULX' ' '  N-DATA-B
  CALL 'GTSX' L-DEL-B  Q-DEL-B  N-DEL-B  /* ярей я ISN сдюкъелшу гюохяеи
  CALL 'NULX' ' '  N-DEL-B
*
  PERFORM LOAD-PROC
  ASSIGN C-DATA1-B = T-KEY
  ASSIGN C-DATA2-B = L-KEY
  CALL 'SRTX' C-DATA1-B C-DATA2-B N-DATA-B
*
END-IF
*
  REPEAT
*
  RESET #FIELD-01(*) #FIELD-02(*) #FIELD-03(*)
*
  PERFORM ARRY-PROC
*
  INPUT   USING MAP 'MAPNLM1'
*
  RESET FL-CURS
   FOR C-CURS 1 Q-LINE
     IF *CURS-FIELD = POS(#FIELD-01(C-CURS)) OR
                    = POS(#FIELD-02(C-CURS)) OR
                    = POS(#FIELD-03(C-CURS))
            ESCAPE BOTTOM  END-IF
   END-FOR
*
  DECIDE FOR EVERY CONDITION
    WHEN *PF-KEY = 'PF1'
      INCLUDE CCHELP '9'
      ESCAPE TOP
    WHEN *PF-KEY = 'PF3'
      CALL 'FRSX' N-DATA-B CALL 'FRSX' N-DEL-B
      RESET MAX-EL(N-DATA) MAX-EL(N-DEL) COU-EL(N-DATA)
      ESCAPE BOTTOM
    WHEN *PF-KEY NE 'PF3'
      PERFORM CHECK-PROC
      PERFORM SCAN-PROC
    WHEN *PF-KEY = 'PF4'   PERFORM ADD-PROC
    WHEN *PF-KEY = 'PF5'
      PERFORM UPD-PROC
      CALL 'FRSX' N-DATA-B CALL 'FRSX' N-DEL-B
      RESET MAX-EL(N-DATA) MAX-EL(N-DEL) COU-EL(N-DATA)
      ESCAPE BOTTOM
    WHEN *PF-KEY = 'PF7'
      MOVE 1 TO P-CURS C-CURS
      COMPUTE FIRST-EL(N-DATA) = FIRST-EL(N-DATA) - Q-LINE
      IF FIRST-EL(N-DATA) <= 0 THEN ASSIGN FIRST-EL(N-DATA) = 1 END-IF
    WHEN *PF-KEY = 'PF8'
      MOVE 1 TO P-CURS C-CURS
      COMPUTE C-DATA1 = FIRST-EL(N-DATA) + Q-LINE - 1
      IF C-DATA1 <= MAX-EL(N-DATA) THEN
        COMPUTE FIRST-EL(N-DATA) = C-DATA1 + 1
      END-IF
    WHEN *PF-KEY = 'PF9'
      MOVE 1 TO P-CURS C-CURS
      ASSIGN FIRST-EL(N-DATA) = 1
    WHEN *PF-KEY = 'PF10'
      MOVE 1 TO P-CURS C-CURS
      ASSIGN FIRST-EL(N-DATA) = MAX-EL(N-DATA)
*    WHEN *PF-KEY = 'PF12' PERFORM SORT-PROC
    WHEN NONE IGNORE
  END-DECIDE
*
  END-REPEAT
  ESCAPE BOTTOM
END-REPEAT
*
 INCLUDE CCUFRO3
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* времхе дюммшу хг IBS-SYS-FILE б ярей я дюммшлх
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE LOAD-PROC
  ASSIGN C-DATA = 0
  FIND IBS-KK-FILE    KK-F = 'NN' AND  OG-ID =  OG-IDENT-G
    COMPUTE C-DATA = C-DATA + 1
    IF C-DATA > Q-DATA THEN ESCAPE BOTTOM END-IF
    ASSIGN STEK-FF  = H'00'
    ASSIGN STEK-ISN = *ISN
    ASSIGN LINE = NA-F
    ASSIGN STEK-01 = LINE-KD
    ASSIGN STEK-02 = LINE-ST
    ASSIGN STEK-03 = LINE-NM
    ASSIGN C-DATA-B = C-DATA
    CALL 'RWSX' C-DATA-B STEK-REC WR-REC N-DATA-B
  END-FIND
  ASSIGN MAX-EL(N-DATA)   = C-DATA
  ASSIGN FIRST-EL(N-DATA) = 1
  ASSIGN MAX-EL(N-DEL)    = 0
END-SUBROUTINE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* опнжедспю опнбепйх дюммшу щйпюмю
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CHECK-PROC
FOR C-LINE = 1 TO Q-LINE /* опнялюрпхбюел ярпнйх щйпюмю
  IF #FIELD-01(C-LINE) NE 0 THEN                /* ярпнйю ме сдюкемю
    EXAMINE #FIELD-01-A(*) #FIELD-01-A(C-LINE) GIVING  INDEX  C-DUBL
*    WRITE '='C-DUBL
    IF C-DUBL > 1 THEN
      REINPUT'дсакхпнбюмхе йндю мю щйпюме:1:',C-DUBL
      MARK *#FIELD-01(C-LINE) ALARM
    END-IF
    RESET C-DATA-B
    COMPUTE C-DATA2 = FIRST-EL(N-DATA) + Q-LINE - 1
    REPEAT
      ASSIGN C-DATA1-B = T-KEY
      ASSIGN C-DATA2-B = L-KEY
      CALL 'CMPX' #FIELD-01(C-LINE)
      C-DATA1-B C-DATA2-B N-DATA-B C-DATA-B
      IF C-DATA1-B = H'00000000' THEN ESCAPE BOTTOM END-IF
      ASSIGN C-DATA1 = C-DATA1-B
      IF NOT(C-DATA1 = FIRST-EL(N-DATA) THRU C-DATA2) THEN
        REINPUT'дсакхпнбюмхе йндю б люяяхбе'
        MARK *#FIELD-01(C-LINE) ALARM
      !0.END-IF
      ASSIGN C-DATA-B = C-DATA1-B
    END-REPEAT
*    COMPUTE C-DATA = FIRST-EL(N-DATA) + C-LINE - 1
*    ASSIGN C-DATA-B = C-DATA
*    CALL 'RWSX' C-DATA-B STEK-REC RD-REC N-DATA-B
*    IF STEK-REC NE ' '
*       IF STEK-ISN NE 0
*          FIND IBS-KK-FILE KK-F  = 'NN' AND KD-F = #FIELD-01(C-LINE)
*                                        AND OG-ID = OG-IDENT-G
!1.*             IF *ISN(!0) NE STEK-ISN
*                REINPUT'дсакхпнбюмхе йндю б тюике'
*                MARK *#FIELD-01(C-LINE) ALARM
*             END-IF
*          END-FIND
*       END-IF
*    END-IF
*    IF STEK-REC = ' '
*       FIND IBS-KK-FILE KK-F  = 'NN' AND KD-F = #FIELD-01(C-LINE)
*                                        AND OG-ID = OG-IDENT-G
*          IF *NUMBER(!1) > 0
*             REINPUT'дсакхпнбюмхе йндю т тюике'
*             MARK *#FIELD-01(C-LINE) ALARM
*          END-IF
*       END-FIND
*    END-IF
    IF #FIELD-02(C-LINE)  = 0
       REINPUT 'ярюбйю' MARK *#FIELD-02(C-LINE) ALARM
    END-IF
    IF #FIELD-03(C-LINE)  = ' '
       REINPUT 'мюхлемнбюмхе'  MARK *#FIELD-03(C-LINE) ALARM
    END-IF
    ELSE                                          /* ярпнйю сдюкемю
    IF C-DATA > MAX-EL(N-DATA) THEN ESCAPE BOTTOM END-IF
  END-IF
*
END-FOR
END-SUBROUTINE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* опнжедспю хглемемхъ дюммшу
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE UPD-PROC
FOR C-DEL 1 TO MAX-EL(N-DEL)
  ASSIGN C-DEL-B = C-DEL
  CALL 'RWSX' C-DEL-B STEK-ISN RD-REC N-DEL-B
  GET IBS-KK-FILE STEK-ISN
  DELETE
END-FOR
*
FOR C-DATA 1 TO MAX-EL(N-DATA)
  ASSIGN C-DATA-B = C-DATA
  CALL 'RWSX' C-DATA-B STEK-REC RD-REC N-DATA-B
  IF STEK-FF = H'01' THEN
    IF STEK-ISN NE 0 THEN GET IBS-KK-FILE STEK-ISN END-IF
    ASSIGN IBS-KK-FILE.OG-ID = OG-IDENT-G
    LINE-KD := STEK-01
    LINE-ST := STEK-02
    LINE-NM := STEK-03
    ASSIGN IBS-KK-FILE.NA-F  = LINE
    ASSIGN IBS-KK-FILE.KK-F  = 'NN'
    IF STEK-ISN NE 0
      THEN UPDATE
      ELSE STORE IBS-KK-FILE
    END-IF
  END-IF
  END OF TRANSACTION
END-FOR
*
END-SUBROUTINE
***************************************************
END
