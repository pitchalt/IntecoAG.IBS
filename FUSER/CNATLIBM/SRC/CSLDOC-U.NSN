* >Natural Source Header 000000 /*<RO>>
* :NatName CSLDOC-U
* :UID TIROD
* :Mode S
* :CP
* :Date 20090831
* :Time 1032330
* <Natural Source Header /*<<RO>
******************************
* ДОБАВЛЕНИЕ НОВОГО ДОКУМЕНТА
******************************
DEFINE DATA
PARAMETER USING CSLDOC-P
PARAMETER USING CSLDOCP1
PARAMETER
1 OG-USER(N5)
LOCAL USING LCLADSDG
LOCAL USING LCLADSSY
LOCAL USING LCLVOL
LOCAL USING TPDOCL
LOCAL USING LCLKKL
LOCAL
1 #I(P7)
1 DOG-TYP(A3) INIT <'ДОГ'>
1 TX-PF5(A8)  INIT <'Запись'>
1 KEY1(A10)
1 REDEFINE KEY1
  2 KEYOG(N5)
  2 KEYKD(N5)
1 CCC(I4)
1 MSG(A50)
1 NM-TY(A50)
1 REDEFINE NM-TY
  2 NM-VO(A30)
1 DOC-DD(D)
1 DOP-DD(D)
1 FLG(N1)
1 NNID(I4)
1 NNDP(I4)
1 NUM-IND(I4)
END-DEFINE
DEFINE WINDOW WIN1
SIZE 13 * 60
BASE 5 / 10
TITLE 'ДОБАВЛЕНИЕ ДОКУМЕНТА'
CONTROL SCREEN
*
MOVE OG-USER TO KEYOG RESET INP-NNID INP-NNDP
INCLUDE TPDOCC
SET KEY PF3 PF5 PF10 PF11
*
REPEAT
SET WINDOW 'WIN1'
IF MSG = ' ' THEN
INPUT MARK CCC USING MAP 'CSLDOCM1'
ELSE
INPUT WITH TEXT MSG MARK CCC ALARM USING MAP 'CSLDOCM1'
END-IF
SET WINDOW OFF
CCC := *CURS-FIELD RESET MSG
*
DECIDE FOR EVERY CONDITION
WHEN *PF-KEY = 'PF3'
  ESCAPE BOTTOM
WHEN *PF-KEY = 'PF11'
  IF CCC = POS(INP-TYP)
     CALLNAT 'VIEW-TY' INP-TYP NM-TY
  END-IF
  IF CCC = POS(INP-OGI) THEN
     CALLNAT 'SELVON' OG-USER INP-OGI NM-VO END-IF
  IF CCC = POS(INP-OGZ) THEN
     CALLNAT 'SELVON' OG-USER INP-OGZ NM-VO END-IF
  ESCAPE TOP
WHEN *PF-KEY NE 'PF3'
  PERFORM PROC-SCAN
WHEN *PF-KEY = 'PF5'
  PERFORM PROC-SAVE
WHEN NONE IGNORE
END-DECIDE
END-REPEAT
*
DEFINE SUBROUTINE PROC-SCAN
IF INP-TYP NE ' ' THEN
   EXAMINE TYPES-DOC(*) FOR INP-TYP NUMBER #I
END-IF
IF INP-TYP = ' ' OR #I = 0 THEN
   MSG := 'Тип документа' CCC := POS(INP-TYP) ESCAPE TOP
END-IF
IF INP-NM = ' ' THEN
   MSG := 'Номер документа' CCC := POS(INP-NM) ESCAPE TOP
END-IF
IF INP-DT = 0 OR = MASK(0) OR INP-DT NE MASK(YYYYMMDD)
   OR INP-GG < 1900 THEN
   MSG := 'Дата документа ?' CCC := POS(INP-DT) ESCAPE TOP
ELSE
   MOVE EDITED INP-DTA TO DOC-DD (EM=YYYYMMDD)
END-IF
IF INP-OGZ = 0 THEN
   MSG := 'Организаци -заказчик ?' CCC := POS(INP-OGZ) ESCAPE TOP
ELSE
   KEYKD := INP-OGZ PERFORM PROC-NM-ORG
   IF FLG = 0 THEN
      MSG := 'Нет организации с указанным кодом'
      CCC := POS(INP-OGZ) ESCAPE TOP END-IF
END-IF
IF INP-OGI = 0 THEN
   MSG := 'Организаци -исполнитетель ?' CCC := POS(INP-OGI) ESCAPE TOP
ELSE
   KEYKD := INP-OGI PERFORM PROC-NM-ORG
   IF FLG = 0 THEN
      MSG := 'Нет организации с указанным кодом'
      CCC := POS(INP-OGI) ESCAPE TOP END-IF
END-IF
IF INP-TYP NE DOG-TYP THEN
   RESET INP-DOP INP-DOP-DT DOP-DD
END-IF
IF INP-DOP NE ' ' OR INP-DOP-DT NE 0 THEN
   IF INP-DOP = ' ' THEN
      MSG := 'Номер доп.соглашени  ?' CCC := POS(INP-DOP)
      ESCAPE TOP END-IF
   IF INP-DOP-DT = 0 OR INP-DOP-DT = MASK(0) OR
      INP-DOP-DT NE MASK(YYYYMMDD) OR INP-DOP-GG < 1900 THEN
      MSG := 'Дата доп.соглашени  ?' CCC := POS(INP-DOP-DT)
      ESCAPE TOP
   ELSE
      MOVE EDITED INP-DOP-DTA TO DOP-DD (EM=YYYYMMDD)
   END-IF
ELSE
   RESET DOP-DD
END-IF
RESET #I NNID NNDP
A. FIND ADS-DOG-FILE GM-F = DOC-DD AND VO-Z = INP-OGZ AND
        VO-I = INP-OGI AND ND-F = INP-NM AND UR-ID = 0 AND NN-DP = 0
IF OG-ID(A.) NE OG-USER THEN ESCAPE TOP END-IF
IF TY-ID(A.) NE INP-TYP THEN ESCAPE TOP END-IF
ADD 1 TO #I NNID := NN-ID(A.)
END-FIND
IF INP-DOP = ' ' AND INP-DOP-DT = 0 THEN
   IF #I NE 0 THEN
      MSG := 'Документ уже существует' CCC := POS(INP-NM)
      ESCAPE TOP END-IF
ELSE
   IF #I = 0 THEN
      MSG := 'Запишите сначало договор' CCC := POS(INP-DOP)
      ESCAPE TOP
   ELSE
   S. FIND NUMBER ADS-DOG-FILE NN-ID = NNID AND UR-ID = 0 AND
           ND-F = INP-DOP AND OG-ID = OG-USER
      IF *NUMBER(S.) NE 0 THEN
         COMPRESS 'Договор уже имеет Д/C' INP-DOP INTO MSG
         CCC := POS(INP-DOP) ESCAPE TOP END-IF
   END-IF
END-IF
END-SUBROUTINE
*
DEFINE SUBROUTINE PROC-NM-ORG
RESET IBS-KVO-FILE FLG
IF KEYKD = 0 THEN ESCAPE ROUTINE END-IF
V. FIND IBS-KVO-FILE OG-VO = KEY1
FLG := 1
END-FIND
END-SUBROUTINE
*
DEFINE SUBROUTINE PROC-SAVE
RESET NUM-IND
C. FIND ADS-SYS-FILE KK-F = 'MN' AND OG-ID = OG-USER
   IF NO RECORD FOUND
      KK-F := 'MN' OG-ID := OG-USER RESET NN-F
   END-NOREC
   ADD 1 TO NN-F(C.) NUM-IND := NN-F(C.)
   IF *NUMBER(C.) = 0 THEN STORE ADS-SYS-FILE
      ELSE UPDATE (C.) END-IF
   END-FIND
B. FIND ADS-SYS-FILE KK-F = 'MD' AND OG-ID = OG-USER
   IF NO RECORD FOUND
      OG-ID := OG-USER KK-F := 'MD' RESET NN-F
   END-NOREC
   ADD 1 TO NN-F
   IF *NUMBER(B.) = 0 THEN STORE ADS-SYS-FILE
      ELSE UPDATE (B.) END-IF
   END-FIND
IF INP-DOP = ' ' THEN NNID := ADS-SYS-FILE.NN-F RESET NNDP
   ELSE NNDP := ADS-SYS-FILE.NN-F END-IF
RESET ADS-DOG-FILE
ADS-DOG-FILE.OG-ID := OG-USER
ADS-DOG-FILE.TY-ID  := INP-TYP
ADS-DOG-FILE.NS-F  := NUM-USER
ADS-DOG-FILE.IND-D := NUM-IND
ADS-DOG-FILE.VO-Z  := INP-OGZ
ADS-DOG-FILE.VO-I  := INP-OGI
ADS-DOG-FILE.NN-ID := ADS-DOG-FILE.IN-F(1) := INP-NNID := NNID
ADS-DOG-FILE.NN-DP := ADS-DOG-FILE.IN-F(2) := INP-NNDP := NNDP
IF NNDP = 0 THEN
   ADS-DOG-FILE.ND-F  := INP-NM
   ADS-DOG-FILE.GM-F  := DOC-DD
ELSE
   ADS-DOG-FILE.ND-F  := INP-DOP
   ADS-DOG-FILE.GM-F  := DOP-DD
END-IF
W. STORE ADS-DOG-FILE
END OF TRANSACTION
ESCAPE BOTTOM
END-SUBROUTINE
*
END
