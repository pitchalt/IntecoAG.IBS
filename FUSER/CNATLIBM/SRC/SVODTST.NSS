* >Natural Source Header 000000 /*<RO>>
* :NatName #SVODTST
* :UID ASUM_T
* :Mode S
* :CP
* :Date 19990120
* :Time 1628330
* <Natural Source Header /*<<RO>
DEFINE DATA
 PARAMETER USING #PTEST2
 LOCAL USING #LSTAT
 LOCAL
1 WR-REC(B4) CONST <H'00000001'>
1 RD-REC(B4) CONST <H'00000000'>
/**************************
1 CURST(B4)
1 MAXST(I4) INIT <1000>
1 CSTACK(B4) INIT <1000>
1 LSTACK(B4) CONST <219>
1 TSTACK(A219)
1 REDEFINE TSTACK
  2 MASK(A200)
  2 STAT(A10)
  2 NUMBER(P15.2)
/**************************
1 MAXVUB(I4)
1 VUBOR(10)
 2 START(B4)
 2 END(B4)
 2 INDEX(I4)
/**************************
1 TMPNUM(B4)
1 I(N9)
1 REDEFINE I
  2 FILLER 8X
  2 II(N1)
1 III(N9)
1 N(I4)
1 K(I4)
1 FLAG(L)
1 TMPA(A20)
1 S(I2)
1 E(I2)
END-DEFINE
DEFINE SUBROUTINE #SVODTST
 DECIDE ON FIRST VALUE #PTEST2.COMMAND
  VALUE 'CLOSE'
   PERFORM FREE_TEST_DATA;
  VALUE 'INIT'
   PERFORM INIT_TEST_DATA
  VALUE 'GET'
   PERFORM GET_TEST_DATA
  NONE VALUE IGNORE
 END-DECIDE
 ESCAPE ROUTINE
DEFINE SUBROUTINE FREE_TEST_DATA /* FREE_TEST_DATA
 IF #PTEST2.NSTACK NE 0 THEN
  CALL 'FRSX' #PTEST2.NSTACK ;
 END-IF
END-SUBROUTINE
DEFINE SUBROUTINE INIT_TEST_DATA /* INIT_TEST_DATA
 PERFORM FREE_TEST_DATA;
 RESET #PTEST2;
 #PTEST2.MASKA(1)  := '1'
 MOVE ALL H'00' TO #PTEST2.MASKA(2)
 #PTEST2.MASKA(3)  := '3'
 #PTEST2.MASKA(4)  := '4'
 MOVE ALL H'00' TO #PTEST2.MASKA(5)
 #PTEST2.MASKA(6)  := '6'
 #PTEST2.MASKA(7)  := '7'
 MOVE ALL H'00' TO #PTEST2.MASKA(8)
 #PTEST2.MASKA(9)  := '9'
 #PTEST2.MASKA(10) := '10'
/* CALL 'TGETFREE' #PTEST2.NSTACK
 #PTEST2.NSTACK := 1
 CALL 'GTSX' LSTACK CSTACK #PTEST2.NSTACK ;
 FOR I = 1 TO MAXST
  MOVE ALL H'11' TO TSTACK.MASK
  IF II EQ 1 THRU 10 THEN
    TSTACK.STAT := STATNAME(II)
   ELSE
    TSTACK.STAT := 'XXXXXXXX'
  END-IF
  III := I / 3
  III := III * 3
  IF I EQ III THEN
   TSTACK.MASK := #PTEST2.MASK
  END-IF
  TSTACK.NUMBER := I
  CURST := I
  CALL 'RWSX' CURST TSTACK WR-REC #PTEST2.NSTACK ;
 END-FOR
END-SUBROUTINE
DEFINE SUBROUTINE GET_TEST_DATA /* GET_TEST_DATA
RESET #PTEST2.DATAVAR(*);
IF #PTEST2.N_VAR > 0 THEN
 III := 0
 MOVE ALL H'00' TO TMPA
 FOR I = 1 TO 10
  IF #PTEST2.MASKB(I) NE TMPA THEN
   ADD 1 TO III
   N := I * 20
   VUBOR.START(III) := N - 19
   VUBOR.END(III) := 20
   VUBOR.INDEX(III) := I
  END-IF
 END-FOR
 MAXVUB := III
 FOR I = 1 TO MAXST
  CURST := I
  CALL 'RWSX' CURST TSTACK RD-REC #PTEST2.NSTACK ;
  FLAG := TRUE
  FOR N = 1 TO MAXVUB
   S := VUBOR.START(N)
   E := VUBOR.END(N)
   K := VUBOR.INDEX(N)
   MOVE SUBSTRING(TSTACK,S,E) TO TMPA
   IF TMPA NE #PTEST2.MASKA(K) THEN
    FLAG := FALSE
    ESCAPE BOTTOM
   END-IF
  END-FOR
  IF FLAG THEN
   FOR N = 1 TO #PTEST2.N_VAR
    IF TSTACK.STAT EQ #PTEST2.NAMEVAR(N) THEN
     ADD TSTACK.NUMBER TO #PTEST2.DATAVAR(N)
     ESCAPE BOTTOM
    END-IF
   END-FOR
  END-IF
 END-FOR
END-IF
END-SUBROUTINE
END-SUBROUTINE
END
