* >Natural Source Header 000000 /*<RO>>
* :NatName CPRDIL0S
* :UID T_UPA
* :Mode S
* :CP
* :Date 20100330
* :Time 0902330
* <Natural Source Header /*<<RO>
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING CPRDIL0A
LOCAL USING CDRPIM0L
LOCAL USING CDRIIM0L
/*
LOCAL USING XPMXSM0L
LOCAL USING CPRDIL0L
LOCAL USING CBRDPC0A
/*
LOCAL USING LCLZKL
/*
LOCAL
1 #LINE       (I4)
1 RI-POS      (I4)
1 RI-MAX      (I4)
END-DEFINE
DEFINE SUBROUTINE CPRDIL0S
/*
MX-FUNCTION-NAME := 'Редактирование правила перераспределени  затрат'
RI-POS := 1
SET KEY OFF
SET KEY ON
SET KEY ALL
SET KEY PF3 NAMED  'Выход'
SET KEY PF7 NAMED  'Вверх'
SET KEY PF8 NAMED  'Вниз'
SET KEY PF12 NAMED 'Расчт'
REPEAT
  PERFORM DATA-LOAD
  FOR #LINE = 0 TO 14
     IF RI-POS + #LINE > RI-LIST-C + 1 THEN
        MOVE (AD=P) TO RI-C(RI-POS + #LINE)
     END-IF
  END-FOR
  INPUT USING MAP "CPRDIL0M"
  IF *PF-KEY EQ "PF3" THEN
     ESCAPE BOTTOM
  END-IF
  RI-MAX := RI-POS + 14
  FOR #LINE = RI-POS TO RI-MAX
/*     INPUT *OI #LINE *OI CPRDIL0L.RI-RID(#LINE)
     IF CPRDIL0L.RI-RID(#LINE) NE 0 THEN
        IF CPRDIL0L.RI-PORTION(#LINE) NE 0 THEN
           PERFORM LINE-UPDATE
        ELSE
           PERFORM LINE-DELETE
        END-IF
     ELSE IF CPRDIL0L.RI-PORTION(#LINE) NE 0 THEN
        PERFORM LINE-ADD
     END-IF END-IF
  END-FOR
  IF *PF-KEY EQ "PF7" THEN
     IF RI-POS < 16 THEN
        RI-POS := 1
     ELSE
        RI-POS := RI-POS - 15
     END-IF
  END-IF
  IF *PF-KEY EQ "PF8" THEN
     IF RI-POS < 31 THEN
        RI-POS := RI-POS + 15
     END-IF
  END-IF
  IF *PF-KEY EQ "PF12" THEN
/*     WRITE CBRDPC0A.RID
     CBRDPC0A.RID := CPRDIL0A.RID
     PERFORM CBRDPC0S XXERX00A CBRDPC0A
     END TRANSACTION
  END-IF
END-REPEAT
/*
DEFINE LINE-DELETE
  FIND CDRIIM0L WITH RID EQ CPRDIL0L.RI-RID(#LINE)
     DELETE
  END-FIND
END-SUBROUTINE
/*
DEFINE LINE-ADD
  PERFORM LINE-CHECK
  PERFORM SCR2LINE
  MOVE CPRDIL0A.RID TO CDRIIM0L.UP-RID
RPS.
  STORE CDRIIM0L
  MOVE *ISN(RPS.) TO CDRIIM0L.RID
  MOVE CDRIIM0L.RID TO CDRIIM0L.OID
  UPDATE (RPS.)
END-SUBROUTINE
/*
DEFINE LINE-UPDATE
  PERFORM LINE-CHECK
  FIND CDRIIM0L WITH RID EQ CPRDIL0L.RI-RID(#LINE)
/*     INPUT "UPDATE" CDRIIM0L.RID
     PERFORM SCR2LINE
     UPDATE
  END-FIND
END-SUBROUTINE
/*
DEFINE SUBROUTINE LINE2SRC
  IGNORE
END-SUBROUTINE
/*
DEFINE SUBROUTINE SCR2LINE
  MOVE RI-PORTION(#LINE) TO CDRIIM0L.PORTION
  IF RI-IS-SALDO(#LINE) THEN
     MOVE 1 TO CDRIIM0L.IS-SALDO
  END-IF
  MOVE RI-ZK-OID(#LINE) TO CDRIIM0L.ZK-OID
  MOVE RI-AC-OID(#LINE) TO CDRIIM0L.AC-OID
  MOVE RI-PO-OID(#LINE) TO CDRIIM0L.PO-OID
  MOVE RI-SZ-OID(#LINE) TO CDRIIM0L.SZ-OID
  MOVE RI-SF-NUMBER(#LINE) TO CDRIIM0L.DESCRIPTION
END-SUBROUTINE
/*
DEFINE SUBROUTINE LINE-CHECK
  IF NOT RI-IS-SALDO(#LINE) THEN
     IF RI-ZK-CODE(#LINE) EQ " " THEN
        REINPUT 'Поле об зательно дл  заполнени ' MARK *RI-ZK-CODE(#LINE)
     END-IF
FZ.
     FIND ZAKAZ WITH ZK-F EQ RI-ZK-CODE(#LINE)
        MOVE ZAKAZ.INT-NUM-ZK TO RI-ZK-OID(#LINE)
     END-FIND
     IF *NUMBER(FZ.) EQ 0 THEN
        REINPUT 'Заказ не найден' MARK *RI-ZK-CODE(#LINE)
     END-IF
     IF RI-AC-CODE(#LINE) EQ 0 THEN
        RI-AC-CODE(#LINE) := ZAKAZ.BS-F
     END-IF
     RI-AC-OID(#LINE) := RI-AC-CODE(#LINE)
     IF RI-PO-CODE(#LINE) EQ 0 THEN
        REINPUT 'Поле об зательно дл  заполнени ' MARK *RI-PO-CODE(#LINE)
     END-IF
     RI-PO-OID(#LINE) := RI-PO-CODE(#LINE)
     IF RI-SZ-CODE(#LINE)  EQ 0 THEN
        REINPUT 'Поле об зательно дл  заполнени ' MARK *RI-SZ-CODE(#LINE)
     END-IF
     RI-SZ-OID(#LINE)  := RI-SZ-CODE(#LINE)
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE DATA-LOAD
  RESET CPRDIL0L
/*  WRITE CPRDIL0A.RID
  FIND CDRPIM0L WITH RID EQ CPRDIL0A.RID
     MOVE BY NAME CDRPIM0L TO CPRDIL0L
/*     COMPRESS 'Список' CDRLIM0L.CODE CDRLIM0L.NAME INTO
/*        XPMXSM0L.MX-EDITOR-NAME
  END-FIND
  FIND CDRIIM0L WITH UP-RID EQ CPRDIL0A.RID SORTED BY RID
     ADD 1 TO RI-LIST-C
     MOVE CDRIIM0L.RID TO RI-RID(RI-LIST-C)
     MOVE CDRIIM0L.PORTION TO RI-PORTION(RI-LIST-C)
     ADD CDRIIM0L.PORTION TO RI-ALL
     IF CDRIIM0L.IS-SALDO EQ 0 THEN
        MOVE CDRIIM0L.ZK-OID TO RI-ZK-OID(RI-LIST-C)
        FIND ZAKAZ WITH INT-NUM-ZK EQ RI-ZK-OID(RI-LIST-C)
           MOVE ZK-F TO RI-ZK-CODE(RI-LIST-C)
           IF RI-ZK-CODE(RI-LIST-C) EQ " " THEN
              MOVE ZZ-F TO RI-ZK-CODE(RI-LIST-C)
           END-IF
        END-FIND
        MOVE CDRIIM0L.AC-OID TO RI-AC-OID(RI-LIST-C)
        MOVE CDRIIM0L.AC-OID TO RI-AC-CODE(RI-LIST-C)
        MOVE CDRIIM0L.PO-OID TO RI-PO-OID(RI-LIST-C)
        MOVE CDRIIM0L.PO-OID TO RI-PO-CODE(RI-LIST-C)
        MOVE CDRIIM0L.SZ-OID TO RI-SZ-OID(RI-LIST-C)
        MOVE CDRIIM0L.SZ-OID TO RI-SZ-CODE(RI-LIST-C)
        MOVE CDRIIM0L.DESCRIPTION TO RI-SF-NUMBER(RI-LIST-C)
     ELSE
        RI-IS-SALDO(RI-LIST-C) := TRUE
     END-IF
  END-FIND
END-SUBROUTINE
END-SUBROUTINE
END
