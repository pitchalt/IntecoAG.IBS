* >Natural Source Header 000000 /*<RO>>
* :NatName XPUNSH1S
* :UID MSA
* :Mode S
* :CP
* :Date 20110908
* :Time 0903230
* <Natural Source Header /*<<RO>
DEFINE DATA
/*
PARAMETER
1 IBS(N5)
1 IDI(A31)
1 REDEFINE IDI
  2 IDITY(A3)  2 IDIND(A20)  2 IDIDT(A8)
1 ITX(A100)
1 REDEFINE ITX
  2 #ITX(A50/2)
1 IOB(N5)  1 ISU(N13.2)  1 IPR(N5)  1 IPO(N5)  1 IZK(A9)
LOCAL USING AUUNXX0L
LOCAL USING XPUNSC0L
LOCAL USING XPUNSR0L
LOCAL USING XPUNSH0A
LOCAL USING XPUNSH0L
LOCAL USING XPUNSH1L
LOCAL USING XPCPXX0L
LOCAL USING XPXXCO0L
LOCAL USING LCLFROL4
LOCAL USING CHR1251
LOCAL USING CHREBCD
LOCAL USING EXL-PARM
LOCAL USING IBS-OBJL
LOCAL USING LCLSTAT
LOCAL
1 #RETURN-CODE (I4)
1 #ADDITION-ERROR (A35)
1 #STATUS  (A15)
1 #RESULT  (I4)
1 #VIEW-TEXT (A40)
1 #LS-START (I2) INIT <1>
1 #LS-END (I2) INIT <15>
1 #LIST-END (L) INIT <FALSE>
1 #KOL-STRING (I4) INIT <15>
1 #TEXT-VIEW  (A40)
1 #OBJECT  (A10)
1 #UN-CODE (N6)
/*
1 #CP-MSG-POS (I2)
1 #C    (I2)
1 #I       (I4)  1 #J(I4)
1 #STACK-I (I2)
1 #L1      (I2)
1 #L2      (I2)
1 KEYST1(A16)
1 REDEFINE KEYST1
  2 OG1(N5)  2 ST1(A5)  2 CD1(N6)
1 NMOG(A50)  1 NM30(A30)  1 NM5(A5)
1 OG-IDENT-G(N5) INIT < 1000 >
1 NM-VO(A50)  1 #DT(N6)  1 #SU(N13.2)  1 NMSS(A50)
1 BSZ(N5)  1 NMZK(A50)  1 ZKRC(N5)  1 NMPO(A50)
1 KEYSS(A10)
1 REDEFINE KEYSS
  2 KEYSSOG(N5)  2 KEYSSSS(N5)
/*
1 KEYVO       (B10)
1 REDEFINE KEYVO
2 KEYVOOG     (N5)  2 KEYVOVO     (N5)
/*
1 #SUMM       (N13.2)  1 SUMCUR(N13.2)
/*
END-DEFINE
/*
DEFINE WINDOW PARAM
              SIZE 8*20
              BASE 8/16
              TITLE 'Счет и период'
              CONTROL WINDOW
              FRAMED ON
DEFINE SUBROUTINE XPUNSH1S
/*
DEFINE WINDOW RESULT-UNIT
  SIZE 20*80
  BASE 4/1
  TITLE 'Найденные элементы оборудовани  к установке.'
  FRAMED ON
/*
DEFINE WINDOW CRITERY-UNIT
  SIZE 18*80
  BASE 7/1
  TITLE 'Параметры отбора элементов оборудовани  к установке.'
  FRAMED ON
/***********************************
MOVE "UN-CRITERY" TO #STATUS
#OPSYS := *OPSYS
KEYSSOG := OG-IDENT-G
/* основной цикл
REPEAT
  DECIDE ON FIRST VALUE #STATUS
     VALUE "UN-CRITERY"
        PERFORM UN-CRITERY
     VALUE "EXCEL"
        PERFORM EXCEL-OBJECT
     VALUE "NEW-OBJECT"
        #OBJECT := "NEW"
        PERFORM NEW-OBJECT
     VALUE "EDIT-OBJECT"
        #OBJECT := "EDIT"
        PERFORM NEW-OBJECT
     VALUE "LIST-OBJECT"
        PERFORM LIST-OBJECT
     NONE VALUE
        WRITE "ERROR PARAMETERS"
        MOVE "EXIT" TO #STATUS
  END-DECIDE
  UNTIL #STATUS = "EXIT"
END-REPEAT
/*
DEFINE SUBROUTINE LIST-OBJECT  /* отображение найденных объектов
  SET KEY NAMED OFF
  SET KEY ALL
  SET KEY PF2 NAMED 'Новый'
  SET KEY PF5 NAMED 'Измен'
  SET KEY PF3 NAMED 'Выход'
  SET KEY CLR NAMED 'Выход'
  SET KEY PF7 NAMED 'Вверх'
  SET KEY PGUP NAMED 'Вверх'
  SET KEY PF8 NAMED 'Вниз'
  SET KEY PGDN NAMED 'Вниз'
  SET KEY PF9 NAMED 'Начал'
  SET KEY PF10 NAMED 'Конец'
  /*
  REPEAT
     PERFORM LIST-VIEW
/*
     IF #RETURN-CODE NE 0 THEN
        INPUT WINDOW = 'RESULT-UNIT' WITH TEXT *#RETURN-CODE , #ADDITION-ERROR
        MARK CP-CURS-FIELD USING MAP 'XPUNSR0M'
        RESET #RETURN-CODE #ADDITION-ERROR
     ELSE
        INPUT WINDOW = 'RESULT-UNIT' MARK CP-CURS-FIELD USING MAP 'XPUNSR0M'
     END-IF
     DECIDE ON FIRST VALUE *PF-KEY
        VALUE "PF2"
           MOVE "NEW-OBJECT" TO #STATUS
           SET WINDOW OFF
           PERFORM STACK-FREE
           ESCAPE BOTTOM
        VALUE "PF5"
           FOR #I = 1 TO #KOL-STRING
              IF *CURS-FIELD EQ POS(CMD(#I)) THEN
                 MOVE "EDIT-OBJECT" TO #STATUS
                 MOVE XPUNSR0L.ELEM-STACK(#I) TO XPUNSH0L.STACK-POS
                 PERFORM STACK-READ
                 RESET #UN-CODE
                 MOVE XPUNSR0L.UN-CODE(#I) TO #UN-CODE
                 ESCAPE BOTTOM
              END-IF
           END-FOR
           SET WINDOW OFF
           PERFORM STACK-FREE
           ESCAPE BOTTOM
        VALUE "PF3" , "CLR"
           SET WINDOW OFF
           MOVE "EXIT" TO #STATUS
           PERFORM STACK-FREE
           ESCAPE BOTTOM
           /* очистить за собой стеки
        VALUE "PF7" , "PGUP"
           IF #LIST-END = TRUE
              #LIST-END := FALSE
           END-IF
           #LS-START := #LS-START  - #KOL-STRING
           #LS-END := #LS-END - #KOL-STRING
           IF #LS-START < 1 THEN
              #LS-START := 1
              #LS-END := #KOL-STRING
           END-IF
        VALUE "PF8" , "PGDN"
           IF #LIST-END = FALSE
              ADD #KOL-STRING TO #LS-START
              ADD #KOL-STRING TO #LS-END
           END-IF
        VALUE "PF9" /* начало
           #LIST-END := FALSE
           #LS-START := 1
           #LS-END := #KOL-STRING
        VALUE "PF10" /* конец
           #LIST-END := TRUE
           #LS-START := XPUNSH0L.STACK-LEN - #KOL-STRING + 1
           #LS-END := XPUNSH0L.STACK-LEN
           IF #LS-START <= 0 THEN
              #LS-START := 1
              #LS-END := #KOL-STRING
           END-IF
        NONE VALUE
           MOVE 2002 TO #RETURN-CODE
           MOVE *PF-KEY TO #ADDITION-ERROR
     END-DECIDE
  END-REPEAT
END-SUBROUTINE
/*
DEFINE SUBROUTINE NEW-OBJECT   /* создание нового или редактирование объекта
  SET KEY NAMED OFF
  SET KEY ALL
  SET KEY ENTR NAMED 'Прове'
  IF #OBJECT = "NEW"
     SET KEY PF5 NAMED 'Cохр'
  ELSE
     PERFORM READ-RECORD
     PERFORM OBJECT-TO-SCREEN
     SET KEY PF5 NAMED 'Измен'
  END-IF
  SET KEY PF3 NAMED 'Выход'
  SET KEY PF2 NAMED 'Номер'
  SET KEY CLR NAMED 'Выход'
  SET KEY PF11 NAMED 'Выбор'
/*
  RESET NMOG
  REPEAT
     IF XPUNSH1L.UN-ISP NE 0
       CALLNAT 'GETNMVO' OG-IDENT-G XPUNSH1L.UN-ISP NMOG
     END-IF
     CALLNAT 'VNAST' XPUNSH1L.UN-BS XPUNSH1L.UN-CODE SUMCUR
     IF XPUNSH1L.UN-BS = 0  XPUNSH1L.UN-BS := IBS  END-IF
     IF XPUNSH1L.UN-DOC-DATE = 0
       IF IDIDT IS (N8)  XPUNSH1L.UN-DOC-DATE := VAL(IDIDT)  END-IF
       XPUNSH1L.UN-DOC-NUM := IDIND
       XPUNSH1L.UN-DOC-TYPE := IDITY
     END-IF
     IF XPUNSH1L.UN-FIRST-PRICE = 0
       XPUNSH1L.UN-FIRST-PRICE := ISU
     END-IF
     IF XPUNSH1L.UN-NAME1 = ' '
       XPUNSH1L.UN-NAME1 := #ITX(1)
       XPUNSH1L.UN-NAME2 := #ITX(2)
     END-IF
     IF XPUNSH1L.UN-PODR = 0  XPUNSH1L.UN-PODR := IPO  END-IF
     IF XPUNSH1L.UN-PROV = 0  XPUNSH1L.UN-PROV := IPR  END-IF
     IF XPUNSH1L.UN-ZAK = ' '  XPUNSH1L.UN-ZAK := IZK  END-IF
    IF #RETURN-CODE NE 0 THEN
        INPUT WITH TEXT *#RETURN-CODE , #ADDITION-ERROR
        MARK CP-CURS-FIELD USING MAP 'XPUNSH0M'
        RESET #RETURN-CODE #ADDITION-ERROR
     ELSE
        INPUT MARK CP-CURS-FIELD USING MAP 'XPUNSH0M'
     END-IF
     DECIDE ON FIRST VALUE *PF-KEY
        VALUE "PF3" , "CLR"
           MOVE "EXIT" TO #STATUS
           PERFORM STACK-FREE
           RESET XPUNSH0A XPUNSH1L
           ESCAPE BOTTOM
           /* очистить за собой стеки
        VALUE "PF2"
          IF XPUNSH1L.UN-BS = 0
            REINPUT 'Счет' MARK *XPUNSH1L.UN-BS ALARM
          END-IF
          CALLNAT 'DEFUNCD' XPUNSH1L.UN-BS XPUNSH1L.UN-CODE
          ESCAPE TOP
        VALUE "PF5"
           PERFORM CHECK-SCREEN
           IF  #RETURN-CODE NE 0
              ESCAPE TOP
           END-IF
           PERFORM SCREEN-TO-OBJECT
           IF  #RETURN-CODE NE 0
              ESCAPE TOP
           END-IF
           PERFORM STORE-OBJECT
           IF  #RETURN-CODE NE 0
              ESCAPE TOP
           ELSE
              IF #OBJECT = "NEW"
                 COMPRESS 'Объект ' XPUNSH1L.UN-CODE ' сохранен в БД.' TO #TEXT-VIEW
              ELSE
                 COMPRESS 'Объект ' XPUNSH1L.UN-CODE ' изменен в БД.' TO #TEXT-VIEW
              END-IF
           END-IF
           MOVE  "UN-CRITERY" TO #STATUS
           PERFORM STACK-FREE
           RESET XPUNSH0A XPUNSH1L
           ESCAPE ROUTINE
        VALUE "ENTR"
           PERFORM CHECK-SCREEN
           IF  #RETURN-CODE NE 0
              ESCAPE TOP
           END-IF
        VALUE "PF11"
           PERFORM SELECT-OBJECT
           IF  #RETURN-CODE NE 0
              ESCAPE TOP
           END-IF
        NONE VALUE
           MOVE 2002 TO #RETURN-CODE
           MOVE *PF-KEY TO #ADDITION-ERROR
     END-DECIDE
  END-REPEAT
END-SUBROUTINE
/* отбор по критерию ниокр
DEFINE SUBROUTINE UN-CRITERY /* критерий дл  пердварительного отбора объектов
  SET WINDOW 'CRITERY-UNIT'
  SET KEY NAMED OFF
  SET KEY ALL
  SET KEY ENTR NAMED 'Искат'
  SET KEY PF3 NAMED 'Выход'
  SET KEY CLR NAMED 'Выход'
  SET KEY PF2 NAMED 'Новый'
  SET KEY PF6 NAMED 'Excel'
  REPEAT
     IF #RETURN-CODE NE 0 THEN
        INPUT WINDOW = 'CRITERY-UNIT' WITH TEXT *#RETURN-CODE , #ADDITION-ERROR
        MARK CP-CURS-FIELD USING MAP 'XPUNSC0M'
        RESET #RETURN-CODE #ADDITION-ERROR
     ELSE
        IF #TEXT-VIEW NE ' '
           INPUT WINDOW = 'CRITERY-UNIT'
           WITH TEXT #TEXT-VIEW MARK CP-CURS-FIELD USING MAP 'XPUNSC0M'
           RESET #TEXT-VIEW
        ELSE
           INPUT MARK CP-CURS-FIELD USING MAP 'XPUNSC0M'
        END-IF
     END-IF
     DECIDE ON FIRST VALUE *PF-KEY
        VALUE "PF3" , "CLR"
           MOVE "EXIT" TO #STATUS
           ESCAPE BOTTOM
           /* очистить за собой стеки
        VALUE "PF2"
           MOVE "NEW-OBJECT" TO #STATUS
           ESCAPE BOTTOM
        VALUE "PF6"
           MOVE "EXCEL" TO #STATUS
           ESCAPE BOTTOM
       VALUE "ENTR"
           PERFORM SEARCH-UN
           IF XPUNSH0L.STACK-LEN > 0 THEN
              IF XPUNSH0L.STACK-LEN = 1
                 RESET #UN-CODE
                 MOVE XPUNSH0L.UN-CODE TO #UN-CODE
                 PERFORM STACK-FREE
                 MOVE "EDIT-OBJECT" TO #STATUS
              ELSE
                 MOVE "LIST-OBJECT" TO #STATUS
              END-IF
           ELSE
              MOVE 2001 TO #RETURN-CODE
           END-IF
           ESCAPE BOTTOM
        NONE VALUE
           MOVE 2002 TO #RETURN-CODE
           MOVE *PF-KEY TO #ADDITION-ERROR
     END-DECIDE
  END-REPEAT
SET WINDOW OFF
END-SUBROUTINE
/* подпрограмма проверки экрана
DEFINE SUBROUTINE CHECK-SCREEN
  IF XPUNSH1L.UN-BS = 0
     MOVE 2004 TO #RETURN-CODE
     CP-CURS-FIELD := POS(XPUNSH1L.UN-BS)
     ESCAPE ROUTINE
  END-IF
  CALLNAT 'GETNMSS' OG-IDENT-G XPUNSH1L.UN-BS NMSS
  IF NMSS = ' '
     MOVE 2011 TO #RETURN-CODE
     CP-CURS-FIELD := POS(XPUNSH1L.UN-BS)
     ESCAPE ROUTINE
  END-IF
  IF XPUNSH1L.UN-CODE = 0
     MOVE 2004 TO #RETURN-CODE
     CP-CURS-FIELD := POS(XPUNSH1L.UN-CODE)
     ESCAPE ROUTINE
  END-IF
* IF XPUNSH1L.UN-NUM = ' '
*    MOVE 2004 TO #RETURN-CODE
*    CP-CURS-FIELD := POS(XPUNSH1L.UN-NUM)
*    ESCAPE ROUTINE
* END-IF
  IF XPUNSH1L.UN-NAME = ' '
     MOVE 2004 TO #RETURN-CODE
     CP-CURS-FIELD := POS(XPUNSH1L.UN-NAME1)
     ESCAPE ROUTINE
  END-IF
  IF XPUNSH1L.UN-ISP = 0  IGNORE
*   MOVE 2004 TO #RETURN-CODE
*   CP-CURS-FIELD := POS(XPUNSH1L.UN-ISP)
*   ESCAPE ROUTINE
    ELSE
    CALLNAT 'GETNMVO' OG-IDENT-G XPUNSH1L.UN-ISP NMOG
    IF NMOG = ' '
      MOVE 2014 TO #RETURN-CODE
      CP-CURS-FIELD := POS(XPUNSH1L.UN-ISP)
      ESCAPE ROUTINE
    END-IF
  END-IF
* IF XPUNSH1L.UN-DOC-TYPE NE ' '
*   IF XPUNSH1L.UN-DOC-NUM = ' '
*     MOVE 2016 TO #RETURN-CODE
*     CP-CURS-FIELD := POS(XPUNSH1L.UN-DOC-NUM)
*     ESCAPE ROUTINE
*   END-IF
*   IF XPUNSH1L.UN-DOC-DATE = 0 OR XPUNSH1L.UN-DOC-DATE NE MASK(YYYYMMDD)
*     MOVE 2017 TO #RETURN-CODE
*     CP-CURS-FIELD := POS(XPUNSH1L.UN-DOC-DATE)
*     ESCAPE ROUTINE
*   END-IF
* END-IF
* IF XPUNSH1L.UN-ZAK = ' '
*   MOVE 2004 TO #RETURN-CODE
*   CP-CURS-FIELD := POS(XPUNSH1L.UN-ZAK)
*   ESCAPE ROUTINE
* END-IF
  IF XPUNSH1L.UN-ZAK NE ' '
    CALLNAT 'GETNMZK' OG-IDENT-G XPUNSH1L.UN-ZAK BSZ NMZK ZKRC
    IF ZKRC = 8
      MOVE 2014 TO #RETURN-CODE
      CP-CURS-FIELD := POS(XPUNSH1L.UN-ZAK)
      ESCAPE ROUTINE
    END-IF
  END-IF
  IF XPUNSH1L.UN-PODR = 0  IGNORE
*   MOVE 2004 TO #RETURN-CODE
*   CP-CURS-FIELD := POS(XPUNSH1L.UN-PODR)
*   ESCAPE ROUTINE
    ELSE
    CALLNAT 'GETNMPO' OG-IDENT-G XPUNSH1L.UN-PODR NMPO
    IF NMPO = ' '
      MOVE 2014 TO #RETURN-CODE
      CP-CURS-FIELD := POS(XPUNSH1L.UN-PODR)
      ESCAPE ROUTINE
    END-IF
  END-IF
  IF #OBJECT = "NEW"
     FN1. FIND NUMBER AU-UNIT UN-CODE = XPUNSH1L.UN-CODE
     IF *NUMBER(FN1.) > 0
        MOVE 2009 TO #RETURN-CODE
        MOVE XPUNSH1L.UN-CODE TO #ADDITION-ERROR
        CP-CURS-FIELD := POS(XPUNSH1L.UN-CODE)
        ESCAPE ROUTINE
     END-IF
  END-IF
/*
END-SUBROUTINE
/*
DEFINE SUBROUTINE OBJECT-TO-SCREEN
  MOVE BY NAME XPUNSH0A TO XPUNSH1L
END-SUBROUTINE
/*
DEFINE SUBROUTINE SCREEN-TO-OBJECT
  MOVE BY NAME XPUNSH1L TO XPUNSH0A
END-SUBROUTINE
/*
DEFINE SUBROUTINE READ-RECORD
  IF #UN-CODE NE 0  THEN
     FIND AU-UNIT UN-CODE = #UN-CODE
        MOVE BY NAME AU-UNIT TO XPUNSH0A
     END-FIND
  ELSE
     MOVE 2003 TO #RETURN-CODE
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE STORE-OBJECT
  DECIDE ON FIRST VALUE #STATUS
     VALUE "NEW-OBJECT"
        VIEWSTAT.OG-ID := XPXXCO0L.OSN-GROUP
        VIEWSTAT.ST-F := XPXXCO0L.CODE-UNIT
        VIEWSTAT.CT-F := XPUNSH0A.UN-CODE
        MOVE XPUNSH0A.UN-NAME TO VIEWSTAT.NM-OG
        STORE VIEWSTAT
        MOVE BY NAME XPUNSH0A TO AU-UNIT
        STORE AU-UNIT
     VALUE "EDIT-OBJECT"
        IF #UN-CODE NE 0  THEN
           FIND (1) AU-UNIT UN-CODE = #UN-CODE
              IF NO RECORDS
                 MOVE 2003 TO #RETURN-CODE
                 ESCAPE ROUTINE
              END-NOREC
              MOVE BY NAME XPUNSH0A TO AU-UNIT
              UPDATE
           END-FIND
           /*
           OG1 := XPXXCO0L.OSN-GROUP
           ST1 := XPXXCO0L.CODE-UNIT
           CD1 := #UN-CODE
           FIND VIEWSTAT OG-ST = KEYST1
              VIEWSTAT.CT-F := XPUNSH0A.UN-CODE
              MOVE XPUNSH0A.UN-NAME TO VIEWSTAT.NM-OG
              UPDATE
           END-FIND
        ELSE
           MOVE #UN-CODE TO #ADDITION-ERROR
           MOVE 2006 TO #RETURN-CODE
        END-IF
     ANY VALUE
        END OF TRANSACTION
     NONE VALUE IGNORE
  END-DECIDE
END-SUBROUTINE
/*
DEFINE SUBROUTINE SEARCH-UN
 /* RESET #COUNT #NUMBER
  DECIDE FOR FIRST CONDITION
     WHEN XPUNSC0L.UN-CODE NE 0 AND XPUNSC0L.UN-NAME EQ ' '
        FIND AU-UNIT UN-CODE = XPUNSC0L.UN-CODE
           MOVE BY NAME AU-UNIT TO XPUNSH0L
           PERFORM STACK-PUSH
        END-FIND
     WHEN XPUNSC0L.UN-CODE NE 0 AND XPUNSC0L.UN-NAME NE ' '
        FIND AU-UNIT UN-CODE = XPUNSC0L.UN-CODE
           IF AU-UNIT.UN-NAME = SCAN XPUNSC0L.UN-NAME
           AND XPUNSC0L.UN-BS = 0 OR = AU-UNIT.UN-BS
              MOVE BY NAME AU-UNIT TO XPUNSH0L
              PERFORM STACK-PUSH
           END-IF
        END-FIND
     WHEN XPUNSC0L.UN-CODE = 0 AND XPUNSC0L.UN-NAME NE ' '
        FIND AU-UNIT UN-CODE NE 0
           IF AU-UNIT.UN-NAME = SCAN XPUNSC0L.UN-NAME
           AND XPUNSC0L.UN-BS = 0 OR = AU-UNIT.UN-BS
              MOVE BY NAME AU-UNIT TO XPUNSH0L
              PERFORM STACK-PUSH
           END-IF
        END-FIND
     WHEN NONE
        FIND AU-UNIT UN-CODE NE 0
          IF  XPUNSC0L.UN-BS = 0 OR = AU-UNIT.UN-BS
           MOVE BY NAME AU-UNIT TO XPUNSH0L
           PERFORM STACK-PUSH
          END-IF
        END-FIND
  END-DECIDE
END-SUBROUTINE
/*
DEFINE SUBROUTINE LIST-VIEW
  RESET #I XPUNSR0L.STRING(*)
  MOVE (AD=PN) TO XPUNSR0L.CMD-Z(*)
  FOR #L1 = #LS-START TO #LS-END
     IF XPUNSH0L.STACK-LEN < #L1
        MOVE TRUE TO #LIST-END
        ESCAPE BOTTOM
     END-IF
     MOVE #L1 TO XPUNSH0L.STACK-POS
     PERFORM STACK-READ
     ADD 1 TO #I
     MOVE BY NAME XPUNSH0L TO STRING(#I)
     MOVE XPUNSH0L.STACK-POS TO XPUNSR0L.ELEM-STACK(#I)
     RESET XPUNSR0L.CMD-Z(#I)
     IF XPUNSH0L.STACK-LEN = #L1
        MOVE TRUE TO #LIST-END
        ESCAPE BOTTOM
     END-IF
  END-FOR
END-SUBROUTINE
/*
DEFINE SUBROUTINE SELECT-OBJECT
  DECIDE FOR FIRST CONDITION
     WHEN *CURS-FIELD = POS(XPUNSH1L.UN-ISP)
       CALLNAT 'SELVON' OG-IDENT-G XPUNSH1L.UN-ISP NM30
       NMOG := NM30
     WHEN *CURS-FIELD = POS(XPUNSH1L.UN-ZAK)
       CALLNAT 'SELZAKN' OG-IDENT-G XPUNSH1L.UN-ZAK NM30
       NMZK := NM30
     WHEN *CURS-FIELD = POS(XPUNSH1L.UN-PODR)
       CALLNAT 'SELVON' OG-IDENT-G XPUNSH1L.UN-PODR NM30
       NMPO := NM30
    WHEN NONE IGNORE
  END-DECIDE
END-SUBROUTINE
/*
DEFINE SUBROUTINE EXCEL-OBJECT
  SET WINDOW 'PARAM'
  INPUT(IP=OFF SG=OFF) 'Счет' KEYSSSS / 'Период' #DT
  IF *PF-KEY NE 'PF3'
    IF KEYSSSS = 0  REINPUT 'Счет' ALARM  END-IF
    #FPATH := 'C:\R26\WKF10.FLE'
    INCLUDE FILEPATH '10' '12'
    RECORD-MODE := 'I'  HEIGHT(1) := 30
    WORK-FILE-NAME-NEW := 'C:\R26\WKF10.FLE'
    PAPER-ORIENTATION := 'LANDSCAP'
    HEADER-LEFT-TO-RIGHT(1) := 'ОАО ВПК Машиностроение'
    HEADER-LEFT-TO-RIGHT(2) := KEYSSSS
    HEADER-LEFT-TO-RIGHT(3) := #DT
    EXAMINE HEADER-LEFT-TO-RIGHT(3) FOR '<' REPLACE ' '
    EXAMINE HEADER-LEFT-TO-RIGHT(3) FOR '>' REPLACE ' '
    MOVE LEFT HEADER-LEFT-TO-RIGHT(3) TO HEADER-LEFT-TO-RIGHT(3)
    FOOTER-LEFT-TO-RIGHT(1) := '&Д'
    COMPRESS *DATG *TIME INTO FOOTER-LEFT-TO-RIGHT (2)
    FOOTER-LEFT-TO-RIGHT(3) := '&С'
    HOW-MUCH-ROWS := 10
    EXL-PARM.STYLE (1:HOW-MUCH-ROWS) := 'table-row-gray'
    CELL(1) := 'Инв.номер'  EXL-PARM.WIDTH(1) := 30  ADD-INFO(1) := 'x:num'
    CELL(2) := 'Наименование'  EXL-PARM.WIDTH(2) := 200
    CELL(3) := 'Первонач. <br> стоимость'
    CELL(4) := 'Сальдо'  EXL-PARM.WIDTH(3:4) := 70
    ADD-INFO(3:4) := 'x:num'
    CELL(5) := 'Договор'  EXL-PARM.WIDTH(5) := 200
    CELL(6) := 'Документ'  EXL-PARM.WIDTH(6) := 100
    CELL(7) := 'Основание'  EXL-PARM.WIDTH(7) := 200
    CELL(8) := 'Заказ'  EXL-PARM.WIDTH(8) := 70
    CELL(9) := 'Исполнитель'  EXL-PARM.WIDTH(9:10) := 150
    CELL(10) := 'Заказчик'
    EXL-PARM.STYLE (1) := 'table-row-gray-num'
    EXL-PARM.STYLE (3:4) := 'table-row-gray-num'
    IF #OPSYS NE 'W'  CALLNAT 'EXL-FH' #FPATH #COMMAND EXL-PARM
      ELSE  CALLNAT 'EXL-FORM' #FPATH #COMMAND EXL-PARM
    END-IF
    RECORD-MODE := 'W'  RESET #I HEIGHT(1)
    EXL-PARM.STYLE (1:HOW-MUCH-ROWS) := 'table-row'
    EXL-PARM.STYLE (1) := 'table-row-num'
    EXL-PARM.STYLE (3:4) := 'table-row-num'
    FIND AU-UNIT UN-CODE = 1 THRU 999999
      ACCEPT AU-UNIT.UN-BS = KEYSSSS
      RESET #SUMM
      FIND IBS-OBJ-FILE1 OG-OS = KEYSS AND DT-ID = #DT
        EXAMINE IBS-OBJ-FILE1.KK-SS(*) 'UNIT' GIVING INDEX #J
        IF #J NE 0 AND IBS-OBJ-FILE1.KD-SS(#J) = AU-UNIT.UN-CODE
        AND SU-RU NE 0
          IF BO-ID EQ 1  ADD SU-RU TO #SUMM
            ELSE  SUBTRACT SU-RU FROM #SUMM
          END-IF
        END-IF
      END-FIND
      CELL(1) := AU-UNIT.UN-CODE  CELL(2) := AU-UNIT.UN-NAME
      MOVE EDITED AU-UNIT.UN-FIRST-PRICE(EM=-Z(12)9.99) TO CELL(3)
      MOVE EDITED #SUMM(EM=-Z(12)9.99) TO CELL(4)
      CELL(5) := AU-UNIT.UN-DOG
      COMPRESS AU-UNIT.UN-DOC-TYPE AU-UNIT.UN-DOC-NUM
      AU-UNIT.UN-DOC-DATE TO CELL(6)
      CELL(7) := AU-UNIT.UN-OSN  CELL(8) := AU-UNIT.UN-ZAK
      IF AU-UNIT.UN-ISP NE 0
        CALLNAT 'GETNMVO' OG-IDENT-G AU-UNIT.UN-ISP NMOG
        COMPRESS AU-UNIT.UN-ISP NMOG TO CELL(9)
        ELSE  RESET CELL(9)
      END-IF
      IF AU-UNIT.UN-PODR NE 0
        CALLNAT 'GETNMPO' OG-IDENT-G AU-UNIT.UN-PODR NMPO
        COMPRESS AU-UNIT.UN-PODR NMPO TO CELL(10)
        ELSE  RESET CELL(10)
      END-IF
      IF #OPSYS NE 'W'  CALLNAT 'EXL-FH' #FPATH #COMMAND EXL-PARM
        ELSE  CALLNAT 'EXL-FORM' #FPATH #COMMAND EXL-PARM
      END-IF
      ADD 1 TO #I
    END-FIND
    IF #I > 0  RECORD-MODE := 'C'
      IF #OPSYS NE 'W'
        CALLNAT 'EXL-FH' #FPATH #COMMAND EXL-PARM
        ELSE  CALLNAT 'EXL-FORM' #FPATH #COMMAND EXL-PARM
      END-IF
      ELSE  REINPUT 'Нет данных'
    END-IF
  END-IF
  #STATUS := "UN-CRITERY"
  SET WINDOW OFF
END-SUBROUTINE
/*
INCLUDE XXSTMN0C "XPUNSH0L" "XPUNSH0LC"
        "STACK-INIT" "STACK-FREE" "STACK-REALLOC"
        "STACK-PUSH" "STACK-READ" "STACK-WRITE" "STACK-SORT"
END-SUBROUTINE
/*
END




