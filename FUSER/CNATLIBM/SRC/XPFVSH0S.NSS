* >Natural Source Header 000000 /*<RO>>
* :NatName XPFVSH0S
* :UID LMV
* :Mode S
* :CP
* :Date 20080323
* :Time 2321330
* <Natural Source Header /*<<RO>
DEFINE DATA
/*
LOCAL USING AUFVXX0L
LOCAL USING XPFVSC0L
LOCAL USING XPFVSR0L
/*
LOCAL USING XPFVSH0A
LOCAL USING XPFVSH0L
LOCAL USING XPFVSH1L
LOCAL USING XPCPXX0L
LOCAL USING XPFVP60L
LOCAL USING HLPST
LOCAL USING STAN19L
LOCAL USING XPXXCO0L
LOCAL USING LCLSTAT
LOCAL
1 #RETURN-CODE (I4)
1 #ADDITION-ERROR (A35)
1 #STATUS  (A15)
1 #RESULT  (I4)
1 #VIEW-TEXT (A40)
1 #LS-START (I2) INIT <1>
1 #LS-END (I2) INIT <15>
1 #LIST-END (L) INIT <FALSE>
1 #KOL-STRING (I4) INIT <15>
1 #TEXT-VIEW  (A40)
1 #OBJECT  (A10)
1 #FV-CODE (N5)
1 #TITLE-ARCHIV (A40)
/*
1 #CP-MSG-POS (I2)
1 #C    (I2)
1 #I       (I4)
1 #STACK-I (I2)
1 #L1      (I2)
1 #L2      (I2)
1 KEYST1(A16)
1 REDEFINE KEYST1
  2 OG1(N5)  2 ST1(A5)  2 CD1(N6)
END-DEFINE
/*
DEFINE SUBROUTINE XPFVSH0S
/*
DEFINE WINDOW RESULT-FV
  SIZE 20*80
  BASE 4/1
  TITLE 'Найденные элементы финансовых вложений.'
  FRAMED ON
/*
DEFINE WINDOW CRITERY-FV
  SIZE 18*80
  BASE 7/1
  TITLE 'Параметры отбора элементов финансовых вложений.'
  FRAMED ON
/*
DEFINE WINDOW VIEW-ARCHIV
  SIZE 15*50
  BASE 8/2
  TITLE #TITLE-ARCHIV
  FRAMED ON
/***********************************

/* init
MOVE "FV-CRITERY" TO #STATUS
/* основной цикл
REPEAT
  DECIDE ON FIRST VALUE #STATUS
     VALUE "FV-CRITERY"
        PERFORM FV-CRITERY
     VALUE "NEW-OBJECT"
        #OBJECT := "NEW"
        PERFORM NEW-OBJECT
     VALUE "EDIT-OBJECT"
        #OBJECT := "EDIT"
        PERFORM NEW-OBJECT
     VALUE "LIST-OBJECT"
        PERFORM LIST-OBJECT
     NONE VALUE
        WRITE "ERROR PARAMETERS"
        MOVE "EXIT" TO #STATUS
  END-DECIDE
  UNTIL #STATUS = "EXIT"
END-REPEAT
/*
DEFINE SUBROUTINE LIST-OBJECT  /* отображение найденных объектов
  SET WINDOW 'RESULT-FV'
  SET KEY NAMED OFF
  SET KEY ALL
  SET KEY PF2 NAMED 'Новый'
  SET KEY PF5 NAMED 'Измен'
  SET KEY PF3 NAMED 'Выход'
  SET KEY CLR NAMED 'Выход'
  SET KEY PF7 NAMED 'Вверх'
  SET KEY PGUP NAMED 'Вверх'
  SET KEY PF8 NAMED 'Вниз'
  SET KEY PGDN NAMED 'Вниз'
  SET KEY PF9 NAMED 'Начал'
  SET KEY PF10 NAMED 'Конец'
  /*
  REPEAT
     PERFORM LIST-VIEW
/*
     IF #RETURN-CODE NE 0 THEN
        INPUT WITH TEXT *#RETURN-CODE , #ADDITION-ERROR
        MARK CP-CURS-FIELD USING MAP 'XPFVSR0M'
        RESET #RETURN-CODE #ADDITION-ERROR
     ELSE
        INPUT MARK CP-CURS-FIELD USING MAP 'XPFVSR0M'
     END-IF
     DECIDE ON FIRST VALUE *PF-KEY
        VALUE "PF2"
           MOVE "NEW-OBJECT" TO #STATUS
           SET WINDOW OFF
           PERFORM STACK-FREE
           ESCAPE BOTTOM
        VALUE "PF5"
           FOR #I = 1 TO #KOL-STRING
              IF *CURS-FIELD EQ POS(CMD(#I)) THEN
                 MOVE "EDIT-OBJECT" TO #STATUS
                 MOVE XPFVSR0L.ELEM-STACK(#I) TO XPFVSH0L.STACK-POS
                 PERFORM STACK-READ
                 RESET #FV-CODE
                 MOVE XPFVSR0L.FV-CODE(#I) TO #FV-CODE
                 ESCAPE BOTTOM
              END-IF
           END-FOR
           SET WINDOW OFF
           PERFORM STACK-FREE
           ESCAPE BOTTOM
        VALUE "PF3" , "CLR"
           SET WINDOW OFF
           MOVE "EXIT" TO #STATUS
           PERFORM STACK-FREE
           ESCAPE BOTTOM
           /* очистить за собой стеки
        VALUE "PF7" , "PGUP"
           IF #LIST-END = TRUE
              #LIST-END := FALSE
           END-IF
           #LS-START := #LS-START  - #KOL-STRING
           #LS-END := #LS-END - #KOL-STRING
           IF #LS-START < 1 THEN
              #LS-START := 1
              #LS-END := #KOL-STRING
           END-IF
        VALUE "PF8" , "PGDN"
           IF #LIST-END = FALSE
              ADD #KOL-STRING TO #LS-START
              ADD #KOL-STRING TO #LS-END
           END-IF
        VALUE "PF9" /* начало
           #LIST-END := FALSE
           #LS-START := 1
           #LS-END := #KOL-STRING
        VALUE "PF10" /* конец
           #LIST-END := TRUE
           #LS-START := XPFVSH0L.STACK-LEN - #KOL-STRING + 1
           #LS-END := XPFVSH0L.STACK-LEN
           IF #LS-START <= 0 THEN
              #LS-START := 1
              #LS-END := #KOL-STRING
           END-IF
        NONE VALUE
           MOVE 2002 TO #RETURN-CODE
           MOVE *PF-KEY TO #ADDITION-ERROR
     END-DECIDE
  END-REPEAT
END-SUBROUTINE
/*
DEFINE SUBROUTINE NEW-OBJECT   /* создание нового или редактирование объекта
  SET KEY NAMED OFF
  SET KEY ALL
  SET KEY ENTR NAMED 'Прове'
  IF #OBJECT = "NEW"
     SET KEY PF5 NAMED 'Cохр'
  ELSE
     PERFORM READ-RECORD
     PERFORM OBJECT-TO-SCREEN
     SET KEY PF5 NAMED 'Измен'
     SET KEY PF6 NAMED 'Архив'
  END-IF
  SET KEY PF3 NAMED 'Выход'
  SET KEY CLR NAMED 'Выход'
/*  SET KEY PF11 NAMED 'Выбор'
/*
  REPEAT
     IF #RETURN-CODE NE 0 THEN
        INPUT WITH TEXT *#RETURN-CODE , #ADDITION-ERROR
        MARK CP-CURS-FIELD USING MAP 'XPFVSH0M'
        RESET #RETURN-CODE #ADDITION-ERROR
     ELSE
        INPUT MARK CP-CURS-FIELD USING MAP 'XPFVSH0M'
     END-IF
     DECIDE ON FIRST VALUE *PF-KEY
        VALUE "PF3" , "CLR"
           MOVE "EXIT" TO #STATUS
           RESET XPFVSH0A XPFVSH1L
           PERFORM STACK-FREE
           ESCAPE BOTTOM
           /* очистить за собой стеки
        VALUE "PF5"
           PERFORM CHECK-SCREEN
           IF  #RETURN-CODE NE 0
              ESCAPE TOP
           END-IF
           PERFORM SCREEN-TO-OBJECT
           IF  #RETURN-CODE NE 0
              ESCAPE TOP
           END-IF
           PERFORM STORE-OBJECT
           IF  #RETURN-CODE NE 0
              ESCAPE TOP
           ELSE
              IF #OBJECT = "NEW"
                 COMPRESS 'Объект ' XPFVSH1L.FV-CODE ' сохранен в БД.' TO #TEXT-VIEW
              ELSE
                 COMPRESS 'Объект ' XPFVSH1L.FV-CODE ' изменен в БД.' TO #TEXT-VIEW
              END-IF
           END-IF
           MOVE  "FV-CRITERY" TO #STATUS
           PERFORM STACK-FREE
           RESET XPFVSH0A XPFVSH1L
           ESCAPE ROUTINE
        VALUE "PF6"
           PERFORM VIEW-ARCHIV
        VALUE "ENTR"
           PERFORM CHECK-SCREEN
           IF  #RETURN-CODE NE 0
              ESCAPE TOP
           END-IF
        VALUE "PF11"
           PERFORM SELECT-OBJECT
           IF  #RETURN-CODE NE 0
              ESCAPE TOP
           END-IF
        NONE VALUE
           MOVE 2002 TO #RETURN-CODE
           MOVE *PF-KEY TO #ADDITION-ERROR
     END-DECIDE
  END-REPEAT
END-SUBROUTINE
/* отбор по критерию ниокр
DEFINE SUBROUTINE FV-CRITERY /* критерий дл  пердварительного отбора объектов
  SET WINDOW 'CRITERY-FV'
  SET KEY NAMED OFF
  SET KEY ALL
  SET KEY ENTR NAMED 'Искат'
  SET KEY PF3 NAMED 'Выход'
  SET KEY CLR NAMED 'Выход'
  SET KEY PF2 NAMED 'Новый'
  REPEAT
     IF #RETURN-CODE NE 0 THEN
        INPUT WITH TEXT *#RETURN-CODE , #ADDITION-ERROR
        MARK CP-CURS-FIELD USING MAP 'XPfvSC0M'
        RESET #RETURN-CODE #ADDITION-ERROR
     ELSE
        IF #TEXT-VIEW NE ' '
           INPUT WITH TEXT #TEXT-VIEW MARK CP-CURS-FIELD USING MAP 'XPfvSC0M'
           RESET #TEXT-VIEW
        ELSE
           INPUT MARK CP-CURS-FIELD USING MAP 'XPfvSC0M'
        END-IF
     END-IF
     DECIDE ON FIRST VALUE *PF-KEY
        VALUE "PF3" , "CLR"
           MOVE "EXIT" TO #STATUS
           ESCAPE BOTTOM
           /* очистить за собой стеки
        VALUE "PF2"
           MOVE "NEW-OBJECT" TO #STATUS
           ESCAPE BOTTOM
        VALUE "ENTR"
           PERFORM SEARCH-FV
           IF XPFVSH0L.STACK-LEN > 0 THEN
              IF XPFVSH0L.STACK-LEN = 1
                 RESET #FV-CODE
                 MOVE XPFVSH0L.FV-CODE TO #FV-CODE
                 PERFORM STACK-FREE
                 MOVE "EDIT-OBJECT" TO #STATUS
              ELSE
                 MOVE "LIST-OBJECT" TO #STATUS
              END-IF
           ELSE
              MOVE 2001 TO #RETURN-CODE
           END-IF
           ESCAPE BOTTOM
        NONE VALUE
           MOVE 2002 TO #RETURN-CODE
           MOVE *PF-KEY TO #ADDITION-ERROR
     END-DECIDE
  END-REPEAT
SET WINDOW OFF
END-SUBROUTINE
/* подпрограмма проверки экрана
DEFINE SUBROUTINE CHECK-SCREEN
  IF XPFVSH1L.FV-CODE = 0
     MOVE 2004 TO #RETURN-CODE
     CP-CURS-FIELD := POS(XPFVSH1L.FV-CODE)
     ESCAPE ROUTINE
  END-IF
  /*
  IF #OBJECT = "NEW"
     FN1. FIND NUMBER AU-FINVLOG FV-CODE = XPFVSH1L.FV-CODE
     IF *NUMBER(FN1.) > 0
        MOVE 2009 TO #RETURN-CODE
        MOVE XPFVSH1L.FV-CODE TO #ADDITION-ERROR
        CP-CURS-FIELD := POS(XPFVSH1L.FV-CODE)
        ESCAPE ROUTINE
     END-IF
  END-IF
  /*
  IF XPFVSH1L.FV-NAME = ' '
     MOVE 2004 TO #RETURN-CODE
     CP-CURS-FIELD := POS(XPFVSH1L.FV-NAME)
     ESCAPE ROUTINE
  END-IF
    /*
  IF XPFVSH1L.FV-AKCII NE ' '
     IF XPFVSH1L.FV-AKCII NE 'О' AND
        XPFVSH1L.FV-AKCII NE 'П' THEN
           MOVE 2005 TO #RETURN-CODE
           CP-CURS-FIELD := POS(XPFVSH1L.FV-AKCII)
           ESCAPE ROUTINE
     END-IF
  END-IF
/*
  MOVE C*FV-CEN-BUMAGI-GM TO #I
  IF #I NE 0
     IF XPFVSH0A.FV-GM-SUMMA(#I) NE XPFVSH1L.FV-GM-SUMMA-M
        MOVE EDITED *DATX (EM=YYYYMMDD) TO XPFVSH1L.FV-GM-DATA-A
     END-IF
  ELSE
     IF XPFVSH1L.FV-GM-SUMMA-M NE 0
        MOVE EDITED *DATX (EM=YYYYMMDD) TO XPFVSH1L.FV-GM-DATA-A
     END-IF
  END-IF
/*
  MOVE C*FV-CEN-BUMAGI-DO TO #I
  IF #I NE 0
     IF XPFVSH0A.FV-DO-SUMMA(#I) NE XPFVSH1L.FV-DO-SUMMA-M
        MOVE EDITED *DATX (EM=YYYYMMDD) TO XPFVSH1L.FV-DO-DATA-A
     END-IF
  ELSE
     IF XPFVSH1L.FV-DO-SUMMA-M NE 0
        MOVE EDITED *DATX (EM=YYYYMMDD) TO XPFVSH1L.FV-DO-DATA-A
     END-IF
  END-IF

/*
* ВСТАВКА
/*  INCLUDE XPXXSP0C 'XPNISH1L.NI-NAPRAVL-DEYITEL'
/*  'XPNISH1L.NI-NAPRAVL-DEYITEL-A' 'XPXXCO0L.CODE-VIDE-DEATEL'
/*
END-SUBROUTINE
/*
DEFINE SUBROUTINE OBJECT-TO-SCREEN
  MOVE BY NAME XPFVSH0A TO XPFVSH1L
  /*
  IF C*FV-CEN-BUMAGI-GM NE 0
     MOVE C*FV-CEN-BUMAGI-GM TO #I
     MOVE XPFVSH0A.FV-GM-SUMMA(#I) TO XPFVSH1L.FV-GM-SUMMA-M
     MOVE EDITED XPFVSH0A.FV-GM-DATA(#I) (EM=YYYYMMDD)
           TO XPFVSH1L.FV-GM-DATA-A
  END-IF
  /*
  IF C*FV-CEN-BUMAGI-DO NE 0
     MOVE C*FV-CEN-BUMAGI-DO TO #I
     MOVE XPFVSH0A.FV-DO-SUMMA(#I) TO XPFVSH1L.FV-DO-SUMMA-M
     MOVE EDITED XPFVSH0A.FV-DO-DATA(#I) (EM=YYYYMMDD)
           TO XPFVSH1L.FV-DO-DATA-A
  END-IF
* ВСТАВКА
/*  INCLUDE XPXXSP1C 'XPNISH1L.NI-NAPRAVL-DEYITEL'
/*  'XPNISH1L.NI-NAPRAVL-DEYITEL-A' 'XPXXCO0L.CODE-VIDE-DEATEL'
/*
END-SUBROUTINE
/*
DEFINE SUBROUTINE SCREEN-TO-OBJECT
/* формирование архивов
  MOVE C*FV-CEN-BUMAGI-GM TO #I
  IF #I NE 0
     IF XPFVSH0A.FV-GM-SUMMA(#I) NE XPFVSH1L.FV-GM-SUMMA-M
        #I := C*FV-CEN-BUMAGI-GM + 1
        IF #I > 10
           MOVE 2010 TO #RETURN-CODE
           ESCAPE ROUTINE
        END-IF
        /*
        MOVE XPFVSH1L.FV-GM-SUMMA-M TO XPFVSH0A.FV-GM-SUMMA(#I)
        MOVE EDITED XPFVSH1L.FV-GM-DATA-A
                 TO XPFVSH0A.FV-GM-DATA(#I)(EM=YYYYMMDD)
     END-IF
  ELSE
     IF XPFVSH1L.FV-GM-DATA-N NE 0
        #I := C*FV-CEN-BUMAGI-GM + 1
        MOVE XPFVSH1L.FV-GM-SUMMA-M TO XPFVSH0A.FV-GM-SUMMA(#I)
        MOVE EDITED XPFVSH1L.FV-GM-DATA-A
                 TO XPFVSH0A.FV-GM-DATA(#I)(EM=YYYYMMDD)
     END-IF
  END-IF
/*
  MOVE C*FV-CEN-BUMAGI-DO TO #I
  IF #I NE 0
     IF XPFVSH0A.FV-DO-SUMMA(#I) NE XPFVSH1L.FV-DO-SUMMA-M
        #I := C*FV-CEN-BUMAGI-DO + 1
        IF #I > 10
           MOVE 2010 TO #RETURN-CODE
           ESCAPE ROUTINE
        END-IF
        /*
        MOVE XPFVSH1L.FV-DO-SUMMA-M TO XPFVSH0A.FV-DO-SUMMA(#I)
        MOVE EDITED XPFVSH1L.FV-DO-DATA-A
                 TO XPFVSH0A.FV-DO-DATA(#I)(EM=YYYYMMDD)
     END-IF
  ELSE
     IF XPFVSH1L.FV-DO-DATA-N NE 0
        #I := C*FV-CEN-BUMAGI-DO + 1
        MOVE XPFVSH1L.FV-DO-SUMMA-M TO XPFVSH0A.FV-DO-SUMMA(#I)
        MOVE EDITED XPFVSH1L.FV-DO-DATA-A
                 TO XPFVSH0A.FV-DO-DATA(#I)(EM=YYYYMMDD)
     END-IF
  END-IF
/*
  MOVE BY NAME XPFVSH1L TO XPFVSH0A
/*
END-SUBROUTINE
/*
DEFINE SUBROUTINE READ-RECORD
  IF #FV-CODE NE 0  THEN
     FIND AU-FINVLOG FV-CODE = #FV-CODE
        MOVE BY NAME AU-FINVLOG TO XPFVSH0A
     END-FIND
  ELSE
     MOVE 2003 TO #RETURN-CODE
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE STORE-OBJECT
  DECIDE ON FIRST VALUE #STATUS
     VALUE "NEW-OBJECT"
        VIEWSTAT.OG-ID := XPXXCO0L.OSN-GROUP
        VIEWSTAT.ST-F := XPXXCO0L.CODE-FV
        VIEWSTAT.CT-F := XPFVSH0A.FV-CODE
        MOVE XPFVSH0A.FV-NAME TO VIEWSTAT.NM-OG
        STORE VIEWSTAT
        MOVE BY NAME XPFVSH0A TO AU-FINVLOG
        STORE AU-FINVLOG
     VALUE "EDIT-OBJECT"
        IF #FV-CODE NE 0  THEN
           FIND (1) AU-FINVLOG FV-CODE = #FV-CODE
              IF NO RECORDS
                 MOVE 2003 TO #RETURN-CODE
                 ESCAPE ROUTINE
              END-NOREC
              MOVE BY NAME XPFVSH0A TO AU-FINVLOG
              UPDATE
           END-FIND
           /*
           OG1 := XPXXCO0L.OSN-GROUP
           ST1 := XPXXCO0L.CODE-FV
           CD1 := #FV-CODE
           FIND VIEWSTAT OG-ST = KEYST1
              VIEWSTAT.CT-F := XPFVSH0A.FV-CODE
              MOVE XPFVSH0A.FV-NAME TO VIEWSTAT.NM-OG
              UPDATE
           END-FIND
        ELSE
           MOVE #FV-CODE TO #ADDITION-ERROR
           MOVE 2006 TO #RETURN-CODE
        END-IF
     ANY VALUE
        END OF TRANSACTION
     NONE VALUE IGNORE
  END-DECIDE
END-SUBROUTINE
/*
DEFINE SUBROUTINE SEARCH-FV
 /* RESET #COUNT #NUMBER
  DECIDE FOR FIRST CONDITION
     WHEN XPFVSC0L.FV-CODE NE 0 AND XPFVSC0L.FV-NAME EQ ' '
        FIND AU-FINVLOG FV-CODE = XPFVSC0L.FV-CODE
           MOVE BY NAME AU-FINVLOG TO XPFVSH0L
           PERFORM STACK-PUSH
        END-FIND
     WHEN XPFVSC0L.FV-CODE NE 0 AND XPFVSC0L.FV-NAME NE ' '
        FIND AU-FINVLOG FV-CODE = XPFVSC0L.FV-CODE
           IF AU-FINVLOG.FV-NAME = SCAN XPFVSC0L.FV-NAME
              MOVE BY NAME AU-FINVLOG TO XPFVSH0L
              PERFORM STACK-PUSH
           END-IF
        END-FIND
     WHEN XPFVSC0L.FV-CODE = 0 AND XPFVSC0L.FV-NAME NE ' '
        FIND AU-FINVLOG FV-CODE NE 0
           IF AU-FINVLOG.FV-NAME = SCAN XPFVSC0L.FV-NAME
              MOVE BY NAME AU-FINVLOG TO XPFVSH0L
              PERFORM STACK-PUSH
           END-IF
        END-FIND
     WHEN NONE
        FIND AU-FINVLOG FV-CODE NE 0
           MOVE BY NAME AU-FINVLOG TO XPFVSH0L
           PERFORM STACK-PUSH
        END-FIND
  END-DECIDE
END-SUBROUTINE
/*
DEFINE SUBROUTINE LIST-VIEW
  RESET #I XPFVSR0L.STRING(*)
  MOVE (AD=PN) TO XPFVSR0L.CMD-Z(*)
  FOR #L1 = #LS-START TO #LS-END
     IF XPFVSH0L.STACK-LEN < #L1
        MOVE TRUE TO #LIST-END
        ESCAPE BOTTOM
     END-IF
     MOVE #L1 TO XPFVSH0L.STACK-POS
     PERFORM STACK-READ
     ADD 1 TO #I
     MOVE BY NAME XPFVSH0L TO STRING(#I)
     MOVE XPFVSH0L.STACK-POS TO XPFVSR0L.ELEM-STACK(#I)
     RESET XPFVSR0L.CMD-Z(#I)
     IF XPFVSH0L.STACK-LEN = #L1
        MOVE TRUE TO #LIST-END
        ESCAPE BOTTOM
     END-IF
  END-FOR
END-SUBROUTINE
/*
DEFINE SUBROUTINE SELECT-OBJECT
  IGNORE
END-SUBROUTINE
/*
DEFINE SUBROUTINE VIEW-ARCHIV
  DECIDE FOR EVERY CONDITION
     WHEN *CURS-FIELD = POS(XPFVSH1L.FV-GM-SUMMA-M)
        IF C*FV-CEN-BUMAGI-GM = 0
           ESCAPE ROUTINE
        END-IF
        MOVE 'Государственные и муниципальные ценные бумаги ' TO #TITLE-ARCHIV
        MOVE 'Дата       Сумма' TO XPFVP60L.P6-TITLE
        SET WINDOW "VIEW-ARCHIV"
        SET KEY NAMED OFF
        SET KEY ALL
        SET KEY PF3 NAMED 'Выход'
        SET KEY CLR NAMED 'Выход'
        FOR #I = 1 TO C*FV-CEN-BUMAGI-GM
        MOVE AU-FINVLOG.FV-GM-SUMMA(#I) TO XPFVP60L.FV-NUMBERP132(#I)
        MOVE EDITED AU-FINVLOG.FV-GM-DATA(#I)(EM=YYYYMMDD)
                       TO XPFVP60L.FV-DATA-A(#I)
        END-FOR
        REPEAT
           INPUT USING MAP 'XPFVP60M'
           IF *PF-KEY = 'PF3' OR = 'CLR'

              ESCAPE BOTTOM
           END-IF
        END-REPEAT
        /*
        SET WINDOW OFF
                SET KEY NAMED OFF
        SET KEY ALL
        SET KEY ENTR NAMED 'Прове'
        IF #OBJECT = "NEW"
           SET KEY PF5 NAMED 'Cохр'
        ELSE
           SET KEY PF5 NAMED 'Измен'
           SET KEY PF6 NAMED 'Архив'
        END-IF
        SET KEY PF3 NAMED 'Выход'
        SET KEY CLR NAMED 'Выход'
     WHEN *CURS-FIELD = POS(XPFVSH1L.FV-DO-SUMMA-M)
        IF C*FV-CEN-BUMAGI-DO = 0
           ESCAPE ROUTINE
        END-IF
        MOVE 'Ценные бумаги других организаций' TO #TITLE-ARCHIV
        MOVE 'Дата       Сумма' TO XPFVP60L.P6-TITLE
        SET WINDOW "VIEW-ARCHIV"
        SET KEY NAMED OFF
        SET KEY ALL
        SET KEY PF3 NAMED 'Выход'
        SET KEY CLR NAMED 'Выход'
        FOR #I = 1 TO C*FV-CEN-BUMAGI-DO
        MOVE AU-FINVLOG.FV-DO-SUMMA(#I) TO XPFVP60L.FV-NUMBERP132(#I)
        MOVE EDITED AU-FINVLOG.FV-DO-DATA(#I)(EM=YYYYMMDD)
                       TO XPFVP60L.FV-DATA-A(#I)
        END-FOR
        REPEAT
           INPUT USING MAP 'XPFVP60M'
           IF *PF-KEY = 'PF3' OR = 'CLR'

              ESCAPE BOTTOM
           END-IF
        END-REPEAT
        /*
        SET WINDOW OFF
        /*
        SET KEY NAMED OFF
        SET KEY ALL
        SET KEY ENTR NAMED 'Прове'
        IF #OBJECT = "NEW"
           SET KEY PF5 NAMED 'Cохр'
        ELSE
           SET KEY PF5 NAMED 'Измен'
           SET KEY PF6 NAMED 'Архив'
        END-IF
        SET KEY PF3 NAMED 'Выход'
        SET KEY CLR NAMED 'Выход'
     WHEN NONE
        IGNORE
  END-DECIDE
END-SUBROUTINE
/*
INCLUDE XXSTMN0C "XPFVSH0L" "XPFVSH0LC"
        "STACK-INIT" "STACK-FREE" "STACK-REALLOC"
        "STACK-PUSH" "STACK-READ" "STACK-WRITE" "STACK-SORT"
END-SUBROUTINE
/*
END




