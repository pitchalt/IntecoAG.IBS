* >Natural Source Header 000000 /*<RO>>
* :NatName XPDGSH0S
* :UID TIROD
* :Mode S
* :CP
* :Date 20080407
* :Time 1152330
* <Natural Source Header /*<<RO>
DEFINE DATA
/*
LOCAL USING AUDGXX0L
LOCAL USING XPDGSC0L
LOCAL USING XPDGSR0L
/*
LOCAL USING XPDGSH0A
LOCAL USING XPDGSH0L
LOCAL USING XPDGSH1L
LOCAL USING XPCPXX0L
* ВСТАВКА
LOCAL USING HLPST
LOCAL USING STAN19L
LOCAL USING XPXXCO0L
LOCAL USING LCLSTAT
* КОНЕЦ ВСТАВКА
LOCAL
1 #RETURN-CODE (I4)
1 #ADDITION-ERROR (A35)
1 #STATUS  (A15)
1 #RESULT  (I4)
1 #VIEW-TEXT (A40)
1 #LS-START (I2) INIT <1>
1 #LS-END (I2) INIT <15>
1 #LIST-END (L) INIT <FALSE>
1 #KOL-STRING (I4) INIT <15>
1 #TEXT-VIEW  (A40)
1 #OBJECT  (A10)
1 #DG-CODE (N5)
/*
1 #CP-MSG-POS (I2)
1 #C    (I2)
1 #I       (I4)
1 #STACK-I (I2)
1 #L1      (I2)
1 #L2      (I2)
* ВСТАВКА
1 NMOG1(A30)
1 OG-IDENT-G (N5)
1 COD-VO (N5)
1 NM-VO (A30)
1 COD-ST (N5)
1 NM-VO1 (A50)
* КОНЕЦ ВСТАВКА
1 KEYST1(A16)
1 REDEFINE KEYST1
  2 OG1(N5)  2 ST1(A5)  2 CD1(N6)
END-DEFINE
/*
DEFINE SUBROUTINE XPDGSH0S
/*
DEFINE WINDOW RESULT-DOGOVOR
  SIZE 20*80
  BASE 4/1
  TITLE 'Найденные элементы, договора'
  FRAMED ON
/*
DEFINE WINDOW CRITERY-DOGOVOR
  SIZE 18*80
  BASE 7/1
  TITLE 'Параметры отбора элементов, договора.'
  FRAMED ON
/***********************************

/* init
MOVE "DG-CRITERY" TO #STATUS
/* основной цикл
REPEAT
  DECIDE ON FIRST VALUE #STATUS
     VALUE "DG-CRITERY"
        PERFORM DG-CRITERY
     VALUE "NEW-OBJECT"
        #OBJECT := "NEW"
        PERFORM NEW-OBJECT
     VALUE "EDIT-OBJECT"
        #OBJECT := "EDIT"
        PERFORM NEW-OBJECT
     VALUE "LIST-OBJECT"
        PERFORM LIST-OBJECT
     NONE VALUE
        WRITE "ERROR PARAMETERS"
        MOVE "EXIT" TO #STATUS
  END-DECIDE
  UNTIL #STATUS = "EXIT"
END-REPEAT
/*
DEFINE SUBROUTINE LIST-OBJECT  /* отображение найденных объектов
  SET WINDOW 'RESULT-DOGOVOR'
  SET KEY NAMED OFF
  SET KEY ALL
  SET KEY PF2 NAMED 'Новый'
  SET KEY PF5 NAMED 'Измен'
  SET KEY PF3 NAMED 'Выход'
  SET KEY CLR NAMED 'Выход'
  SET KEY PF7 NAMED 'Вверх'
  SET KEY PGUP NAMED 'Вверх'
  SET KEY PF8 NAMED 'Вниз'
  SET KEY PGDN NAMED 'Вниз'
  SET KEY PF9 NAMED 'Начал'
  SET KEY PF10 NAMED 'Конец'
  /*
  REPEAT
     PERFORM LIST-VIEW
/*
     IF #RETURN-CODE NE 0 THEN
        INPUT WITH TEXT *#RETURN-CODE , #ADDITION-ERROR
        MARK CP-CURS-FIELD USING MAP 'XPDGSR0M'
        RESET #RETURN-CODE #ADDITION-ERROR
     ELSE
        INPUT MARK CP-CURS-FIELD USING MAP 'XPDGSR0M'
     END-IF
     DECIDE ON FIRST VALUE *PF-KEY
        VALUE "PF2"
           MOVE "NEW-OBJECT" TO #STATUS
           SET WINDOW OFF
           PERFORM STACK-FREE
           ESCAPE BOTTOM
        VALUE "PF5"
           FOR #I = 1 TO #KOL-STRING
              IF *CURS-FIELD EQ POS(CMD(#I)) THEN
                 MOVE "EDIT-OBJECT" TO #STATUS
                 MOVE XPDGSR0L.ELEM-STACK(#I) TO XPDGSH0L.STACK-POS
                 PERFORM STACK-READ
                 RESET #DG-CODE
                 MOVE XPDGSR0L.DG-CODE(#I) TO #DG-CODE
                 ESCAPE BOTTOM
              END-IF
           END-FOR
           SET WINDOW OFF
           PERFORM STACK-FREE
           ESCAPE BOTTOM
        VALUE "PF3" , "CLR"
           SET WINDOW OFF
           MOVE "EXIT" TO #STATUS
           PERFORM STACK-FREE
           ESCAPE BOTTOM
           /* очистить за собой стеки
        VALUE "PF7" , "PGUP"
           IF #LIST-END = TRUE
              #LIST-END := FALSE
           END-IF
           #LS-START := #LS-START  - #KOL-STRING
           #LS-END := #LS-END - #KOL-STRING
           IF #LS-START < 1 THEN
              #LS-START := 1
              #LS-END := #KOL-STRING
           END-IF
        VALUE "PF8" , "PGDN"
           IF #LIST-END = FALSE
              ADD #KOL-STRING TO #LS-START
              ADD #KOL-STRING TO #LS-END
           END-IF
        VALUE "PF9" /* начало
           #LIST-END := FALSE
           #LS-START := 1
           #LS-END := #KOL-STRING
        VALUE "PF10" /* конец
           #LIST-END := TRUE
           #LS-START := XPDGSH0L.STACK-LEN - #KOL-STRING + 1
           #LS-END := XPDGSH0L.STACK-LEN
           IF #LS-START <= 0 THEN
              #LS-START := 1
              #LS-END := #KOL-STRING
           END-IF
        NONE VALUE
           MOVE 2002 TO #RETURN-CODE
           MOVE *PF-KEY TO #ADDITION-ERROR
     END-DECIDE
  END-REPEAT
END-SUBROUTINE
/*
DEFINE SUBROUTINE NEW-OBJECT   /* создание нового или редактирование объекта
  SET KEY NAMED OFF
  SET KEY ALL
  SET KEY ENTR NAMED 'Прове'
  IF #OBJECT = "NEW"
     SET KEY PF5 NAMED 'Cохр'
  ELSE
     PERFORM READ-RECORD
     PERFORM OBJECT-TO-SCREEN
     SET KEY PF5 NAMED 'Измен'
  END-IF
  SET KEY PF3 NAMED 'Выход'
  SET KEY CLR NAMED 'Выход'
  SET KEY PF11 NAMED 'Выбор'
/*
  REPEAT
     IF #RETURN-CODE NE 0 THEN
        INPUT WITH TEXT *#RETURN-CODE , #ADDITION-ERROR
        MARK CP-CURS-FIELD USING MAP 'XPDGSH0M'
        RESET #RETURN-CODE #ADDITION-ERROR
     ELSE
        INPUT MARK CP-CURS-FIELD USING MAP 'XPDGSH0M'
     END-IF
     DECIDE ON FIRST VALUE *PF-KEY
        VALUE "PF3" , "CLR"
           MOVE "EXIT" TO #STATUS
           RESET XPDGSH0A XPDGSH1L
           PERFORM STACK-FREE
           ESCAPE BOTTOM
           /* очистить за собой стеки
        VALUE "PF5"
           PERFORM CHECK-SCREEN
           IF  #RETURN-CODE NE 0
              ESCAPE TOP
           END-IF
           PERFORM SCREEN-TO-OBJECT
           IF  #RETURN-CODE NE 0
              ESCAPE TOP
           END-IF
           PERFORM STORE-OBJECT
           IF  #RETURN-CODE NE 0
              ESCAPE TOP
           ELSE
              IF #OBJECT = "NEW"
                 COMPRESS 'Объект ' XPDGSH1L.DG-CODE ' сохранен в БД.' TO #TEXT-VIEW
              ELSE
                 COMPRESS 'Объект ' XPDGSH1L.DG-CODE ' изменен в БД.' TO #TEXT-VIEW
              END-IF
           END-IF
           MOVE  "DG-CRITERY" TO #STATUS
           PERFORM STACK-FREE
           RESET XPDGSH0A XPDGSH1L
           ESCAPE ROUTINE
        VALUE "ENTR"
           PERFORM CHECK-SCREEN
           IF  #RETURN-CODE NE 0
              ESCAPE TOP
           END-IF
        VALUE "PF11"
           PERFORM SELECT-OBJECT
           IF  #RETURN-CODE NE 0
              ESCAPE TOP
           END-IF
        NONE VALUE
           MOVE 2002 TO #RETURN-CODE
           MOVE *PF-KEY TO #ADDITION-ERROR
     END-DECIDE
  END-REPEAT
END-SUBROUTINE
/* отбор по критерию
DEFINE SUBROUTINE DG-CRITERY /* критерий дл  пердварительного отбора объектов
  SET WINDOW 'CRITERY-DOGOVOR'
  SET KEY NAMED OFF
  SET KEY ALL
  SET KEY ENTR NAMED 'Искат'
  SET KEY PF3 NAMED 'Выход'
  SET KEY CLR NAMED 'Выход'
  SET KEY PF2 NAMED 'Новый'
  REPEAT
     IF #RETURN-CODE NE 0 THEN
        INPUT WITH TEXT *#RETURN-CODE , #ADDITION-ERROR
        MARK CP-CURS-FIELD USING MAP 'XPDGSC0M'
        RESET #RETURN-CODE #ADDITION-ERROR
     ELSE
        IF #TEXT-VIEW NE ' '
           INPUT WITH TEXT #TEXT-VIEW MARK CP-CURS-FIELD USING MAP 'XPDGSC0M'
           RESET #TEXT-VIEW
        ELSE
           INPUT MARK CP-CURS-FIELD USING MAP 'XPDGSC0M'
        END-IF
     END-IF
     DECIDE ON FIRST VALUE *PF-KEY
        VALUE "PF3" , "CLR"
           MOVE "EXIT" TO #STATUS
           ESCAPE BOTTOM
           /* очистить за собой стеки
        VALUE "PF2"
           MOVE "NEW-OBJECT" TO #STATUS
           ESCAPE BOTTOM
        VALUE "ENTR"
           PERFORM SEARCH-DG
           IF XPDGSH0L.STACK-LEN > 0 THEN
              IF XPDGSH0L.STACK-LEN = 1
                 RESET #DG-CODE
                 MOVE XPDGSH0L.DG-CODE TO #DG-CODE
                 PERFORM STACK-FREE
                 MOVE "EDIT-OBJECT" TO #STATUS
              ELSE
                 MOVE "LIST-OBJECT" TO #STATUS
              END-IF
           ELSE
              MOVE 2001 TO #RETURN-CODE
           END-IF
           ESCAPE BOTTOM
        NONE VALUE
           MOVE 2002 TO #RETURN-CODE
           MOVE *PF-KEY TO #ADDITION-ERROR
     END-DECIDE
  END-REPEAT
SET WINDOW OFF
END-SUBROUTINE
/* подпрограмма проверки экрана
DEFINE SUBROUTINE CHECK-SCREEN
  IF XPDGSH1L.DG-CODE = 0
     MOVE 2004 TO #RETURN-CODE
     CP-CURS-FIELD := POS(XPDGSH1L.DG-CODE)
     ESCAPE ROUTINE
  END-IF
  /*
  IF #OBJECT = "NEW"
     FN1. FIND NUMBER DOGOVOR DG-CODE = XPDGSH1L.DG-CODE
     IF *NUMBER(FN1.) > 0
        MOVE 2009 TO #RETURN-CODE
        MOVE XPDGSH1L.DG-CODE TO #ADDITION-ERROR
        CP-CURS-FIELD := POS(XPDGSH1L.DG-CODE)
        ESCAPE ROUTINE
     END-IF
  END-IF
  /*
  IF XPDGSH1L.DG-NUMBER-DOG = ' '
     MOVE 2004 TO #RETURN-CODE
     CP-CURS-FIELD := POS(XPDGSH1L.DG-NUMBER-DOG)
     ESCAPE ROUTINE
  END-IF
    /*
  IF XPDGSH1L.DG-DATA-N NE 0
     IF XPDGSH1L.DG-DATA-N NE MASK(YYYYMMDD) OR XPDGSH1L.DG-DATA-N < 19000000 THEN
        CP-CURS-FIELD := POS(XPDGSH1L.DG-DATA-N)
        MOVE 2008 TO #RETURN-CODE
        ESCAPE ROUTINE
     END-IF
  END-IF
    /*
  IF XPDGSH1L.DG-DATA-NACH-N NE 0
     IF XPDGSH1L.DG-DATA-NACH-N NE MASK(YYYYMMDD) OR XPDGSH1L.DG-DATA-NACH-N < 19000000 THEN
        CP-CURS-FIELD := POS(XPDGSH1L.DG-DATA-NACH-N)
        MOVE 2008 TO #RETURN-CODE
        ESCAPE ROUTINE
     END-IF
  END-IF
    /*
  IF XPDGSH1L.DG-DATA-OKONCH-N NE 0
     IF XPDGSH1L.DG-DATA-OKONCH-N NE MASK(YYYYMMDD) OR XPDGSH1L.DG-DATA-OKONCH-N < 19000000 THEN
        CP-CURS-FIELD := POS(XPDGSH1L.DG-DATA-OKONCH-N)
        MOVE 2008 TO #RETURN-CODE
        ESCAPE ROUTINE
     END-IF
  END-IF
    /*
  IF XPDGSH1L.DG-DATA-USTANOVKI-N NE 0
     IF XPDGSH1L.DG-DATA-USTANOVKI-N NE MASK(YYYYMMDD) OR XPDGSH1L.DG-DATA-USTANOVKI-N < 19000000 THEN
        CP-CURS-FIELD := POS(XPDGSH1L.DG-DATA-USTANOVKI-N)
        MOVE 2008 TO #RETURN-CODE
        ESCAPE ROUTINE
     END-IF
  END-IF
/*
* ВСТАВКА
  INCLUDE XPXXSP2C 'XPDGSH1L.DG-CONTRAGENT'
  'XPDGSH1L.DG-CONTRAGENT-A'
/*
  INCLUDE XPXXSP0C 'XPDGSH1L.DG-ROLY-LICA-SACLUCH'
  'XPDGSH1L.DG-ROLY-LICA-SACLUCH-A' 'XPXXCO0L.CODE-TYPE-STORON-DOC'
/*
  INCLUDE XPXXSP0C 'XPDGSH1L.DG-ROLY-LICA-KOT-SACLUCH'
  'XPDGSH1L.DG-ROLY-LICA-KOT-SACLUCH-A' 'XPXXCO0L.CODE-TYPE-STORON-DOC'
/*
  INCLUDE XPXXSP2C 'XPDGSH1L.DG-LICO-ZAKLUCH'
  'XPDGSH1L.DG-LICO-ZAKLUCH-A'
/*
  INCLUDE XPXXSP0C 'XPDGSH1L.DG-VALUTA'
  'XPDGSH1L.DG-VALUTA-A' "XPXXCO0L.CODE-VALUTA"
/*
  INCLUDE XPXXSP0C 'XPDGSH1L.DG-NDS'
  'XPDGSH1L.DG-NDS-A' "XPXXCO0L.CODE-NDS"
/*
  INCLUDE XPXXSP0C 'XPDGSH1L.DG-NAZNACH-POST'
  'XPDGSH1L.DG-NAZNACH-POST-A' "XPXXCO0L.CODE-NAZNACH-POST"
/*
  INCLUDE XPXXSP0C 'XPDGSH1L.DG-OBESPECH'
  'XPDGSH1L.DG-OBESPECH-A' "XPXXCO0L.CODE-VID-OBESPECH"
/*
  INCLUDE XPXXSP0C 'XPDGSH1L.DG-TYPE-PROD'
  'XPDGSH1L.DG-TYPE-PROD-A' "XPXXCO0L.CODE-NAZNACH-PROD"
/*
  INCLUDE XPXXSP0C 'XPDGSH1L.DG-PRODUKT-PROG'
  'XPDGSH1L.DG-PRODUKT-PROG-A' "XPXXCO0L.CODE-PRODUCT-PROGRAM"
/*
  INCLUDE XPXXSP0C 'XPDGSH1L.DG-VALUTA-SBYT-DOG'
  'XPDGSH1L.DG-VALUTA-SBYT-DOG-A' "XPXXCO0L.CODE-VALUTA"
/*
  INCLUDE XPXXSP0C 'XPDGSH1L.DG-STATUS-DOG'
  'XPDGSH1L.DG-STATUS-DOG-A' "XPXXCO0L.CODE-STATUS-DOGOVORA"
* КОНЕЦ ВСТАВКИ

END-SUBROUTINE
/*
DEFINE SUBROUTINE OBJECT-TO-SCREEN
  MOVE BY NAME XPDGSH0A TO XPDGSH1L
  MOVE EDITED XPDGSH0A.DG-DATA (EM=YYYYMMDD)
        TO XPDGSH1L.DG-DATA-A
  MOVE EDITED XPDGSH0A.DG-DATA-NACH (EM=YYYYMMDD)
        TO XPDGSH1L.DG-DATA-NACH-A
  MOVE EDITED XPDGSH0A.DG-DATA-OKONCH (EM=YYYYMMDD)
        TO XPDGSH1L.DG-DATA-OKONCH-A
  MOVE EDITED XPDGSH0A.DG-DATA-USTANOVKI (EM=YYYYMMDD)
        TO XPDGSH1L.DG-DATA-USTANOVKI-A

* ВСТАВКА
  INCLUDE XPXXSP3C 'XPDGSH1L.DG-CONTRAGENT'
  'XPDGSH1L.DG-CONTRAGENT-A'
/*
  INCLUDE XPXXSP1C 'XPDGSH1L.DG-ROLY-LICA-SACLUCH'
  'XPDGSH1L.DG-ROLY-LICA-SACLUCH-A' 'XPXXCO0L.CODE-TYPE-STORON-DOC'
/*
  INCLUDE XPXXSP1C 'XPDGSH1L.DG-ROLY-LICA-KOT-SACLUCH'
  'XPDGSH1L.DG-ROLY-LICA-KOT-SACLUCH-A' 'XPXXCO0L.CODE-TYPE-STORON-DOC'
/*
  INCLUDE XPXXSP1C 'XPDGSH1L.DG-VALUTA'
  'XPDGSH1L.DG-VALUTA-A' "XPXXCO0L.CODE-VALUTA"
/*
  INCLUDE XPXXSP1C 'XPDGSH1L.DG-NDS'
  'XPDGSH1L.DG-NDS-A' "XPXXCO0L.CODE-NDS"
/*
  INCLUDE XPXXSP1C 'XPDGSH1L.DG-NAZNACH-POST'
  'XPDGSH1L.DG-NAZNACH-POST-A' "XPXXCO0L.CODE-NAZNACH-POST"
/*
  INCLUDE XPXXSP1C 'XPDGSH1L.DG-OBESPECH'
  'XPDGSH1L.DG-OBESPECH-A' "XPXXCO0L.CODE-VID-OBESPECH"
/*
  INCLUDE XPXXSP1C 'XPDGSH1L.DG-TYPE-PROD'
  'XPDGSH1L.DG-TYPE-PROD-A' "XPXXCO0L.CODE-NAZNACH-PROD"
/*
  INCLUDE XPXXSP1C 'XPDGSH1L.DG-PRODUKT-PROG'
  'XPDGSH1L.DG-PRODUKT-PROG-A' "XPXXCO0L.CODE-PRODUCT-PROGRAM"
/*
  INCLUDE XPXXSP1C 'XPDGSH1L.DG-VALUTA-SBYT-DOG'
  'XPDGSH1L.DG-VALUTA-SBYT-DOG-A' "XPXXCO0L.CODE-VALUTA"
/*
  INCLUDE XPXXSP1C 'XPDGSH1L.DG-STATUS-DOG'
  'XPDGSH1L.DG-STATUS-DOG-A' "XPXXCO0L.CODE-STATUS-DOGOVORA"
/*
  INCLUDE XPXXSP3C 'XPDGSH1L.DG-LICO-ZAKLUCH'
  'XPDGSH1L.DG-LICO-ZAKLUCH-A'
* КОНЕЦ ВСТАВКИ
END-SUBROUTINE
/*
DEFINE SUBROUTINE SCREEN-TO-OBJECT
/* формирование архивов
  MOVE BY NAME XPDGSH1L TO XPDGSH0A
  IF XPDGSH1L.DG-DATA-A NE ' '
     MOVE EDITED DG-DATA-A
                 TO XPDGSH0A.DG-DATA(EM=YYYYMMDD)
  END-IF
/*
  IF XPDGSH1L.DG-DATA-NACH-A NE ' '
     MOVE EDITED XPDGSH1L.DG-DATA-NACH-A
                 TO XPDGSH0A.DG-DATA-NACH(EM=YYYYMMDD)
  END-IF
/*
  IF XPDGSH1L.DG-DATA-OKONCH-A NE ' '
     MOVE EDITED XPDGSH1L.DG-DATA-OKONCH-A
                 TO XPDGSH0A.DG-DATA-OKONCH(EM=YYYYMMDD)
  END-IF
/*
  IF XPDGSH1L.DG-DATA-USTANOVKI-A NE ' '
     MOVE EDITED XPDGSH1L.DG-DATA-USTANOVKI-A
                 TO XPDGSH0A.DG-DATA-USTANOVKI(EM=YYYYMMDD)
  END-IF
/*
END-SUBROUTINE
/*
DEFINE SUBROUTINE READ-RECORD
  IF #DG-CODE NE 0  THEN
     FIND DOGOVOR DG-CODE = #DG-CODE
        MOVE BY NAME DOGOVOR TO XPDGSH0A
     END-FIND
  ELSE
     MOVE 2003 TO #RETURN-CODE
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE STORE-OBJECT
  DECIDE ON FIRST VALUE #STATUS
     VALUE "NEW-OBJECT"
        VIEWSTAT.OG-ID := XPXXCO0L.OSN-GROUP
        VIEWSTAT.ST-F := XPXXCO0L.CODE-DOGOVOR
        VIEWSTAT.CT-F := XPDGSH0A.DG-CODE
        MOVE XPDGSH0A.DG-TITLE TO VIEWSTAT.NM-OG
        STORE VIEWSTAT
        MOVE BY NAME XPDGSH0A TO DOGOVOR
        STORE DOGOVOR
     VALUE "EDIT-OBJECT"
        IF #DG-CODE NE 0  THEN
           FIND (1) DOGOVOR DG-CODE = #DG-CODE
              IF NO RECORDS
                 MOVE 2003 TO #RETURN-CODE
                 ESCAPE ROUTINE
              END-NOREC
              MOVE BY NAME XPDGSH0A TO DOGOVOR
              UPDATE
           END-FIND
           /*
              OG1 := XPXXCO0L.OSN-GROUP
              ST1 := XPXXCO0L.CODE-DOGOVOR
              CD1 := #DG-CODE
              FIND VIEWSTAT OG-ST = KEYST1
                 VIEWSTAT.CT-F := XPDGSH0A.DG-CODE
                 MOVE XPDGSH0A.DG-TITLE TO VIEWSTAT.NM-OG
                 UPDATE
              END-FIND
        ELSE
           MOVE #DG-CODE TO #ADDITION-ERROR
           MOVE 2006 TO #RETURN-CODE
        END-IF
     ANY VALUE
        END OF TRANSACTION
     NONE VALUE IGNORE
  END-DECIDE
END-SUBROUTINE
/*
DEFINE SUBROUTINE SEARCH-DG
 /* RESET #COUNT #NUMBER
  DECIDE FOR FIRST CONDITION
     WHEN XPDGSC0L.DG-CODE NE 0 AND XPDGSC0L.DG-NUMBER-DOG EQ ' '
        FIND DOGOVOR DG-CODE = XPDGSC0L.DG-CODE
           MOVE BY NAME DOGOVOR TO XPDGSH0L
           PERFORM STACK-PUSH
        END-FIND
     WHEN XPDGSC0L.DG-CODE NE 0 AND XPDGSC0L.DG-NUMBER-DOG NE ' '
        FIND DOGOVOR DG-NUMBER-DOG = XPDGSC0L.DG-NUMBER-DOG
                    AND DG-CODE = XPDGSC0L.DG-CODE
              MOVE BY NAME DOGOVOR TO XPDGSH0L
              PERFORM STACK-PUSH
        END-FIND
     WHEN XPDGSC0L.DG-CODE = 0 AND XPDGSC0L.DG-NUMBER-DOG NE ' '
        FIND DOGOVOR DG-CODE NE 0 AND DG-NUMBER-DOG = XPDGSC0L.DG-NUMBER-DOG
              MOVE BY NAME DOGOVOR TO XPDGSH0L
              PERFORM STACK-PUSH
        END-FIND
     WHEN NONE
        FIND DOGOVOR DG-CODE NE 0
           MOVE BY NAME DOGOVOR TO XPDGSH0L
           PERFORM STACK-PUSH
        END-FIND
  END-DECIDE
END-SUBROUTINE
/*
DEFINE SUBROUTINE LIST-VIEW
  RESET #I XPDGSR0L.STRING(*)
  MOVE (AD=PN) TO XPDGSR0L.CMD-Z(*)
  FOR #L1 = #LS-START TO #LS-END
     IF XPDGSH0L.STACK-LEN < #L1
        MOVE TRUE TO #LIST-END
        ESCAPE BOTTOM
     END-IF
     MOVE #L1 TO XPDGSH0L.STACK-POS
     PERFORM STACK-READ
     ADD 1 TO #I
     MOVE BY NAME XPDGSH0L TO STRING(#I)
     MOVE XPDGSH0L.STACK-POS TO XPDGSR0L.ELEM-STACK(#I)
     RESET XPDGSR0L.CMD-Z(#I)
     IF XPDGSH0L.STACK-LEN = #L1
        MOVE TRUE TO #LIST-END
        ESCAPE BOTTOM
     END-IF
  END-FOR
END-SUBROUTINE
/*
DEFINE SUBROUTINE SELECT-OBJECT
* ВСТАВКА
  RESET NMST
  DECIDE FOR FIRST CONDITION
*     INCLUDE XPXXSP4C 'XPDGSH1L.DG-CONTRAGENT' 'XPDGSH1L.DG-CONTRAGENT-A'
/* 1 - XPDGSH1L.DG-CONTRAGENT
/* 2 - XPDGSH1L.DG-CONTRAGENT-A
  WHEN *CURS-FIELD = POS(XPDGSH1L.DG-CONTRAGENT)
     OG-IDENT-G := 1000
     COD-VO := XPDGSH1L.DG-CONTRAGENT
     CALLNAT 'SELVON' OG-IDENT-G COD-VO NM-VO
     XPDGSH1L.DG-CONTRAGENT := COD-VO
     XPDGSH1L.DG-CONTRAGENT-A := NM-VO

        /*
     INCLUDE XPXXSP5C 'XPDGSH1L.DG-ROLY-LICA-SACLUCH' 'XPDGSH1L.DG-ROLY-LICA-SACLUCH-A'
     "XPXXCO0L.CODE-TYPE-STORON-DOC"  /* РОЛЬ ЛИЦА ЗАКЛЮЧИВШЕГО ДОГОВОР
        /*
     INCLUDE XPXXSP5C 'XPDGSH1L.DG-ROLY-LICA-KOT-SACLUCH'
                    'XPDGSH1L.DG-ROLY-LICA-KOT-SACLUCH-A'
                    "XPXXCO0L.CODE-TYPE-STORON-DOC"    /* РОЛЬ ЛИЦА С КОТОРЫМ ЗАКЛЮЧИЛИ ДОГОВОР
     INCLUDE XPXXSP4C 'XPDGSH1L.DG-LICO-ZAKLUCH' 'XPDGSH1L.DG-LICO-ZAKLUCH-A'
          /* ЛИЦО ЗАКЛЮЧИВШЕЕ ДОГОВОР
     INCLUDE XPXXSP5C 'XPDGSH1L.DG-VALUTA' 'XPDGSH1L.DG-VALUTA-A'
              "XPXXCO0L.CODE-VALUTA"  /* валюта договора
     INCLUDE XPXXSP5C 'XPDGSH1L.DG-NDS' 'XPDGSH1L.DG-NDS-A'
              "XPXXCO0L.CODE-NDS" /* НДС
     INCLUDE XPXXSP5C 'XPDGSH1L.DG-NAZNACH-POST' 'XPDGSH1L.DG-NAZNACH-POST-A'
              "XPXXCO0L.CODE-NAZNACH-POST" /* нАЗНАЧЕНИЕ ПОСТАВКИ
     INCLUDE XPXXSP5C 'XPDGSH1L.DG-OBESPECH' 'XPDGSH1L.DG-OBESPECH-A'
              "XPXXCO0L.CODE-VID-OBESPECH" /* ОБЕСПЕЧЕНИЕ
     INCLUDE XPXXSP5C 'XPDGSH1L.DG-TYPE-PROD' 'XPDGSH1L.DG-TYPE-PROD-A'
              "XPXXCO0L.CODE-NAZNACH-PROD" /* ТИП ПРОДУКции
     INCLUDE XPXXSP5C 'XPDGSH1L.DG-PRODUKT-PROG' 'XPDGSH1L.DG-PRODUKT-PROG-A'
              "XPXXCO0L.CODE-PRODUCT-PROGRAM"  /* ПРОДУКТОВАЯ ПРОГРАММА
     INCLUDE XPXXSP5C 'XPDGSH1L.DG-VALUTA-SBYT-DOG' 'XPDGSH1L.DG-VALUTA-SBYT-DOG-A'
              "XPXXCO0L.CODE-VALUTA"  /* вАЛЮТА СБЫТОВОГО ДОГОВОРА
     INCLUDE XPXXSP5C 'XPDGSH1L.DG-STATUS-DOG' 'XPDGSH1L.DG-STATUS-DOG-A'
              "XPXXCO0L.CODE-STATUS-DOGOVORA"   /* СТАТУС ДОГОВОРА
    WHEN NONE IGNORE
  END-DECIDE
* КОНЕЦ ВСТАВКА
END-SUBROUTINE
/*
INCLUDE XXSTMN0C "XPDGSH0L" "XPDGSH0LC"
        "STACK-INIT" "STACK-FREE" "STACK-REALLOC"
        "STACK-PUSH" "STACK-READ" "STACK-WRITE" "STACK-SORT"

END-SUBROUTINE
/*
END


