* >Natural Source Header 000000 /*<RO>>
* :NatName XPRBPR0S
* :UID T_IEN
* :Mode S
* :CP
* :Date 20100301
* :Time 1022330
* <Natural Source Header /*<<RO>
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING XPRBPR0A
LOCAL USING XXCTXX0A
LOCAL USING XXXXEC0L
LOCAL USING AURBXX0L
LOCAL USING IBS-VOL
LOCAL USING IBS-OBJL
LOCAL USING IBS-RECL
LOCAL
/*
1 #OGOS (B10)
1 REDEFINE #OGOS
2 #OGOS-OG (N5)
2 #OGOS-OS (N5)
/*
1 #OGVO (B10)
1 REDEFINE #OGVO
2 #OGVO-OG (N5)
2 #OGVO-VO (N5)
/*
1 #DT      (N8)
1 REDEFINE #DT
2 #DT-GM   (N6)
2 #DT-DD   (N2)
/*
1 #DT-A    (A8)
1 REDEFINE #DT-A
2 #DT-N    (N8)
/*
1 #OPERA
2 STACK-NUMBER   (B4)
2 STACK-COUNT    (I4)
2 STACK-LEN      (I4)
2 STACK-ID       (I4)
/*
1 #OPERL-C
2 #TOL-STACK-REC-LEN (I4) CONST <64>
2 REDEFINE #TOL-STACK-REC-LEN
3 STACK-REC-LEN (I4)
2 STACK-ALLOC-COUNT (I4) CONST <10000>
2 STACK-KEY-START (I4) CONST <1>
2 #TOL-KEY-LEN (I4) CONST <16>
2 REDEFINE #TOL-KEY-LEN
3 STACK-KEY-LEN (I4)
/*
1 #OPERL
2 STACK-POS (B4)
2 STACK-POS-I (I4)
2 STACK-TMP-B1 (B4)
2 STACK-TMP-B2 (B4)
2 STACK-FIELD-POS (B4)
2 STACK-FIELD-LEN (B4)
/*
2 STACK-REC-B (B1/1:#TOL-STACK-REC-LEN)
2 REDEFINE STACK-REC-B
3 STACK-REC-G
4 STACK-KEY-B (B1/1:#TOL-KEY-LEN)
4 REDEFINE STACK-KEY-B
5 STACK-KEY-G
6 AC-OID      (P15)
6 RB-OID      (P15)
4 OST-IN-DEBET   (P13.2)
4 OST-IN-CREDIT  (P13.2)
4 OST-OB-DEBET   (P13.2)
4 OST-OB-CREDIT  (P13.2)
4 OST-OUT-DEBET  (P13.2)
4 OST-OUT-CREDIT (P13.2)
/*
1 OUT-RB
2 DT-START    (N8)
2 DT-STOP     (N8)
2 AC-OID      (N5)
2 AC-CODE     (N5)
2 RB-OID      (N15)
2 RB-CODE     (N6)
2 RB-PRICE    (N13.2)
2 RB-NAME     (A120)
2 RB-ZK-CODE  (A9)
2 RB-AC-CODE  (N5)
2 DF-EI       (A1)
2 DF-SUMMA    (N13.2)
2 DF-PERIOD-START   (N8)
2 DF-PERIOD-STOP    (N8)
2 VO-CODE     (N5)
2 VO-INN      (A15)
2 VO-NAME     (A120)
2 DG-NUMBER   (A20)
2 DG-DATE     (N8)
2 SIGN-OID    (P15)
2 SIGN-FIRST-NAME       (A30)
2 SIGN-LAST-NAME       (A30)
2 SIGN-PATRONYMIC      (A30)
2 SIGN-CAPACITY        (A80)
2 OST-IN-DEBET   (N13.2)
2 OST-IN-CREDIT  (N13.2)
2 OST-OB-DEBET   (N13.2)
2 OST-OB-CREDIT  (N13.2)
2 OST-OUT-DEBET  (N13.2)
2 OST-OUT-CREDIT (N13.2)
/*
1 OUT-OP
2 RB-OID      (N15)
2 PR-CODE     (N5)
2 PKG-CODE    (N5)
2 ND-ID       (N6)
2 DT-ID       (N8)
2 KOR-AC-CODE (N5)
2 OB-DEBET    (N13.2)
2 OB-CREDIT   (N13.2)
/*
1 #FILE7      (A70) INIT<"C:\R26\TEMPLATES\U\DF\UDFNB.NCD">
1 REDEFINE #FILE7
2 #FILE7-LET  (A1)
1 #FILE8      (A70) INIT<"C:\R26\TEMPLATES\U\DF\UDFNL.NCD">
1 REDEFINE #FILE8
2 #FILE8-LET  (A1)
/*
1 #STAFF-CUR        (I4)
1 #STAFF-CODE       (N5)
1 STAFF             (5)
2 OID               (P15)
2 CODE              (N5)
2 FIRST-NAME        (A30)
2 LAST-NAME         (A30)
2 PATRONYMIC        (A30)
2 CAPACITY          (A78)
2 CMP               (A78)
/*
1 STAFF-OUT
2 OID               (P15)
2 CODE              (N5)
2 FIRST-NAME        (A30)
2 LAST-NAME         (A30)
2 PATRONYMIC        (A30)
2 CAPACITY          (A78)
/*
1 #I    (I4)
1 #J    (I4)
1 #IS-FOUND   (L)
/*
LOCAL
1 ASRZ-LS-VIEW VIEW ASRZ-LS-FILE
2 TN-F
2 PO-F
2 DL-F
2 FA-F
2 IM-F
2 OT-F
1 ASRZ-SYS-VIEW VIEW ASRZ-SYS-FILE
2 KK-F
2 RS-F
2 RR-F
2 NB-F(1)
/*
END-DEFINE
DEFINE SUBROUTINE XPRBPR0S
/*
CALLNAT 'DRIVECHR' #FILE7-LET
CALLNAT 'DRIVECHR' #FILE8-LET
/*
DEFINE WORK FILE 7 #FILE7
DEFINE WORK FILE 8 #FILE8
/*
PERFORM OPER-INIT
/*
MOVE XPRBPR0A.DT-START TO #DT
#OGOS-OG := XPRBPR0A.OG-CODE
#OGOS-OS := XPRBPR0A.AC-CODE
FIND IBS-OBJ-FILE1 WITH OG-OS EQ #OGOS AND DT-ID EQ #DT-GM
  RESET #IS-FOUND
  FOR #I = 1 TO C*GS-SS
     IF KK-SS(#I) EQ "RBP" THEN
        #IS-FOUND := TRUE
        ESCAPE BOTTOM
     END-IF
  END-FOR
  IF #IS-FOUND THEN
     RESET #OPERL.STACK-REC-G #OPERL.STACK-KEY-G
     MOVE IBS-OBJ-FILE1.OS-ID TO #OPERL.AC-OID
     MOVE IBS-OBJ-FILE1.KD-SS(#I) TO #OPERL.RB-OID
     PERFORM OPER-LOCATE
     IF RETURN-CODE EQ EC-OBJECT-NOT-FOUND THEN
        PERFORM OPER-PUSH
     ELSE
        PERFORM OPER-READ
     END-IF
     IF IBS-OBJ-FILE1.BO-ID EQ 1 THEN
        ADD SU-RU TO #OPERL.OST-IN-DEBET
     ELSE
        ADD SU-RU TO #OPERL.OST-IN-CREDIT
     END-IF
     PERFORM OPER-WRITE
  END-IF
END-FIND
/*
FIND IBS-REC-FILE WITH OS-F EQ XPRBPR0A.AC-CODE AND DT-ID EQ #DT THRU XPRBPR0A.DT-STOP
  RESET #IS-FOUND
  FOR #I = 1 TO C*ST-OS
     IF KK-OS(#I) EQ "RBP" THEN
        #IS-FOUND := TRUE
        ESCAPE BOTTOM
     END-IF
  END-FOR
  IF #IS-FOUND THEN
     RESET #OPERL.STACK-REC-G #OPERL.STACK-KEY-G
     MOVE IBS-REC-FILE.OS-F TO #OPERL.AC-OID
     MOVE IBS-REC-FILE.KD-OS(#I) TO #OPERL.RB-OID
     PERFORM OPER-LOCATE
     IF RETURN-CODE EQ EC-OBJECT-NOT-FOUND THEN
        PERFORM OPER-PUSH
     ELSE
        PERFORM OPER-READ
     END-IF
     IF IBS-REC-FILE.DT-ID >= XPRBPR0A.DT-START THEN
        IF IBS-REC-FILE.BO-F EQ 3 THEN
           ADD IBS-REC-FILE.SU-F TO #OPERL.OST-OB-DEBET
        ELSE
           ADD IBS-REC-FILE.SU-F TO #OPERL.OST-OB-CREDIT
        END-IF
        RESET OUT-OP
        MOVE IBS-REC-FILE.KD-OS(1) TO OUT-OP.RB-OID
        MOVE IBS-REC-FILE.N-PROV TO OUT-OP.PR-CODE
        MOVE IBS-REC-FILE.PP-F TO OUT-OP.PKG-CODE
        MOVE IBS-REC-FILE.ND-ID TO OUT-OP.ND-ID
        MOVE IBS-REC-FILE.DT-ID TO OUT-OP.DT-ID
        MOVE IBS-REC-FILE.KS-F TO OUT-OP.KOR-AC-CODE
        IF IBS-REC-FILE.BO-F EQ 3 THEN
           MOVE SU-F TO OUT-OP.OB-DEBET
        ELSE
           MOVE SU-F TO OUT-OP.OB-CREDIT
        END-IF
        WRITE WORK FILE 8 OUT-OP
     ELSE
        IF IBS-REC-FILE.BO-F EQ 3 THEN
           ADD IBS-REC-FILE.SU-F TO #OPERL.OST-IN-DEBET
        ELSE
           ADD IBS-REC-FILE.SU-F TO #OPERL.OST-IN-CREDIT
        END-IF
     END-IF
     PERFORM OPER-WRITE
  END-IF
END-FIND
/*
#STAFF-CUR := 1
STAFF.CODE(#STAFF-CUR) := XPRBPR0A.SIGN-OID
PERFORM CHECK-STAFF
/*
FOR #I = 1 TO #OPERA.STACK-LEN
  MOVE #I TO #OPERL.STACK-POS
  PERFORM OPER-READ
  RESET OUT-RB
  MOVE BY NAME #OPERL.STACK-REC-G TO OUT-RB
  MOVE XPRBPR0A.DT-START TO OUT-RB.DT-START
  MOVE XPRBPR0A.DT-STOP TO OUT-RB.DT-STOP
  MOVE XPRBPR0A.AC-CODE TO OUT-RB.AC-CODE
  /*
  FIND AU_RBP WITH RB-CODE EQ OUT-RB.RB-OID
     MOVE AU_RBP.RB-CODE TO OUT-RB.RB-CODE
     MOVE AU_RBP.RB-NAME TO OUT-RB.RB-NAME
     MOVE AU_RBP.RB-STOIMOST TO OUT-RB.RB-PRICE
     MOVE AU_RBP.RB-ZAKAZ TO OUT-RB.RB-ZK-CODE
     MOVE AU_RBP.RB-SCHET TO OUT-RB.RB-AC-CODE
     MOVE AU_RBP.RB-EI-PERIOD-DISCARDING TO OUT-RB.DF-EI
     MOVE AU_RBP.SUMMA-RBP TO OUT-RB.DF-SUMMA
     MOVE EDITED AU_RBP.RB-PERIOD-DISCARDING-START (EM=YYYYMMDD) TO #DT-A
     MOVE #DT-N TO OUT-RB.DF-PERIOD-START
     MOVE EDITED AU_RBP.RB-PERIOD-DISCARDING-END (EM=YYYYMMDD) TO #DT-A
     MOVE #DT-N TO OUT-RB.DF-PERIOD-STOP
     IF AU_RBP.RB-OB NE 0 THEN
        MOVE XPRBPR0A.OG-CODE TO #OGVO-OG
        MOVE AU_RBP.RB-OB TO #OGVO-VO
        FIND IBS-KVO-FILE WITH OG-VO EQ #OGVO
           MOVE IBS-KVO-FILE.VO-ID TO OUT-RB.VO-CODE
           MOVE IBS-KVO-FILE.NM-OG TO OUT-RB.VO-NAME
           MOVE IBS-KVO-FILE.NN-ID TO OUT-RB.VO-INN
        END-FIND
     END-IF
  END-FIND
  /*
  OUT-RB.OST-OUT-DEBET := OUT-RB.OST-IN-DEBET - OUT-RB.OST-IN-CREDIT +
              OUT-RB.OST-OB-DEBET - OUT-RB.OST-OB-CREDIT
  IF OUT-RB.OST-OUT-DEBET < 0 THEN
     OUT-RB.OST-OUT-CREDIT := -OUT-RB.OST-OUT-DEBET
     RESET OUT-RB.OST-OUT-DEBET
  END-IF
  /*
  MOVE STAFF.CODE(#STAFF-CUR) TO OUT-RB.SIGN-OID
  MOVE STAFF.FIRST-NAME(#STAFF-CUR) TO OUT-RB.SIGN-FIRST-NAME
  MOVE STAFF.LAST-NAME(#STAFF-CUR) TO OUT-RB.SIGN-LAST-NAME
  MOVE STAFF.PATRONYMIC(#STAFF-CUR) TO OUT-RB.SIGN-PATRONYMIC
  MOVE STAFF.CAPACITY(#STAFF-CUR) TO OUT-RB.SIGN-CAPACITY
  WRITE WORK FILE 7 OUT-RB
END-FOR
/*
CLOSE WORK FILE 7
CLOSE WORK FILE 8
/*
PERFORM OPER-FREE
/*
CALL "WINCMD" "IAGMKFRM.BAT U DF 1 1"
/*
DEFINE SUBROUTINE CHECK-STAFF
  #STAFF-CODE := STAFF.CODE(#STAFF-CUR)
  RESET STAFF(#STAFF-CUR)
  STAFF.CODE(#STAFF-CUR) := #STAFF-CODE
  FIND ASRZ-LS-VIEW WITH TN-F EQ STAFF.CODE(#STAFF-CUR)
     STAFF.OID(#STAFF-CUR) := #STAFF-CUR
     STAFF.LAST-NAME(#STAFF-CUR) := FA-F
     STAFF.FIRST-NAME(#STAFF-CUR) := IM-F
     STAFF.PATRONYMIC(#STAFF-CUR) := OT-F
     IF DL-F NE 0 THEN
        FIND ASRZ-SYS-VIEW WITH KK-F EQ "дк" AND RS-F EQ ASRZ-LS-VIEW.DL-F
           STAFF.CAPACITY(#STAFF-CUR) := NB-F(1)
        END-FIND
     END-IF
     COMPRESS SUBSTRING(STAFF.FIRST-NAME(#STAFF-CUR),1,1) '.'
              SUBSTRING(STAFF.PATRONYMIC(#STAFF-CUR),1,1) '.'
           INTO STAFF.CMP(#STAFF-CUR) LEAVING NO SPACE
     COMPRESS STAFF.LAST-NAME(#STAFF-CUR)
              STAFF.CMP(#STAFF-CUR)
              STAFF.CAPACITY(#STAFF-CUR)
           INTO STAFF.CMP(#STAFF-CUR) LEAVING SPACE
  END-FIND
END-SUBROUTINE
/*
INCLUDE XXSTMN4C "#OPERA" "#OPERL-C" "#OPERL"
        "OPER-INIT" "OPER-FREE" "OPER-REALLOC"
        "OPER-PUSH" "OPER-READ" "OPER-WRITE" "OPER-LOCATE"
END-SUBROUTINE
END
