* >Natural Source Header 000000 /*<RO>>
* :NatName SNAVKU
* :UID INTECO
* :Mode S
* :CP
* :Date 20090710
* :Time 1239330
* <Natural Source Header /*<<RO>
************************
* бедемхе йспянб бюкчр *
************************
DEFINE DATA
*  GLOBAL USING UFROG       /* цкнаюкэмше оепелеммше дкъ бяеи яхярелш
PARAMETER  USING PRMNAVI
*
  LOCAL  USING LCLKUL     /* VIEW мю тюик IBS-SYS-FILE
  LOCAL  USING LCLFROL1      /* наыхе оепелеммше
  LOCAL  USING LCLFROL4      /* наыхе оепелеммше
  LOCAL  USING PRMHELP
  LOCAL  USING CHREBCD
  LOCAL  USING CHR1251
  LOCAL
    1 SELFUN(A60) INIT<'йСПЯШ БЮКЧР'>
    1 SELREG(A40)
    1 INPUT-REC(A042/1:15)
    1 REDEFINE INPUT-REC
      2 #INPUT-REC(15)
* онкъ мебшбндхлше мю щйпюм
        3 FIELD-FF  (B001) /* ткюц хглемемхъ/сдюкемхъ гюохях
        3 FIELD-ISN (P013) /* ISN гюохях
        3 FIELD-UP  (A001) /* ткюц гюыхрш гюохях
* онкъ бшбндхлше мю щйпюм
        3 #FIELD-01 (A003)      /* йнд
        3 REDEFINE #FIELD-01
          4 #FIELD-01-A(A003)
        3 #FIELD-02 (N008)      /* дюрю
        3 #FIELD-03 (N11.4)     /* йспя
        3 #FIELD-04 (N7)     /* е.х.
* дхмюлхвеяйхе юрпхасрш дкъ бшбндхлшу онкеи
    1 #FIELD-01C (C/1:15)
    1 #FIELD-02C (C/1:15)
    1 #FIELD-03C (C/1:15)
*
* ярпсйрспю щкелемрю ярейю я дюммшлх
*
    1 STEK-REC(A42)
    1 REDEFINE STEK-REC
      2 STEK-FF(B01)
      2 STEK-ISN(P13)
      2 STEK-UP(A01)
*
      2 STEK-01(A03)
      2 STEK-02(N08)
      2 STEK-03(N11.4)  2 STEK-04(N7)
    1 #KD(A03)                /*  йнд бюкчрш
    1 #DT(N08)                /*  дюрю
    1 KEY1(A16)               /*  онхяйнбши йкчв мювюкэмши
    1 REDEFINE KEY1
      2 KEYOG1(N5)            /*  йнд нпцюмхгюжхх
      2 KEYKD1(A3)            /*  йнд бюкчрш
      2 REDEFINE KEYKD1
        3 HEX1(B3)
      2 KEYDT1(N8)            /*  дюрю
    1 KEY2(A16)               /*  онхяйнбши йкчв йнмевмши
    1 REDEFINE KEY2
      2 KEYOG2(N5)            /*  йнд нпцюмхгюжхх
      2 KEYKD2(A3)            /*  йнд бюкчрш
      2 REDEFINE KEYKD2
        3 HEX2(B3)
      2 KEYDT2(N8)            /*  дюрю
    1 KEY3(A16)               /*  онхяйнбши йкчв
    1 REDEFINE KEY3
      2 KEYOG3(N5)            /*  йнд нпцюмхгюжхх
      2 KEYKD3(A3)
      2 KEYDT3(N8)
    1 KEY4(A16)
    1 REDEFINE KEY4
      2 KEYOG4(N5)            /*  йнд нпцюмхгюжхх
      2 KEYKD4(A3)
      2 KEYDT4(N8)
    1 KEY5(A8)
    1 REDEFINE KEY5
      2 KEYOG5(N5)            /*  йнд нпцюмхгюжхх
      2 KEYKD5(A3)            /*  йнд бюкчрш
    1 I(N5)
    1 STEK-KEY(A11)
    1 REDEFINE STEK-KEY
      2 KVA(A3)               /*  йнд бюкчрш
      2 KDT(N8)               /*  дюрю
    1 OPSYS(A3)  1 DT-IMP(N8)  1 RDT(N8)  1 FLG2(N1)
*
END-DEFINE
*
SET KEY PF1 PF2 PF3 PF4 PF5 PF6 PF7 PF8 PF9 PF10 PF11 PF12
DEFINE WINDOW WIN1
SIZE 12 * 35
BASE 5 / 20
TITLE 'сЙЮФХРЕ ДЮРС'
CONTROL WINDOW
IF #RW = 'R'  SET KEY PF5=OFF
  #FIELD-01C(*) := (AD=PD)
END-IF
OPSYS := #OPSYS := *OPSYS
INCLUDE CCASKOG
INCLUDE DEFOPSYS
*
MOVE 3   TO N-DATA N-DATA-B     /* мнлеп ярейю я дюммшлх
MOVE 42  TO L-DATA L-DATA-B     /* дкхмю щкелемрю б ярейе я дюммшлх
MOVE 1000 TO Q-DATA Q-DATA-B    /* йнкхвеярбн щкелемрнб б ярейе я дюммшлх
*
MOVE 4   TO N-DEL  N-DEL-B      /* мнлеп ярейю я ISN сдюкеммшу гюохяеи
MOVE 4   TO L-DEL  L-DEL-B      /* дкхмю щкелемрю б ярейе я ISN
MOVE 1000 TO Q-DEL  Q-DEL-B      /* йнкхвеярбн щкелемрнб б ярейе я ISN
*
ASSIGN Q-FIELD = 3          /* онкеи б ярпнйе
ASSIGN Q-LINE = 15          /* ярпнй мю щйпюме
ASSIGN F-LINE = 6           /* ялеыемхе оепбни ярпнйх
ASSIGN T-KEY = 7            /* мювюкэмюъ онгхжхъ йкчвебнцн юрпхасрю
ASSIGN L-KEY = 11           /* дкхмю йкчвебнцн юрпхасрю
ASSIGN P-INPUT(1,1) = 14    /* 5
ASSIGN P-INPUT(2,1) = 31    /* 15
ASSIGN P-INPUT(3,1) = 51    /* 24
ASSIGN P-INPUT(1,2) = 3
ASSIGN P-INPUT(2,2) = 8
ASSIGN P-INPUT(3,2) = 16    /* 15
*
ASSIGN P-STEK(1,1) = 7
ASSIGN P-STEK(2,1) = 10
ASSIGN P-STEK(3,1) = 18
ASSIGN P-STEK(1,2) = 3
ASSIGN P-STEK(2,2) = 8
ASSIGN P-STEK(3,2) = 15
*
* нямнбмни жхйк
*
REPEAT
  INCLUDE INPPC '"NAVKUM1"' '"MAPKUM1"'
  IF *PF-KEY = 'PF11'  OP-IDENT-G := 1
    CALLNAT 'SNAVVA' PRMNAV
    INCLUDE CCRFUNNM
    #KD := OR_VAL
    RESET OP-IDENT-G
    ESCAPE TOP
  END-IF
  IF *PF-KEY = 'PF1'
    INCLUDE CCHELP '38'
    ESCAPE TOP
  END-IF
*
  IF #DT NE 0 AND ( #DT NE MASK (YYYYMMDD) OR #DT = MASK(00)
                                           OR #DT = MASK(0) )
    REINPUT 'дюрю' ALARM
  END-IF
  RDT := #DT
  INCLUDE CCUFRO50
  INCLUDE CCUFRO51
  ASSIGN KEYOG4 = OG-IDENT-G
  ASSIGN KEYOG5 = OG-IDENT-G
  ASSIGN C-CURS = 1           /* ярпнйю я йспянпнл
  IF #KD = ' '
    ASSIGN HEX1 = H'000000'  ASSIGN HEX2 = H'FFFFFF'
    ELSE  ASSIGN KEYKD1 = #KD  ASSIGN KEYKD2 = #KD
    ASSIGN KEYKD5 = #KD
BS1.  FIND NUMBER IBS-VKU-FILE OG-VV = KEY5
    IF *NUMBER(BS1.) = 0
      REINPUT 'мебепмши йнд бюкчрш' ALARM
    END-IF
  END-IF
  IF #DT = 0
    ASSIGN KEYDT1 = 0  ASSIGN KEYDT2 = 99999999
    ELSE  ASSIGN KEYDT1 = #DT  ASSIGN KEYDT2 = #DT
  END-IF
*
  INCLUDE CCUFRO1
  REPEAT
*
    RESET #FIELD-01(*) #FIELD-02(*) #FIELD-03(*) #FIELD-03(*) #FIELD-04(*)
*
    PERFORM ARRY-PROC
*
   INPUT USING MAP 'NAVKUM2'
   FOR C-CURS 1 Q-LINE
     IF *CURS-FIELD = POS(#FIELD-01(C-CURS)) OR
                    = POS(#FIELD-02(C-CURS)) OR
                    = POS(#FIELD-03(C-CURS))
            ESCAPE BOTTOM  END-IF
   END-FOR
    IF *PF-KEY = 'PF1'
       INCLUDE CCHELP '39'
       ESCAPE TOP
    END-IF
*
    IF *PF-KEY = 'PF2'
      SET WINDOW 'WIN1'
      REPEAT
        INPUT USING MAP 'NAVKUM3'
        IF *PF-KEY = 'PF3'  ESCAPE BOTTOM  END-IF
        KEYDT1 := KEYDT2 := RDT := DT-IMP  FLG2 := 1
        RESET C-DATA  CALL 'NULX' ' ' N-DATA-B
        PERFORM LOAD-PROC
        FIRST-EL(N-DATA) := 1  FLG2 := 0
        ESCAPE BOTTOM
      END-REPEAT
      SET WINDOW OFF
      ESCAPE TOP
    END-IF
    INCLUDE CCUFRO2                        /* напюанрйю от
  END-REPEAT
END-REPEAT
*
INCLUDE CCUFRO53
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* времхе дюммшу хг IBS-SYS-FILE б ярей я дюммшлх
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE LOAD-PROC
*
ASSIGN C-DATA = 0
  FIND IBS-VKU-FILE OG-VA-DT = KEY1 THRU KEY2
    IF C-DATA > Q-DATA THEN ESCAPE BOTTOM END-IF
    ACCEPT IF RDT = 0 OR = DT-ID
*
    COMPUTE C-DATA = C-DATA + 1
    ASSIGN STEK-FF  = H'00'

*
    ASSIGN STEK-01 = VA-ID
    IF FLG2 = 1  STEK-02 := #DT  STEK-ISN := 0  STEK-FF := H'01'
      ELSE  ASSIGN STEK-02 = DT-ID  ASSIGN STEK-ISN = *ISN
    END-IF
    ASSIGN STEK-03 = KU-VA
    ASSIGN STEK-04 = EI-VA
*
    ASSIGN C-DATA-B = C-DATA
    CALL 'RWSX' C-DATA-B STEK-REC WR-REC N-DATA-B
*
  END-FIND
*
  ASSIGN MAX-EL(N-DATA)   = C-DATA
  ASSIGN FIRST-EL(N-DATA) = 1
  ASSIGN MAX-EL(N-DEL)    = 0
*
END-SUBROUTINE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* опнжедспю опнбепйх дюммшу щйпюмю
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CHECK-PROC
*
IF #RW NE 'R'
FOR C-LINE = 1 TO Q-LINE /* опнялюрпхбюел ярпнйх щйпюмю
*
  IF #FIELD-01(C-LINE) NE ' '     /* ярпнйю ме сдюкемю
    ASSIGN KVA = #FIELD-01(C-LINE)
    ASSIGN KDT = #FIELD-02(C-LINE)
    ASSIGN C-DUBL = 0
    FOR I 1 Q-LINE
      IF #FIELD-01(I) NE ' '
        IF KVA = #FIELD-01(I) AND KDT = #FIELD-02(I)
          COMPUTE C-DUBL = C-DUBL + 1
        END-IF
      END-IF
    END-FOR
    IF C-DUBL > 1 THEN
      REINPUT'дсакхпнбюмхе хдемрхтхйюрнпю мю щйпюме'
      MARK *#FIELD-01(C-LINE) ALARM
    END-IF
*
    RESET C-DATA-B
    COMPUTE C-DATA2 = FIRST-EL(N-DATA) + Q-LINE - 1
    REPEAT
      ASSIGN C-DATA1-B = T-KEY
      ASSIGN C-DATA2-B = L-KEY
      ASSIGN KDT = #FIELD-02(C-LINE)
      ASSIGN KVA = #FIELD-01(C-LINE)
      CALL 'CMPX' STEK-KEY
      C-DATA1-B C-DATA2-B N-DATA-B C-DATA-B
      IF C-DATA1-B = H'00000000' THEN ESCAPE BOTTOM END-IF
      ASSIGN C-DATA1 = C-DATA1-B
      IF NOT(C-DATA1 = FIRST-EL(N-DATA) THRU C-DATA2) THEN
        REINPUT'дсакхпнбюмхе хдемрхтхйюрнпю б люяяхбе'
        MARK *#FIELD-01(C-LINE) ALARM
      END-IF
      ASSIGN C-DATA-B = C-DATA1-B
    END-REPEAT
    ASSIGN KEYKD3 = #FIELD-01(C-LINE)
    ASSIGN KEYDT3 = #FIELD-02(C-LINE)
    COMPUTE C-DATA = FIRST-EL(N-DATA) + C-LINE - 1
    ASSIGN C-DATA-B = C-DATA
    CALL 'RWSX' C-DATA-B STEK-REC RD-REC N-DATA-B
    IF   STEK-REC  NE ' '
       IF   STEK-ISN  NE 0
          FIND IBS-VKU-FILE OG-VA-DT = KEY3
            IF *ISN NE STEK-ISN
               REINPUT'дсакхпнбюмхе хдемрхтхйюрнпю б тюике'
               MARK *#FIELD-01(C-LINE) ALARM
            END-IF
          END-FIND
       END-IF
       IF STEK-ISN = 0 AND STEK-01 =  #FIELD-01(C-LINE)
                       AND STEK-02 NE #FIELD-02(C-LINE)
          FIND IBS-VKU-FILE OG-VA-DT = KEY3
            IF *NUMBER > 0
                REINPUT'дсакхпнбюмхе хдемрхтхйюрнпю б тюике'
                MARK *#FIELD-01(C-LINE) ALARM
            END-IF
          END-FIND
       END-IF
    END-IF
    IF   STEK-REC  = ' '
        FIND IBS-VKU-FILE OG-VA-DT = KEY3
          IF *NUMBER > 0
             REINPUT'дсакхпнбюмхе хдемрхтхйюрнпю б тюике'
             MARK *#FIELD-01(C-LINE) ALARM
          END-IF
       END-FIND
    END-IF
    ASSIGN KEYKD5 = #FIELD-01(C-LINE)
KU1.  FIND NUMBER IBS-VKU-FILE OG-VV = KEY5
    IF *NUMBER(KU1.) = 0 OR #FIELD-01(C-LINE) = SYS-RUB
      REINPUT 'мебепмши йнд бюкчрш'
      MARK *#FIELD-01(C-LINE) ALARM
    END-IF
    IF #FIELD-02(C-LINE) NE MASK(YYYYMMDD)
      REINPUT 'дюрю' MARK *#FIELD-02(C-LINE) ALARM
    END-IF
    IF #FIELD-03(C-LINE) = 0
      REINPUT 'йспя' MARK *#FIELD-03(C-LINE) ALARM
    END-IF
    IF #FIELD-04(C-LINE) = 0  #FIELD-04(C-LINE) := 1  END-IF
    ELSE                                          /* ярпнйю сдюкемю
    IF C-DATA > MAX-EL(N-DATA) THEN ESCAPE BOTTOM END-IF
  END-IF
*
END-FOR
END-IF
*
END-SUBROUTINE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* опнжедспю хглемемхъ дюммшу
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE UPD-PROC
*
RESET OS-FK-G
FOR C-DEL 1 MAX-EL(N-DEL)
  ASSIGN C-DEL-B = C-DEL
  CALL 'RWSX' C-DEL-B STEK-ISN RD-REC N-DEL-B
  GET IBS-VKU-FILE STEK-ISN
  DELETE
END-FOR
*
FOR C-DATA 1 TO MAX-EL(N-DATA)
*
  ASSIGN C-DATA-B = C-DATA
  CALL 'RWSX' C-DATA-B STEK-REC RD-REC N-DATA-B
*
  IF STEK-FF = H'01' THEN
*
    IF STEK-ISN NE 0 THEN GET IBS-VKU-FILE STEK-ISN END-IF
*
    ASSIGN IBS-VKU-FILE.OG-ID = OG-IDENT-G
    ASSIGN IBS-VKU-FILE.VA-ID = STEK-01
    ASSIGN IBS-VKU-FILE.DT-ID = STEK-02
    ASSIGN IBS-VKU-FILE.KU-VA = STEK-03
    ASSIGN IBS-VKU-FILE.EI-VA = STEK-04
*
    IF STEK-ISN NE 0
      THEN UPDATE
      ELSE STORE IBS-VKU-FILE
    END-IF
*
  END-IF
*
  END OF TRANSACTION
*
END-FOR
*
  END OF TRANSACTION
END-SUBROUTINE
END
