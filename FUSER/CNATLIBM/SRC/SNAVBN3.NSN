* >Natural Source Header 000000 /*<RO>>
* :NatName SNAVBN3
* :UID IEN
* :Mode S
* :CP
* :Date 20001019
* :Time 1045330
* <Natural Source Header /*<<RO>
*********************************************************************
*                                                                   *
* ÂÅÄÅÍÈÅ ÊÎÄÈÔÈÊÀÒÎÐÀ ÁÀÍÊÎÂ                                       *
*                                                                   *
*********************************************************************
DEFINE DATA
PARAMETER USING PRMNAVI       /* ÃËÎÁÀËÜÍÛÅ ÏÅÐÅÌÅÍÍÛÅ ÄËß ÂÑÅÉ ÑÈÑÒÅÌÛ
   LOCAL  USING LCLBNL     /* VIEW ÍÀ ÔÀÉË IBS-SYS-FILE
   LOCAL  USING LCLFROL1      /* ÎÁÙÈÅ ÏÅÐÅÌÅÍÍÛÅ
   LOCAL
*
* ÑÒÐÓÊÒÓÐÀ ÝËÅÌÅÍÒÀ ÑÒÅÊÀ Ñ ÄÀÍÍÛÌÈ
*
    1 STEK-REC(A253)
    1 REDEFINE STEK-REC
      2 STEK-FF(B01)
      2 STEK-ISN(P07)
      2 STEK-UP(A01)
*
      2 STEK-01(N08)
      2 STEK-02(A09)
      2 STEK-03(A02)
      2 STEK-04(A20)
      2 STEK-05(A25)
      2 STEK-06(A35)
      2 STEK-07(A09)
      2 STEK-08(A68)
      2 STEK-09(A06)
      2 STEK-10(A06)
      2 STEK-11(A59)
***
*     2 STEK-02(A15)  /* ÈÇ ÓÔÐÎ
*     2 STEK-03(A03)  /* ÈÇ ÓÔÐÎ
*     2 STEK-07(A15)  /* ÈÇ ÓÔÐÎ
***
    1 KEY1(A13)               /*  ÏÎÈÑÊÎÂÛÉ ÊËÞ× ÍÀ×ÀËÜÍÛÉ
    1 REDEFINE KEY1
      2 KEYOG1(N5)            /*  ÎÐÃÀÍÈÇÀÖÈß
      2 KEYKD1(N8)            /*  ÊÎÄ
* FOR MAP
    1 #KB(N08)                /*  ÊÎÄ ÁÀÍÊÀ
    1 #MF(A15)                /*  ÊÎÄ ÌÔÎ
    1 #UT(A3)                 /*  Ó×ÀÑÒÍÈÊ
    1 #KS(A20)                /*  ÊÎÐ. Ñ×ÅÒ
    1 #NAME(A60)
    1 #ADRES(A60)
    1 #MF-SH(A06)
END-DEFINE
INPUT #KB #MF #UT #KS #NAME #ADRES #MF-SH
MOVE 7   TO N-DATA N-DATA-B     /* ÍÎÌÅÐ ÑÒÅÊÀ Ñ ÄÀÍÍÛÌÈ
MOVE 01 TO N-DEL
MOVE 12000  TO Q-DATA
*
  ASSIGN C-DATA = 0
DECIDE FOR FIRST CONDITION
WHEN #KB NE 0
  ASSIGN KEYOG1 = OG-IDENT-G
  ASSIGN KEYKD1 = #KB
  FIND IBS-KBN-FILE OG-BN = KEY1
    COMPUTE C-DATA = C-DATA + 1
    IF C-DATA > Q-DATA THEN ESCAPE BOTTOM END-IF
*
    ASSIGN STEK-FF  = H'00'
    ASSIGN STEK-ISN = *ISN
*
    PERFORM ASSIGN-PROC
*
  END-FIND
WHEN #MF-SH NE ' '
*
  FIND IBS-KBN-FILE OG-ID = OG-IDENT-G AND MF-SH = #MF-SH
    COMPUTE C-DATA = C-DATA + 1
    IF C-DATA > Q-DATA THEN ESCAPE BOTTOM END-IF
*
    ASSIGN STEK-FF  = H'00'
    ASSIGN STEK-ISN = *ISN
*
    PERFORM ASSIGN-PROC
*
  END-FIND
WHEN #MF NE ' '
  FIND IBS-KBN-FILE OG-ID = OG-IDENT-G AND MF-ID = #MF
    COMPUTE C-DATA = C-DATA + 1
    IF C-DATA > Q-DATA THEN ESCAPE BOTTOM END-IF
*
    ASSIGN STEK-FF  = H'00'
    ASSIGN STEK-ISN = *ISN
*
    PERFORM ASSIGN-PROC
*
  END-FIND
WHEN #KS NE ' '
  FIND IBS-KBN-FILE OG-ID = OG-IDENT-G AND KR-OG(1) = #KS
    COMPUTE C-DATA = C-DATA + 1
    IF C-DATA > Q-DATA THEN ESCAPE BOTTOM END-IF
*
    ASSIGN STEK-FF  = H'00'
    ASSIGN STEK-ISN = *ISN
*
    PERFORM ASSIGN-PROC
*
  END-FIND
WHEN NONE
  ASSIGN KEYOG1 = OG-IDENT-G
  READ IBS-KBN-FILE BY OG-BN  KEY1
  IF OG-ID NE OG-IDENT-G ESCAPE BOTTOM END-IF
  IF #UT    NE ' ' AND UT-ID NE #UT         ESCAPE TOP END-IF
  IF #KS    NE ' ' AND KR-OG(1) NE #KS      ESCAPE TOP END-IF
  IF #NAME  NE ' ' AND NM-BN NE SCAN #NAME  ESCAPE TOP END-IF
  IF #ADRES NE ' ' AND AD-BN NE SCAN #ADRES ESCAPE TOP END-IF
    COMPUTE C-DATA = C-DATA + 1
    IF C-DATA > Q-DATA THEN ESCAPE BOTTOM END-IF
*
    ASSIGN STEK-FF  = H'00'
    ASSIGN STEK-ISN = *ISN
*
    PERFORM ASSIGN-PROC
*
  END-READ
END-DECIDE
  ASSIGN MAX-EL(N-DATA)   = C-DATA
  ASSIGN FIRST-EL(N-DATA) = 1
  ASSIGN MAX-EL(N-DEL)    = 0
*
DEFINE SUBROUTINE ASSIGN-PROC
*
    ASSIGN STEK-01 = IBS-KBN-FILE.BN-ID
    ASSIGN STEK-02 = IBS-KBN-FILE.MF-ID
    ASSIGN STEK-03 = IBS-KBN-FILE.UT-ID
    ASSIGN STEK-04 = IBS-KBN-FILE.KR-OG(1)
    ASSIGN STEK-05 = IBS-KBN-FILE.AD-MK
    ASSIGN STEK-06 = IBS-KBN-FILE.AD-BN
    ASSIGN STEK-07 = IBS-KBN-FILE.MK-ID
    ASSIGN STEK-08 = IBS-KBN-FILE.NM-BN
    ASSIGN STEK-09 = IBS-KBN-FILE.MF-SH
    ASSIGN STEK-10 = IBS-KBN-FILE.MR-SH
    ASSIGN STEK-11 = IBS-KBN-FILE.NA-F
*
    ASSIGN C-DATA-B = C-DATA
    CALL 'RWSX' C-DATA-B STEK-REC WR-REC N-DATA-B
END-SUBROUTINE
END
