* >Natural Source Header 000000 /*<RO>>
* :NatName SNAVPL
* :UID IEN
* :Mode S
* :CP
* :Date 20001019
* :Time 1657330
* <Natural Source Header /*<<RO>
********************************************************
* бедемхе йндхтхйюрнпю онднрвермшу кхж он IBS-SYS-FILE *
********************************************************
DEFINE DATA
*  GLOBAL USING UFROG       /* цкнаюкэмше оепелеммше дкъ бяеи яхярелш
PARAMETER USING PRMNAVI
*
LOCAL  USING LCLPLL     /* VIEW мю тюик IBS-SYS-FILE
  LOCAL  USING LCLFROL1     /* наыхе оепелеммше
  LOCAL  USING PRMHELP
  LOCAL
    1 SELFUN(A60) INIT<'оНДНРВЕРМШЕ КХЖЮ'>
    1 SELREG(A40)
    1 INPUT-REC(A066/1:15)
    1 REDEFINE INPUT-REC
      2 #INPUT-REC(15)
* онкъ мебшбндхлше мю щйпюм
        3 FIELD-FF  (B001) /* ткюц хглемемхъ/сдюкемхъ гюохях
        3 FIELD-ISN (P007) /* ISN гюохях
        3 FIELD-UP  (A001) /* ткюц гюыхрш гюохях
* онкъ бшбндхлше мю щйпюм
        3 #FIELD-01 (N005)      /* йнд
        3 REDEFINE #FIELD-01
          4 #FIELD-01-A(A005)
        3 #FIELD-02 (N005)      /* ондп.
        3 #FIELD-03 (A050)      /* тюлхкхъ
* дхмюлхвеяйхе юрпхасрш дкъ бшбндхлшу онкеи
    1 #FIELD-01C (C/1:15)
    1 #FIELD-02C (C/1:15)
    1 #FIELD-03C (C/1:15)
*
* ярпсйрспю щкелемрю ярейю я дюммшлх
*
    1 STEK-REC(A66)
    1 REDEFINE STEK-REC
      2 STEK-FF(B01)
      2 STEK-ISN(P07)
      2 STEK-UP(A01)
*
      2 STEK-01(N05)
      2 STEK-02(N05)
      2 STEK-03(A50)
    1 KEY1(A10)               /*  онхяйнбши йкчв мювюкэмши
    1 REDEFINE KEY1
      2 KEYOG1(N5)            /*  йнд нпцюмхгюжхх
      2 KEYKD1(N5)            /*  йнд ондпюгдекемхъ
    1 KEY2(A10)               /*  онхяйнбши йкчв йнмевмши
    1 REDEFINE KEY2
      2 KEYOG2(N5)            /*  йнд нпцюмхгюжхх
      2 KEYKD2(N5)            /*  йнд ондпюгдекемхъ
    1 KEY3(A10)               /*  онхяйнбши йкчв
    1 REDEFINE KEY3
      2 KEYOG3(N5)            /*  йнд нпцюмхгюжхх
      2 KEYKD3(N5)            /*  хдемрхтхйюрнп о/к
    1 KEY4(A10)               /*  онхяйнбши йкчв
    1 REDEFINE KEY4
      2 KEYOG4(N5)            /*  йнд нпцюмхгюжхх
      2 KEYKD4(N5)            /*  йнд ондпюгдекемхъ
* FOR MAP
    1 #KD(N05)                /*  йнд ондп.
    1 REDEFINE #KD
      2 #KDB(B1)
    1 #PL(N5)                 /*  йнд онднрвермнцн кхжю
    1 REDEFINE #PL
      2 #PLB(B1)
    1 #NAME(A50)              /*  нангмювемхе
    1 REDEFINE #NAME
      2 #NAMEB(B1)
    1 NP (N2)
END-DEFINE
*
SET KEY PF1 PF2 PF3 PF4 PF5 PF6 PF7 PF8 PF9 PF10 PF11 PF12
INCLUDE CCASKOG
*
MOVE 5   TO N-DATA N-DATA-B     /* мнлеп ярейю я дюммшлх
MOVE 66  TO L-DATA L-DATA-B     /* дкхмю щкелемрю б ярейе я дюммшлх
MOVE 1000 TO Q-DATA Q-DATA-B    /* йнкхвеярбн щкелемрнб б ярейе я дюммшлх
*
MOVE 6   TO N-DEL  N-DEL-B      /* мнлеп ярейю я ISN сдюкеммшу гюохяеи
MOVE 4   TO L-DEL  L-DEL-B      /* дкхмю щкелемрю б ярейе я ISN
MOVE 1000 TO Q-DEL  Q-DEL-B      /* йнкхвеярбн щкелемрнб б ярейе я ISN
*
ASSIGN Q-FIELD = 3          /* онкеи б ярпнйе
ASSIGN Q-LINE = 15          /* ярпнй мю щйпюме
ASSIGN F-LINE = 6           /* ялеыемхе оепбни ярпнйх
ASSIGN T-KEY = 7            /* мювюкэмюъ онгхжхъ йкчвебнцн юрпхасрю
ASSIGN L-KEY = 5            /* дкхмю йкчвебнцн юрпхасрю
ASSIGN P-INPUT(1,1) = 5
ASSIGN P-INPUT(2,1) = 15
ASSIGN P-INPUT(3,1) = 24
ASSIGN P-INPUT(1,2) = 5
ASSIGN P-INPUT(2,2) = 5
ASSIGN P-INPUT(3,2) = 50
*
ASSIGN P-STEK(1,1) = 7
ASSIGN P-STEK(2,1) = 12
ASSIGN P-STEK(3,1) = 17
ASSIGN P-STEK(1,2) = 5
ASSIGN P-STEK(2,2) = 5
ASSIGN P-STEK(3,2) = 50
*
* нямнбмни жхйк
*
REPEAT
 IF OS-FP-G = ' ' OR = '1'  /*  ме бшдюбюрэ люп опх бнгбпюре хг ондп.
 IF RE-MSG = ' '
  INPUT USING MAP 'MAPPLM1'
 ELSE
  INPUT TEXT RE-MSG  ALARM USING MAP 'MAPPLM1'
 END-IF
 END-IF
 RESET OS-FP-G
 RESET RE-MSG
*
  IF *PF-KEY = 'PF1'
     INCLUDE CCHELP '31'
     ESCAPE TOP
  END-IF
*
* WRITE 'ENTR' '='#KD '='#PL '='#NAME
  !0.INCLUDE CCUFRO50
  INCLUDE CCUFRO51
  ASSIGN C-CURS = 1           /* ярпнйю я йспянпнл
  ASSIGN KEYOG4 = OG-IDENT-G
  IF #KD = 0
    ASSIGN KEYKD1 = 0  ASSIGN KEYKD2 = 99999
    ELSE  ASSIGN KEYKD1 = #KD  ASSIGN KEYKD2 = #KD
    ASSIGN KEYKD4 = #KD
    FIND NUMBER IBS-KPL-FILE OG-PD = KEY4
    IF *NUMBER(!0) = 0
      ASSIGN RE-MSG = 'мебепмши мнлеп ондпюгдекемхъ'
      ESCAPE TOP
    END-IF
  END-IF
*
  INCLUDE CCUFRO1
  REPEAT
*
    RESET #FIELD-01(*) #FIELD-02(*) #FIELD-03(*)
*
    PERFORM ARRY-PROC
*
    INPUT MARK *#FIELD-01(C-CURS) USING MAP 'MAPPLM2'
*   COMPUTE C-CURS = *CURS-LINE - F-LINE
    FOR C-CURS 1 Q-LINE
     IF *CURS-FIELD = POS(#FIELD-01(C-CURS)) OR
                    = POS(#FIELD-02(C-CURS)) OR
                    = POS(#FIELD-03(C-CURS))
            ESCAPE BOTTOM  END-IF
   END-FOR
INCLUDE CCUFRO2                       /* напюанрйю от
*
  IF *PF-KEY = 'PF1'
     INCLUDE CCHELP '32'
     ESCAPE TOP
  END-IF
*
   IF *PF-KEY = 'PF2' AND FL-CURS = 0 AND #FIELD-02(C-CURS) NE 0 THEN
*   COMPUTE C-CURS = *CURS-LINE - F-LINE
    PERFORM SCAN-PROC
    COMPUTE COU-EL(N-DATA) = FIRST-EL(N-DATA) + C-CURS - 1
    IF #KD NE 0 OR #PL NE 0 OR #NAME NE ' ' ASSIGN OS-FP-G = '1'
    END-IF
    IF #KD = 0 AND #PL = 0 AND #NAME = ' '  ASSIGN OS-FP-G = '2'
    END-IF
    IF #KD   = 0    ASSIGN #KDB   = H'00' END-IF
    IF #PL   = 0    ASSIGN #PLB   = H'00' END-IF
    IF #NAME = ' '  ASSIGN #NAMEB = H'00' END-IF
*    STACK TOP COMMAND *PROGRAM #KD #PL #NAME
*    STACK TOP COMMAND 'NAVPO' #FIELD-02(C-CURS)
*    STOP
     STACK TOP DATA #FIELD-02(C-CURS)
     CALLNAT 'SNAVPO' PRMNAV
     INCLUDE CCRFUNNM
  END-IF
*
* INCLUDE CCUFRO2                       /* напюанрйю от
*
 END-REPEAT
END-REPEAT
*
INCLUDE CCUFRO3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* времхе дюммшу хг IBS-SYS-FILE б ярей я дюммшлх
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE LOAD-PROC
*
  ASSIGN C-DATA = 0
*  WRITE 'FIND' '='KEY1 '='KEY2
*  FIND IBS-KPL-FILE OG-PO = KEY1 THRU KEY2
  READ IBS-KPL-FILE BY OG-PO = KEY1
    IF OG-ID NE OG-IDENT-G ESCAPE BOTTOM END-IF
*  WRITE PL-ID PO-ID
    IF #PL   NE 0   AND  PL-ID  NE #PL        ESCAPE TOP END-IF
    IF #NAME NE ' ' AND  NM-PL  NE SCAN #NAME ESCAPE TOP END-IF
*   ASSIGN C-DATA = *COUNTER
    COMPUTE C-DATA = C-DATA + 1
    IF C-DATA > Q-DATA THEN ESCAPE BOTTOM END-IF
*
    ASSIGN STEK-FF  = H'00'
    ASSIGN STEK-ISN = *ISN
*
    ASSIGN STEK-01 = PL-ID
    ASSIGN STEK-02 = PO-ID
    ASSIGN STEK-03 = NM-PL
*
    ASSIGN C-DATA-B = C-DATA
    CALL 'RWSX' C-DATA-B STEK-REC WR-REC N-DATA-B
*
  END-READ
*
  ASSIGN MAX-EL(N-DATA)   = C-DATA
  ASSIGN FIRST-EL(N-DATA) = 1
  ASSIGN MAX-EL(N-DEL)    = 0
*
END-SUBROUTINE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* опнжедспю опнбепйх дюммшу щйпюмю
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CHECK-PROC
*
FOR C-LINE = 1 TO Q-LINE /* опнялюрпхбюел ярпнйх щйпюмю
*
  IF #FIELD-01(C-LINE) NE 0 THEN                /* ярпнйю ме сдюкемю
    EXAMINE #FIELD-01-A(*) #FIELD-01-A(C-LINE) GIVING NUMBER C-DUBL
    IF C-DUBL > 1 THEN
      REINPUT'дсакхпнбюмхе хдемрхтхйюрнпю мю щйпюме'
      MARK *#FIELD-01(C-LINE) ALARM
    END-IF
*
    RESET C-DATA-B
    COMPUTE C-DATA2 = FIRST-EL(N-DATA) + Q-LINE - 1
    REPEAT
      ASSIGN C-DATA1-B = T-KEY
      ASSIGN C-DATA2-B = L-KEY
      CALL 'CMPX' #FIELD-01(C-LINE)
      C-DATA1-B C-DATA2-B N-DATA-B C-DATA-B
      IF C-DATA1-B = H'00000000' THEN ESCAPE BOTTOM END-IF
      ASSIGN C-DATA1 = C-DATA1-B
      IF NOT(C-DATA1 = FIRST-EL(N-DATA) THRU C-DATA2) THEN
        REINPUT'дсакхпнбюмхе хдемрхтхйюрнпю б люяяхбе'
        MARK *#FIELD-01(C-LINE) ALARM
      END-IF
      !1.ASSIGN C-DATA-B = C-DATA1-B
    END-REPEAT
    ASSIGN KEYKD3 = #FIELD-01(C-LINE)
    COMPUTE C-DATA = FIRST-EL(N-DATA) + C-LINE - 1
    ASSIGN C-DATA-B = C-DATA
    CALL 'RWSX' C-DATA-B STEK-REC RD-REC N-DATA-B
    IF STEK-REC NE ' '
       IF STEK-ISN NE 0
          !2.FIND IBS-KPL-FILE OG-PL = KEY3
            IF *ISN(!1) NE STEK-ISN
               REINPUT'дсакхпнбюмхе хдемрхтхйюрнпю б тюике'
               MARK *#FIELD-01(C-LINE) ALARM
            END-IF
          END-FIND
       END-IF
       IF STEK-ISN = 0 AND STEK-01 NE #FIELD-01(C-LINE)
          FIND IBS-KPL-FILE OG-PL = KEY3
            !3.IF *NUMBER(!2) > 0
                REINPUT'дсакхпнбюмхе хдемрхтхйюрнпю б тюике'
                MARK *#FIELD-01(C-LINE) ALARM
            END-IF
          END-FIND
       END-IF
    END-IF
    IF STEK-REC = ' '
       FIND IBS-KPL-FILE OG-PL = KEY3
         IF *NUMBER(!3) > 0
            REINPUT'дсакхпнбюмхе хдемрхтхйюрнпю б тюике'
            MARK *#FIELD-01(C-LINE) ALARM
         END-IF
       END-FIND
    !4.END-IF
    ASSIGN KEYKD4 = #FIELD-02(C-LINE)
    IF #FIELD-02(C-LINE) = 0
      REINPUT 'ондпюгдекемхе' MARK *#FIELD-02(C-LINE) ALARM
    END-IF
    IF #FIELD-03(C-LINE) = ' '
      REINPUT 'нангмювемхе' MARK *#FIELD-03(C-LINE) ALARM
    END-IF
    FIND NUMBER IBS-KPL-FILE OG-PD = KEY4
    IF *NUMBER(!4) = 0
      REINPUT 'мебепмши мнлеп ондпюгдекемхъ'
      MARK *#FIELD-02(C-LINE) ALARM
    END-IF
    ELSE                                          /* ярпнйю сдюкемю
    IF C-DATA > MAX-EL(N-DATA) THEN ESCAPE BOTTOM END-IF
  END-IF
*
END-FOR
*
END-SUBROUTINE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* опнжедспю хглемемхъ дюммшу
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE UPD-PROC
*
 ASSIGN OS-FK-G = 'P'            /* ме оепегюцпсфюрэ йндхтхйюрнпш
*
FOR C-DEL 1 TO MAX-EL(N-DEL)
  ASSIGN C-DEL-B = C-DEL
  CALL 'RWSX' C-DEL-B STEK-ISN RD-REC N-DEL-B
  GET IBS-KPL-FILE STEK-ISN
  DELETE
END-FOR
*
FOR C-DATA 1 TO MAX-EL(N-DATA)
*
  ASSIGN C-DATA-B = C-DATA
  CALL 'RWSX' C-DATA-B STEK-REC RD-REC N-DATA-B
*
  IF STEK-FF = H'01' THEN
*
    IF STEK-ISN NE 0 THEN GET IBS-KPL-FILE STEK-ISN END-IF
*
    ASSIGN IBS-KPL-FILE.OG-ID = OG-IDENT-G
    ASSIGN IBS-KPL-FILE.PL-ID = STEK-01
    ASSIGN IBS-KPL-FILE.PO-ID = STEK-02
    ASSIGN IBS-KPL-FILE.NM-PL = STEK-03
*
    IF STEK-ISN NE 0
      THEN UPDATE
      ELSE STORE IBS-KPL-FILE
    END-IF
*
  END-IF
*
  END OF TRANSACTION
*
END-FOR
*
END-SUBROUTINE
END
