* >Natural Source Header 000000 /*<RO>>
* :NatName SNAVGP
* :UID MSA
* :Mode S
* :CP
* :Date 20101018
* :Time 1411150
* <Natural Source Header /*<<RO>
**************************************
* бедемхе цпсоо ондпюгдекемхи(яксфа) *
**************************************
DEFINE DATA
*  GLOBAL USING UFROG       /* цкнаюкэмше оепелеммше дкъ бяеи яхярелш
PARAMETER USING PRMNAVI
*
  LOCAL  USING LCLKGPL    /* VIEW мю тюик IBS-SYS-FILE
  LOCAL  USING LCLFROL1       /* наыхе оепелеммше
  LOCAL  USING PRMHELP
  LOCAL
    1 SELFUN(A60) INIT<'цПСООШ ОНДПЮГДЕКЕМХИ(ЯКСФАШ)'>
    1 SELREG(A40)
    1 INPUT-REC(A061/1:15)
    1 REDEFINE INPUT-REC
      2 #INPUT-REC(15)
* онкъ мебшбндхлше мю щйпюм
        3 FIELD-FF  (B001) /* ткюц хглемемхъ/сдюкемхъ гюохях
        3 FIELD-ISN (I4) /* ISN гюохях
        3 FIELD-UP  (A001) /* ткюц гюыхрш гюохях
* онкъ бшбндхлше мю щйпюм
        3 #FIELD-01 (N005)      /* йнд
        3 REDEFINE #FIELD-01
          4 #FIELD-01-A(A005)
        3 #FIELD-02 (A050)      /* нангмювемхе
* дхмюлхвеяйхе юрпхасрш дкъ бшбндхлшу онкеи
    1 #FIELD-01C (C/1:15)
    1 #FIELD-02C (C/1:15)
*
* ярпсйрспю щкелемрю ярейю я дюммшлх
*
    1 STEK-REC(A61)
    1 REDEFINE STEK-REC
      2 STEK-FF(B01)
      2 STEK-ISN(I4)
      2 STEK-UP(A01)
*
      2 STEK-01(N05)
      2 STEK-02(A50)
    1 KEY1(A10)               /*  онхяйнбши йкчв мювюкэмши
    1 REDEFINE KEY1
      2 KEYOG1(N5)            /*  нпцюмхгюжхъ
      2 KEYKD1(N5)            /*  йнд
    1 KEY2(A10)               /*  онхяйнбши йкчв йнмевмши
    1 REDEFINE KEY2
      2 KEYOG2(N5)
      2 KEYKD2(N5)
    1 KEY3(A10)               /*  онхяйнбши йкчв йнмрпнкэмши
    1 REDEFINE KEY3
      2 KEYOG3(N5)
      2 KEYKD3(N5)
    1 #DATA(N3)
    1 #KKB(N5)
* FOR MAP
    1 #KD(N05)                /*  йнд ондп.
    1 #NAME(A50)
END-DEFINE
*
SET KEY PF1 PF2 PF3 PF4 PF5 PF6 PF7 PF8 PF9 PF10 PF11 PF12
INCLUDE CCASKOG
*
MOVE 3   TO N-DATA N-DATA-B  /* мнлеп ярейю я дюммшлх
MOVE 61  TO L-DATA L-DATA-B  /* дкхмю щкелемрю б ярейе я дюммшлх
MOVE 1000 TO Q-DATA Q-DATA-B /* йнкхвеярбн щкелемрнб б ярейе я дюммшлх
*
MOVE 4   TO N-DEL  N-DEL-B      /* мнлеп ярейю я ISN сдюкеммшу гюохяеи
MOVE 4   TO L-DEL  L-DEL-B      /* дкхмю щкелемрю б ярейе я ISN
MOVE 1000 TO Q-DEL  Q-DEL-B     /* йнкхвеярбн щкелемрнб б ярейе я ISN
*
ASSIGN Q-FIELD = 2          /* онкеи б ярпнйе
ASSIGN Q-LINE = 15          /* ярпнй мю щйпюме
ASSIGN F-LINE = 6           /* ялеыемхе оепбни ярпнйх
ASSIGN T-KEY = 7            /* мювюкэмюъ онгхжхъ йкчвебнцн юрпхасрю
ASSIGN L-KEY = 5            /* дкхмю йкчвебнцн юрпхасрю
ASSIGN P-INPUT(1,1) = 9
ASSIGN P-INPUT(2,1) = 24
ASSIGN P-INPUT(1,2) = 5
ASSIGN P-INPUT(2,2) = 50
*
ASSIGN P-STEK(1,1) = 7
ASSIGN P-STEK(2,1) = 12
ASSIGN P-STEK(1,2) = 5
ASSIGN P-STEK(2,2) = 50
*
* нямнбмни жхйк
*
REPEAT
  ASSIGN #DATA = *DATA
  INPUT USING MAP 'MAPGPM1'
  IF OP-IDENT-G NE 0 RESET #NAME END-IF /* опх оепеунде хг NAVPO рюл 0
*
  IF *PF-KEY = 'PF1'
     INCLUDE CCHELP '45'
     ESCAPE TOP
  END-IF
*
  INCLUDE CCUFRO50
  INCLUDE CCUFRO51
  ASSIGN C-CURS = 1           /* ярпнйю я йспянпнл
  IF #KD = 0
    ASSIGN KEYKD1 = 1  ASSIGN KEYKD2 = 99999
    ELSE
      ASSIGN KEYKD1 = #KD
      ASSIGN KEYKD2 = #KD
      ASSIGN #KKB   = #KD
* END-IF
      FIND NUMBER IBS-KGP-FILE    OG-GP = KEY1
      IF *NUMBER = 0
          REINPUT 'мебепмн гюдюм йнд цпсоош ондпюгдекемхи' ALARM
      END-IF
  END-IF
*
  INCLUDE CCUFRO1
*
  REPEAT
*
    RESET #FIELD-01(*) #FIELD-02(*)
*
    PERFORM ARRY-FIRST       /* FOR N ELEMENT
    PERFORM ARRY-PROC
*
    INPUT MARK F-MARK  USING MAP 'MAPGPM2'
*
  IF *PF-KEY = 'PF1'
     INCLUDE CCHELP '46'
     ESCAPE TOP
  END-IF
*
    INCLUDE CCUFRO2                        /* напюанрйю от
*
    IF *PF-KEY = 'PF11'
       ASSIGN GP-IDENT-G = #FIELD-01(C-CURS)
       CALL'FRSX' N-DATA-B  CALL 'FRSX' N-DEL-B
       RESET MAX-EL(N-DATA-B) MAX-EL(N-DEL-B)
       ESCAPE BOTTOM
    END-IF
  END-REPEAT
  SET CONTROL 'K0'
*  IF #DATA > 0 ESCAPE BOTTOM  END-IF
  IF OP-IDENT-G NE 0 ESCAPE BOTTOM END-IF /* пюанрю онд NAVPO
END-REPEAT
*
INCLUDE CCUFRO3
*
* * * * * * * * * * * * * * * * * * * * * * * * * *
* времхе дюммшу хг IBS-SYS-FILE б ярей я дюммшлх
* * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE LOAD-PROC
*
  ASSIGN C-DATA = 0
  ASSIGN KEYOG1 = OG-IDENT-G
  READ IBS-KGP-FILE BY OG-GP = KEY1
    IF OG-ID NE OG-IDENT-G ESCAPE BOTTOM END-IF
    IF #NAME NE ' ' AND NM-PD NE SCAN #NAME ESCAPE TOP END-IF
    IF #KD   NE 0   AND #KD   NE GP-ID      ESCAPE TOP END-IF
    COMPUTE C-DATA = C-DATA + 1
    IF C-DATA > Q-DATA THEN ESCAPE BOTTOM END-IF
    ASSIGN STEK-FF  = H'00'
    ASSIGN STEK-ISN = *ISN
    ASSIGN STEK-01 = GP-ID
    ASSIGN STEK-02 = NM-PD
    ASSIGN C-DATA-B = C-DATA
    CALL 'RWSX' C-DATA-B STEK-REC WR-REC N-DATA-B
  END-READ
*
  ASSIGN MAX-EL(N-DATA)   = C-DATA
  ASSIGN FIRST-EL(N-DATA) = 1
  ASSIGN MAX-EL(N-DEL)    = 0
*
END-SUBROUTINE
* * * * * * * * * * * * * * * * * * * * * * * * * * * *
* опнжедспю опнбепйх дюммшу щйпюмю
* * * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CHECK-PROC
*
FOR C-LINE = 1 TO Q-LINE /* опнялюрпхбюел ярпнйх щйпюмю
*
IF #FIELD-01(C-LINE) NE 0 THEN                /* ярпнйю ме сдюкемю
   EXAMINE #FIELD-01-A(*) #FIELD-01-A(C-LINE) GIVING NUMBER C-DUBL
   IF C-DUBL > 1 THEN
      REINPUT 'дСАКХПНБЮМХЕ ХДЕМРХТХЙЮРНПЮ'
              MARK *#FIELD-01(C-LINE) ALARM
   END-IF
* дсакхпнбюмхе б ярейе
   C-DATA1 := FIRST-EL(N-DATA)
   C-DATA2 := FIRST-EL(N-DATA) + Q-LINE - 1
   FOR C-DATA 1 MAX-EL(N-DATA)
   IF C-DATA = C-DATA1 THRU C-DATA2 THEN ESCAPE TOP END-IF
   C-DATA-B := C-DATA
   CALL 'RWSX' C-DATA-B STEK-REC RD-REC N-DATA-B
   IF STEK-01 = #FIELD-01(C-LINE) THEN
      REINPUT 'сЙЮГЮММШИ ЙНД СФЕ НОПЕДЕКЕМ'
               MARK *#FIELD-01(C-LINE) ALARM
   END-IF
   END-FOR
* дсакхпнбюмхе б тюике
   ASSIGN KEYKD3 = #FIELD-01(C-LINE)
   !0.FIND IBS-KGP-FILE OG-GP = KEY3
   IF NOT ( *ISN(!0) = FIELD-ISN(*) ) THEN
      STEK-ISN := *ISN(!0) C-DEL-B := 1
      CALL 'CMPXF' STEK-ISN C-DEL-B H'00000004' N-DEL-B
      IF C-DEL-B = 0 THEN
         REINPUT 'йoД ЦПСООШ yФe cyЫecРБyeР'
         MARK *#FIELD-01(C-LINE) ALARM
      END-IF
   END-IF
   END-FIND
*
   IF #FIELD-02(C-LINE) = ' '
      REINPUT 'мЮХЛЕМНБЮМХЕ ?' MARK *#FIELD-02(C-LINE) ALARM
   END-IF
END-IF
END-FOR
*
END-SUBROUTINE
* * * * * * * * * * * * * * * * * * * *
* опнжедспю хглемемхъ дюммшу
* * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE UPD-PROC
*
FOR C-DEL 1 TO MAX-EL(N-DEL)
  ASSIGN C-DEL-B = C-DEL
  CALL 'RWSX' C-DEL-B STEK-ISN RD-REC N-DEL-B
  GET IBS-KGP-FILE STEK-ISN
  DELETE
END-FOR
*
FOR C-DATA 1 TO MAX-EL(N-DATA)
*
  ASSIGN C-DATA-B = C-DATA
  CALL 'RWSX' C-DATA-B STEK-REC RD-REC N-DATA-B
*
  IF STEK-FF = H'01' THEN
*
    IF STEK-ISN NE 0 THEN GET IBS-KGP-FILE STEK-ISN END-IF
*
    ASSIGN IBS-KGP-FILE.OG-ID = OG-IDENT-G
    ASSIGN IBS-KGP-FILE.GP-ID = STEK-01
    ASSIGN IBS-KGP-FILE.NM-PD = STEK-02
*
    IF STEK-ISN NE 0
      THEN UPDATE
      ELSE STORE IBS-KGP-FILE
    END-IF
*
  END-IF
*
  END OF TRANSACTION
*
END-FOR
*
* STACK TOP COMMAND 'READ-PO'
*
END-SUBROUTINE
******************
*  ARRY FOR N ELEMENT
******************
 DEFINE SUBROUTINE ARRY-FIRST
* дкъ бшдювх яохяйю, мювхмюъ я сйюгюммнцн йндю
   IF #KKB NE 0
    ASSIGN C-DATA1-B = H'00000007'
    CALL 'CMPXF' #KD C-DATA1-B H'00000005' N-DATA-B
    IF C-DATA1-B NE 0
       ASSIGN FIRST-EL(N-DATA) = C-DATA1-B
    END-IF
   END-IF
  RESET #KKB
 END-SUBROUTINE
*******************
END
