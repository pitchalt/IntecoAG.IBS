* >Natural Source Header 000000 /*<RO>>
* :NatName CPRDPL0S
* :UID T_UPA
* :Mode S
* :CP
* :Date 20100329
* :Time 1053330
* <Natural Source Header /*<<RO>
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING CBRDXM0A
PARAMETER USING CPRDPL0A
LOCAL USING CDRDIM0L
LOCAL USING CDRPIM0L
/*
LOCAL USING XPMXSM0L
LOCAL USING CPRDPL0L
/*
LOCAL USING CPRDIL0A
/*
LOCAL USING LCLZKL
/*
LOCAL
1 #LINE       (I4)
1 #PERIOD     (N6)
END-DEFINE
DEFINE SUBROUTINE CPRDPL0S
DEFINE WINDOW RDP-PARAM
  SIZE 10*20
  BASE 4/20
  TITLE 'Введите период'
  CONTROL SCREEN
IF CPRDPL0A.CMD EQ "EDIT" THEN
  PERFORM DATA-LOAD
END-IF
MX-FUNCTION-NAME := 'Редактирование правила перераспределени  затрат'
MX-EDITOR-NAME := 'Редактирование определени  остатка дл  перераспределени '
REPEAT
  SET KEY OFF
  SET KEY ON
  SET KEY ALL
  SET KEY PF3 NAMED 'Выход'
  SET KEY PF2 NAMED 'Новый'
  SET KEY PF4 NAMED 'Редак'
  SET KEY PF5 NAMED 'Сохр'
  INPUT USING MAP "CPRDPL0M"
  IF *PF-KEY EQ "PF3" THEN
     CPRDPL0A.CMD-EXIT := "EXIT"
     ESCAPE BOTTOM
  END-IF
  PERFORM SCREEN-CHECK
  IF *PF-KEY EQ "PF5" THEN
     IF CPRDPL0A.CMD EQ "NEW" THEN
        MOVE BY NAME CPRDPL0L TO CDRDIM0L
        MOVE CPRDPL0A.UP-RID TO CDRDIM0L.UP-RID
SRD.
        STORE CDRDIM0L
        CDRDIM0L.RID := *ISN(SRD.)
        CDRDIM0L.OID := CDRDIM0L.RID
        UPDATE (SRD.)
     ELSE IF CPRDPL0A.CMD EQ "EDIT" THEN
        FIND CDRDIM0L WITH RID EQ CDRDIM0L.RID
           MOVE BY NAME CPRDPL0L TO CDRDIM0L
           UPDATE
        END-FIND
     END-IF END-IF
     CPRDPL0A.CMD-EXIT := "SAVE"
     ESCAPE BOTTOM
  END-IF
  IF *PF-KEY EQ "PF4" THEN
     FOR #LINE = 1 TO CPRDPL0L-RP-C
        IF *CURS-FIELD EQ POS(CPRDPL0L.RP-CMD(#LINE)) AND CPRDPL0L.RP-RID(#LINE) NE 0 THEN
           MOVE CPRDPL0L.RP-RID(#LINE) TO CPRDIL0A.RID
           MOVE "EDIT" TO CPRDIL0A.CMD
           PERFORM CPRDIL0S XXERX00A CPRDIL0A
        END-IF
     END-FOR
  END-IF
  IF *PF-KEY EQ "PF2" AND CPRDPL0A.CMD NE "NEW" THEN
     SET KEY OFF
     SET KEY ON
     SET KEY ALL
     SET KEY PF3 NAMED 'Выход'
     SET KEY PF5 NAMED 'Сохр'
     REPEAT
        INPUT WINDOW = 'RDP-PARAM' 'Период' #PERIOD (AD=M'_' SG=OFF)
        IF *PF-KEY EQ "PF3" THEN
           ESCAPE BOTTOM
        END-IF
        IF #PERIOD < 201001 THEN
           REINPUT 'Период слишком мал' MARK *#PERIOD
        END-IF
        IF *PF-KEY EQ "PF5" THEN
           RESET CDRDIM0L
           MOVE #PERIOD TO CDRDIM0L.DT-FROM
           MOVE #PERIOD TO CDRDIM0L.DT-TO
           MOVE CPRDPL0A.RID TO CDRDIM0L.UP-RID
RDPS.
           STORE CDRDIM0L
           MOVE *ISN(RDPS.) TO CDRDIM0L.RID
           MOVE CDRDIM0L.RID TO CDRDIM0L.OID
           UPDATE(RDPS.)
           PERFORM DATA-LOAD
           ESCAPE BOTTOM
        END-IF
     END-REPEAT
  END-IF
END-REPEAT
/*
DEFINE SUBROUTINE SCREEN-CHECK
  IF CPRDPL0L.CODE EQ " " THEN
     REINPUT 'Поле об зательно дл  заполнени ' MARK *CPRDPL0L.CODE
  END-IF
  IF CPRDPL0L.DT-FROM < 201001 THEN
     REINPUT 'Слишком маленька  дата' MARK *CPRDPL0L.DT-FROM
  END-IF
  IF CPRDPL0L.DT-TO < CPRDPL0L.DT-FROM THEN
     REINPUT 'Слишком маленька  дата' MARK *CPRDPL0L.DT-TO
  END-IF
  IF CPRDPL0L.DOC-PR < 1 THEN
     REINPUT 'Поле об зательно дл  заполнени ' MARK *CPRDPL0L.DOC-PR
  END-IF
  IF CPRDPL0L.DOC-PCK < 1 THEN
     REINPUT 'Поле об зательно дл  заполнени ' MARK *CPRDPL0L.DOC-PCK
  END-IF
  IF CPRDPL0L.DOC-ND < 1 THEN
     REINPUT 'Поле об зательно дл  заполнени ' MARK *CPRDPL0L.DOC-ND
  END-IF
  IF CPRDPL0L.ZK-CODE EQ " " THEN
     REINPUT 'Поле об зательно дл  заполнени ' MARK *CPRDPL0L.ZK-CODE
  END-IF
FZ.
  FIND ZAKAZ WITH ZK-F EQ CPRDPL0L.ZK-CODE
     MOVE ZAKAZ.INT-NUM-ZK TO CPRDPL0L.ZK-OID
  END-FIND
  IF *NUMBER(FZ.) EQ 0 THEN
     REINPUT 'Заказ не найден' MARK *CPRDPL0L.ZK-CODE
  END-IF
  IF CPRDPL0L.AC-CODE EQ 0 THEN
     CPRDPL0L.AC-CODE := ZAKAZ.BS-F
  END-IF
  CPRDPL0L.AC-OID := CPRDPL0L.AC-CODE
  IF CPRDPL0L.PO-CODE EQ 0 THEN
     REINPUT 'Поле об зательно дл  заполнени ' MARK *CPRDPL0L.PO-CODE
  END-IF
  CPRDPL0L.PO-OID := CPRDPL0L.PO-CODE
  IF CPRDPL0L.SZ-CODE EQ 0 THEN
     REINPUT 'Поле об зательно дл  заполнени ' MARK *CPRDPL0L.SZ-CODE
  END-IF
  CPRDPL0L.SZ-OID := CPRDPL0L.SZ-CODE
END-SUBROUTINE
/*
DEFINE SUBROUTINE DATA-LOAD
/*  WRITE CPRDPL0A.RID
  RESET CPRDPL0L
  FIND CDRDIM0L WITH RID EQ CPRDPL0A.RID
     MOVE BY NAME CDRDIM0L TO CPRDPL0L
  END-FIND
  FIND ZAKAZ WITH INT-NUM-ZK EQ CPRDPL0L.ZK-OID
     MOVE ZAKAZ.ZK-F TO CPRDPL0L.ZK-CODE
     IF CPRDPL0L.ZK-CODE EQ " " THEN
        MOVE ZAKAZ.ZZ-F TO CPRDPL0L.ZK-CODE
     END-IF
  END-FIND
  MOVE CDRDIM0L.AC-OID TO CPRDPL0L.AC-CODE
  MOVE CDRDIM0L.PO-OID TO CPRDPL0L.PO-CODE
  MOVE CDRDIM0L.SZ-OID TO CPRDPL0L.SZ-CODE
  FIND CDRPIM0L WITH UP-RID EQ CPRDPL0A.RID SORTED BY RID DESCENDING
     ADD 1 TO CPRDPL0L-RP-C
/*     WRITE CPRDPL0L-RP-C (NL=5) CDRPIM0L.RID
     MOVE CDRPIM0L.RID TO CPRDPL0L.RP-RID(CPRDPL0L-RP-C)
     MOVE CDRPIM0L.CODE TO CPRDPL0L.RP-CODE(CPRDPL0L-RP-C)
     MOVE CDRPIM0L.DT-FROM TO CPRDPL0L.RP-DT-FROM(CPRDPL0L-RP-C)
     MOVE CDRPIM0L.DT-TO TO CPRDPL0L.RP-DT-TO(CPRDPL0L-RP-C)
  END-FIND
END-SUBROUTINE
END-SUBROUTINE
END
