* >Natural Source Header 000000 /*<RO>>
* :NatName SELMO
* :UID NIMI1
* :Mode S
* :CP
* :Date 20001108
* :Time 1606330
* <Natural Source Header /*<<RO>
*********************************************************************
*                                                                   *
* BEÄEHÈE KOÄÈÔÈKATOPA M/O ËÈÖ                                      *
*                                                                   *
*********************************************************************
DEFINE DATA
  PARAMETER
    1 OG_IDENT_G    (N005)
    1 #KD           (N005)
    1 TIPMO         (A001)
  LOCAL  USING LCLMOL         /* VIEW HA ÔAÉË IBS-SYS-FILE
  LOCAL  USING LCLAGLOB
  LOCAL  USING LCLFROL1          /* OÁÙÈE ÏEPEMEHHÛE
  LOCAL  USING LCLKREST
  LOCAL  USING LCLSTAKD
  LOCAL
    1 INPUT-REC     (A45/13)
    1 REDEFINE INPUT-REC
      2 #INPUT-REC  (13)
        3 FIELD-ISN (P007)
        3 #FIELD-01 (N005)     /* KOÄ
        3 #FIELD-02 (N005)
        3 #FIELD-03 (A030)     /* OÁOÇHA×EHÈE
        3 #FIELD-04 (A001)
    1 MRK           (A1/13)
    1 MRK-C         (C/13)  INIT ALL <(AD=PN)>
    1 STEK-REC      (A045)
    1 REDEFINE STEK-REC
      2 STEK-ISN    (P007)
      2 STEK-01     (N005)
      2 STEK-02     (N005)
      2 STEK-03     (A030)
      2 STEK-04     (A001)
    1 KEY1          (B010)     /*  ÏOÈCKOBÛÉ KËÞ× HA×AËÜHÛÉ
    1 REDEFINE KEY1
      2 KEYOG1      (N005)     /*  OPÃAHÈÇAÖÈß
      2 KEYKD1      (N005)     /*  KOÄ
    1 KEY2          (B010)     /*  ÏOÈCKOBÛÉ KËÞ× KOHE×HÛÉ
    1 REDEFINE KEY2
      2 KEYOG2      (N005)
      2 KEYKD2      (N005)
    1 #DATA         (N003)
    1 #NAME         (A030)
    1 III           (I004)
    1 I             (I004)
    1 START-STR     (N004)
    1 STR-STR       (N004)
    1 SCR           (A10/10)
    1 REDEFINE SCR
      2 FIL-01      (N5/10)
      2 FIL-02      (N5/10)
    1 TNA_I         (N005)
    1 TEXT1         (A037)
    1 SHOW_PROGRESS_BAR (L)  INIT <TRUE>
    1 KOLPR         (N002)
    1 CMD           (A128)
    1 REDEFINE CMD
      2 KOD_MAT_TMP (A022)
    1 NAME_OF_MODULE (A008)
END-DEFINE
*
DEFINE WINDOW WIN
  SIZE 21 * 55
  BASE 02 / 21
  TITLE 'ÑÏÈÑÎÊ ÌÀÒÅÐÈÀËÜÍÎ-ÎÒÂÅÒÑÒÂÅÍÍÛÕ'
  CONTROL SCREEN
  FRAMED ON
*
DEFINE WINDOW WIN1
  SIZE Q-DEL * L-DEL
  BASE C-DEL / N-DEL
  TITLE TEXT1
  CONTROL SCREEN
  FRAMED ON
*
INCLUDE CCINITPR
SET CONTROL 'E=ON'
SET KEY  PF2 PF3 PF7 PF8 PF9 PF10 PF11
*
MOVE 13   TO N-DATA N-DATA-B    /* HOMEP CTEKA C ÄAHHÛMÈ
MOVE 45  TO L-DATA L-DATA-B     /* ÄËÈHA ÝËEMEHTA B CTEKE C ÄAHHÛMÈ
MOVE 1000 TO Q-DATA Q-DATA-B    /* KOËÈ×ECTBO ÝËEMEHTOB B CTEKE C ÄAHHÛMÈ
*
ASSIGN Q-LINE = 13          /* CTPOK HA ÝKPAHE
ASSIGN T-KEY = 5            /* HA×AËÜHAß ÏOÇÈÖÈß KËÞ×EBOÃO ATPÈÁÓTA
ASSIGN L-KEY = 5            /* ÄËÈHA KËÞ×EBOÃO ATPÈÁÓTA
    ASSIGN KEYOG1 = OG_IDENT_G
    ASSIGN KEYOG2 = OG_IDENT_G
    IF #KD = 0
      ASSIGN KEYKD1 = 1  ASSIGN KEYKD2 = 99999
      ELSE  ASSIGN KEYKD1 = #KD  ASSIGN KEYKD2 = #KD
    END-IF
    INCLUDE CCUFRO1
    IF C-DATA EQ 0 AND #KD NE 0 THEN
      Q-DEL := 5   L-DEL := 31   C-DEL := 07   N-DEL := 42
      SET WINDOW 'WIN1'
      INPUT  ' ÌÀÒÅÐÈÀËÜÍÎ-ÎÒÂÅÒÑÒÂÅÍÍÛÉ C' /
      ' ÊÎÄÎÌ' #KD (AD=O)  'HE HAÉÄEH'
      SET WINDOW OFF ESCAPE ROUTINE
    END-IF
    REPEAT
      SET WINDOW 'WIN'
      RESET INPUT-REC(*) #FIELD-01(*) #FIELD-02(*)
      PERFORM ARRY-PROC
      INPUT MARK III  USING MAP 'MAPMOM2'
      III := *CURS-FIELD
      FOR C-CURS 1 Q-LINE
        IF III EQ POS(MRK(C-CURS))  ESCAPE BOTTOM END-IF
      END-FOR
      DECIDE FOR EVERY CONDITION
        WHEN *PF-KEY = 'PF3'
          CALL 'FRSX' N-DATA-B
          RESET MAX-EL(N-DATA) COU-EL(N-DATA)
          IF #DATA > 0  ESCAPE ROUTINE  ELSE  #DATA := -1 END-IF
          SET WINDOW OFF ESCAPE BOTTOM
        WHEN *PF-KEY = 'PF2' AND C-CURS = 1 THRU Q-LINE
          IF #FIELD-04(C-CURS) NE 'L' THEN
            REINPUT 'ÝTA OÏEPAÖÈß ÈMEET CMÛCË TOËÜKO ÄËß ËÞÄEÉ'
           (AD=I CD=RE) MARK *#FIELD-01(C-CURS) ALARM
          END-IF
          ASD. GET SKL-SCH FIELD-ISN(C-CURS)
          TNA_I := SKL-SCH.C*LIST
          START-STR := 1
          STR-STR := START-STR
          COMPRESS 'ÑÏÈÑÎÊ Ñ×ÅÒÎÂ Ì/Î:' #FIELD-03(C-CURS) TO TEXT1
          REPEAT
            Q-DEL := 18   L-DEL := 37  C-DEL := 07   N-DEL := 32
            SET WINDOW 'WIN1'
            RESET SCR.FIL-01(*) SCR.FIL-02(*)
            START-STR := STR-STR
            FOR I 1 TO 10
              IF START-STR > TNA_I ESCAPE BOTTOM END-IF
              SCR.FIL-01(I) := SKL-SCH.SKLAD(START-STR)
              SCR.FIL-02(I) := SKL-SCH.SMO(START-STR)
              ADD 1 TO START-STR
            END-FOR
            INPUT USING MAP 'MAPMOM3'
            DECIDE ON EVERY *PF-KEY
              VALUE 'PF3' SET WINDOW OFF ESCAPE BOTTOM
              VALUE 'PF7'
                STR-STR := STR-STR - 10
                IF STR-STR < 1   STR-STR := 1   END-IF
              VALUE 'PF8'
                IF START-STR <= TNA_I  ADD 10 TO STR-STR  END-IF
              NONE VALUE IGNORE
            END-DECIDE
          END-REPEAT
        WHEN *PF-KEY = 'PF7'
          RESET III
          COMPUTE FIRST-EL(N-DATA) = FIRST-EL(N-DATA) - Q-LINE
          IF FIRST-EL(N-DATA) <= 0   FIRST-EL(N-DATA) := 1  END-IF
        WHEN *PF-KEY = 'PF8'
          RESET III
          COMPUTE C-DATA1 = FIRST-EL(N-DATA) + Q-LINE - 1
          IF C-DATA1 <= MAX-EL(N-DATA) THEN
            COMPUTE FIRST-EL(N-DATA) = C-DATA1 + 1
          END-IF
        WHEN *PF-KEY = 'PF9'
          RESET III
          ASSIGN FIRST-EL(N-DATA) = 1
        WHEN *PF-KEY = 'PF10'
          RESET III
          ASSIGN FIRST-EL(N-DATA) = MAX-EL(N-DATA)
        WHEN *PF-KEY = 'PF11' OR = 'ENTR'
          #KD := #FIELD-01(C-CURS)
          SET WINDOW OFF  ESCAPE ROUTINE
        WHEN NONE IGNORE
      END-DECIDE
    END-REPEAT
*
DEFINE SUBROUTINE ARRY-PROC      /* ÏEPECÛËKA ÄAHHÛX B MACCÈB ÝKPAHA
  RESET INITIAL MRK-C(*)   RESET FIELD-ISN(*)
  ASSIGN C-DATA = FIRST-EL(N-DATA)
  FOR C-LINE = 1 TO Q-LINE
    IF C-DATA > MAX-EL(N-DATA) THEN ESCAPE BOTTOM END-IF
    ASSIGN C-DATA-B = C-DATA
    CALL 'RWSX' C-DATA-B INPUT-REC(C-LINE) RD-REC N-DATA-B
    MOVE (AD=I) TO MRK-C(C-LINE)
    ADD 1 TO C-DATA
  END-FOR
END-SUBROUTINE
*
DEFINE SUBROUTINE LOAD-PROC   /* ×TEHÈE ÈÇ IBS-SYS-FILE B CTEK C ÄAHHÛMÈ
  ASSIGN C-DATA = 0
  FIND IBS-KMO-FILE OG-MO = KEY1 THRU KEY2
    IF TIPMO NE ' '  ACCEPT IF FM-SKL = TIPMO  END-IF
    IF #NAME NE ' ' AND NO-ID NE SCAN #NAME ESCAPE TOP END-IF
    COMPUTE C-DATA = C-DATA + 1
    IF C-DATA > Q-DATA THEN ESCAPE BOTTOM END-IF
    INCLUDE CCPROCF
    ASSIGN STEK-ISN = *ISN
    ASSIGN STEK-01 = MO-ID
    ASSIGN STEK-02 = PM-ID
    ASSIGN STEK-03 = NO-ID
    ASSIGN STEK-04 = FM-SKL
    ASSIGN C-DATA-B = C-DATA
    CALL 'RWSX' C-DATA-B STEK-REC WR-REC N-DATA-B
  END-FIND
  ASSIGN MAX-EL(N-DATA)   = C-DATA
  ASSIGN FIRST-EL(N-DATA) = 1
END-SUBROUTINE
INCLUDE CCERIN1
END
