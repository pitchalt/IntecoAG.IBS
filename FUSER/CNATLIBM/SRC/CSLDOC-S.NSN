* >Natural Source Header 000000 /*<RO>>
* :NatName CSLDOC-S
* :UID INTECO
* :Mode S
* :CP
* :Date 20090910
* :Time 1107330
* <Natural Source Header /*<<RO>
DEFINE DATA
PARAMETER USING CSLDOC-P
PARAMETER
1 OG-USER(N5)
1 N-DOC-B(B4)
1 M-DOC(P7)
LOCAL USING LCLADSDG
LOCAL USING CSLDOCL
LOCAL USING CSLDOCP1
LOCAL USING LCLVOL
LOCAL
1 IBS-REC-FILE VIEW OF IBS-REC-FILE
  2 KD-F
1 ADS-ZATRAT VIEW OF ADS-ZATRAT
  2 OG-ID
  2 NN-ID
  2 NN-DP
1 ADS-TXT-FILE VIEW OF ADS-TXT-FILE
  2 OG-ID
  2 NN-ID
  2 NN-DP
1 TX-PF4(A9)   INIT <'Св з.дог.'>
1 TX-PF5(A8)   INIT <'Добавить'>
1 TX-PF6(A8)   INIT <'Удалить'>
1 TX-PF12(A5)
1 DOG-TYP(A3/1:2)  INIT <'ДОГ','ДОП'>
1 CCC(I4)
1 MSG(A50)
1 F-DOC(P7)
1 C-DOC(P7)
1 M-ETP(P7)
1 I(P7)
1 J(P7)
1 NN1(P7)
1 NN2(P7)
1 Q-LINE(P2)  CONST <5>
1 INP-I(P5/1:Q-LINE)
1 INP-I-NM(A60/1:Q-LINE)
1 INP-NAME(A60/1:Q-LINE)
1 INP-TY(A3/1:Q-LINE)
1 INP-Z(P5/1:Q-LINE)
1 INP-Z-NM(A60/1:Q-LINE)
1 OSN(A60/1:Q-LINE)
1 INP-C(C/1:Q-LINE)  INIT ALL <(AD=PN)>
1 REG-NM-G(A40)  INIT <'<Выбор документа>'>
1 SYS-NM-G(A60)  INIT <'<Интегрированна  бухгалтерска  система>'>
1 TX-I(A1/1:Q-LINE)
1 TX-Z(A1/1:Q-LINE)
1 Q-L(P2)  CONST <16>
1 Q-C(P2)  CONST <3>
1 C-LINE(P2)
1 C-CURS(P2)
1 KEY1(A10)
1 REDEFINE KEY1
  2 KEYOG(N5)
  2 KEYKD(N5)
1 KEYDG(A9)
1 REDEFINE KEYDG
  2 KEYDGOG(N5)
  2 KEYDGKD(I4)
1 WNNID(I4)
1 WNNDP(I4)
1 SNNID(I4)
1 SNNDP(I4)
1 TTT(A40)
1 WNM(A40)
1 REDEFINE WNM
  2 NM-VO(A30)
1 DOC-DD(D)
1 DOP-DD(D)
1 FLG(N1)
1 FLG-E(N1)
1 RKD(N1)
END-DEFINE
DEFINE WINDOW WIN1
SIZE 13 * 60
BASE 5 / 14
TITLE TTT
CONTROL SCREEN
*
CALLNAT 'CENTER40' REG-NM-G
CALLNAT 'CENTER60' SYS-NM-G
MOVE OG-USER TO KEYOG KEYDGOG
SET KEY PF2 PF3 PF7 PF8 PF11
IF FUN = 'WR' THEN
   SET KEY PF4 PF5 PF6
ELSE
   RESET TX-PF4 TX-PF5 TX-PF6
   SET KEY PF4 = OFF PF5 = OFF PF6 = OFF
END-IF
*
IF *PF-KEY = 'PF12' AND M-DOC = 1 AND DOC-NM(3) NE ' ' THEN
   FLG-E := 1 SET CONTROL 'N'
END-IF
REPEAT
RESET INITIAL REG-NM-G
CALLNAT 'CENTER40' REG-NM-G
RESET INITIAL INP-C(*)
RESET INP-I(*) INP-I-NM(*) INP-NAME(*) INP-TY(*) INP-Z(*)
      INP-Z-NM(*) OSN(*) TX-I(*) TX-Z(*)
FOR C-LINE 1 Q-LINE
C-DATA := F-DOC + C-LINE C-DATA-B := C-DATA
IF C-DATA > M-DOC THEN ESCAPE BOTTOM END-IF
CALL 'RWSX' C-DATA-B SDOC RD-REC N-DOC-B
INP-C(C-LINE) := (AD=D)
G. GET ADS-DOG-FILE DDISN
KEYKD := INP-Z(C-LINE) := VO-Z(G.) PERFORM PROC-ORG
INP-Z-NM(C-LINE) := IBS-KVO-FILE.NM-OG
KEYKD := INP-I(C-LINE) := VO-I(G.) PERFORM PROC-ORG
INP-I-NM(C-LINE) := IBS-KVO-FILE.NM-OG
TX-I(C-LINE) := 'И' TX-Z(C-LINE) := 'З'
IF DNNDP = 0 THEN
   MOVE EDITED GM-F(G.) (EM=DD.MM.YYYY) TO INP-NAME(C-LINE)
   COMPRESS '>от' INP-NAME(C-LINE) INTO INP-NAME(C-LINE)
   COMPRESS '<' ND-F(G.) INP-NAME(C-LINE) INTO INP-NAME(C-LINE)
      LEAVING NO
   INP-TY(C-LINE) := TY-ID(G.)
   IF NN-OD(G.) NE 0 THEN
   O. FIND ADS-DOG-FILE NN-ID = NN-OD(G.) AND NN-DP = NN-DO(G.)
           AND UR-ID = 0 AND OG-ID = OG-USER
      MOVE EDITED GM-F(G.) (EM=DD.MM.YYYY) TO OSN(C-LINE)
      COMPRESS '>от' OSN(C-LINE) INTO OSN(C-LINE)
      COMPRESS '<' ND-F(G.) OSN(C-LINE) INTO OSN(C-LINE)
         LEAVING NO
      IF NN-DP(O.) = 0 THEN
         COMPRESS 'осн.дог.' OSN(C-LINE) 'орг.' INTO OSN(C-LINE)
      ELSE
         COMPRESS 'осн.доп.' OSN(C-LINE) 'орг.' INTO OSN(C-LINE)
      END-IF
      COMPRESS OSN(C-LINE) VO-Z(O.) INTO OSN(C-LINE) LEAVING NO
      KEYKD := VO-Z(O.) PERFORM PROC-ORG
      COMPRESS OSN(C-LINE) IBS-KVO-FILE.NM-OG INTO OSN(C-LINE)
      END-FIND
   END-IF
ELSE
   MOVE EDITED GM-F(G.) (EM=DD.MM.YYYY) TO OSN(C-LINE)
   COMPRESS '>от' OSN(C-LINE) INTO OSN(C-LINE)
   COMPRESS 'к дог.<' ND-F(G.) OSN(C-LINE) INTO OSN(C-LINE)
      LEAVING NO
   G1. GET ADS-DOG-FILE DPISN
   INP-TY(C-LINE) := 'ДОП'
   MOVE EDITED GM-F(G1.) (EM=DD.MM.YYYY) TO INP-NAME(C-LINE)
   COMPRESS '>от' INP-NAME(C-LINE) INTO INP-NAME(C-LINE)
   COMPRESS '<' ND-F(G1.) INP-NAME(C-LINE) INTO INP-NAME(C-LINE)
      LEAVING NO
END-IF
END-FOR
C-LINE := C-LINE - 1
*
IF MSG = ' ' THEN
INPUT MARK CCC USING MAP 'CSLDOCM2'
ELSE
INPUT WITH TEXT MSG MARK CCC ALARM USING MAP 'CSLDOCM2'
END-IF
CCC := *CURS-FIELD RESET MSG
FOR C-CURS 1 C-LINE
IF CCC = POS(INP-TY(C-CURS)) THEN ESCAPE BOTTOM END-IF
END-FOR
IF FLG-E = 1 THEN
   SET CONTROL 'K12' C-CURS := 1 RESET FLG-E
END-IF
*
DECIDE FOR EVERY CONDITION
WHEN *PF-KEY = 'PF3' OR = 'PF2'
   ESCAPE BOTTOM
WHEN *PF-KEY = 'PF7'
   IF F-DOC > Q-LINE THEN F-DOC := F-DOC - Q-LINE
      ELSE RESET F-DOC END-IF
WHEN *PF-KEY = 'PF8' AND C-DATA < M-DOC
   ADD Q-LINE TO F-DOC
WHEN *PF-KEY = 'PF4' AND FUN = 'WR' AND
     C-CURS = 1 THRU C-LINE AND INP-TY(C-CURS) = DOG-TYP(*)
   PERFORM PROC-OSN-DOG
WHEN *PF-KEY = 'PF5' AND FUN = 'WR'
   RESET CSLDOC-D1
   CALLNAT 'CSLDOC-U' CSLDOC-D CSLDOC-D1 OG-USER
   IF *PF-KEY = 'PF5' THEN
      PERFORM PROC-ADD
   END-IF
   SET CONTROL 'K0'
WHEN *PF-KEY = 'PF6' AND FUN = 'WR' AND C-CURS = 1 THRU C-LINE
   PERFORM PROC-DEL
WHEN *PF-KEY = 'PF11' AND C-CURS = 1 THRU C-LINE
   C-DOC := F-DOC + C-CURS
   PERFORM PROC-ASS-DOG
   ESCAPE BOTTOM
WHEN *PF-KEY = 'PF12' AND C-CURS = 1 THRU C-LINE
   AND INP-TY(C-CURS) = DOG-TYP(*)
   C-DOC := F-DOC + C-CURS
   CALLNAT 'CSLDOC-E' CSLDOC-D OG-USER N-DOC-B C-DOC M-ETP RKD
   IF RKD = 9 THEN
      MSG := 'Требуетс  вмешательство программиста'
      SET CONTROL 'K0' CCC := 1 ESCAPE TOP
   END-IF
   CCC := POS(INP-TY(C-CURS))
   IF M-ETP = 0 THEN
      MSG := 'Нет этапов'
   ELSE
      IF *PF-KEY = 'PF11' THEN
         PERFORM PROC-ASS-DOG
         ESCAPE BOTTOM
      END-IF
   END-IF
   RESET RKD
WHEN NONE IGNORE
END-DECIDE
END-REPEAT
*
DEFINE SUBROUTINE PROC-OSN-DOG
RESET INP-NM INP-DT INP-OGZ INP-OGI INP-DOP INP-DOP-DT WNNID WNNDP I
C-DOC := F-DOC + C-CURS C-DATA-B := C-DOC
CALL 'RWSX' C-DATA-B SDOC RD-REC N-DOC-B
IF DPISN NE 0
S. GET ADS-DOG-FILE DPISN
ELSE
S1. GET ADS-DOG-FILE DDISN
END-IF
IF ADS-DOG-FILE.NS-F NE NUM-USER THEN
   MSG := 'Неавторизованный доступ' CCC := POS(INP-TY(C-CURS))
   ESCAPE TOP END-IF
WNNID := ADS-DOG-FILE.NN-OD WNNDP := ADS-DOG-FILE.NN-DO
IF WNNDP NE 0 THEN
S2. FIND ADS-DOG-FILE NN-ID = WNNID AND NN-DP = WNNDP AND
         UR-ID = 0 AND OG-ID = OG-USER
    INP-DOP := ND-F(S2.)
    MOVE EDITED GM-F(S2.) (EM=YYYYMMDD) TO INP-DOP-DTA
    END-FIND
END-IF
S3. FIND ADS-DOG-FILE NN-ID = WNNID AND NN-DP = 0 AND
         UR-ID = 0 AND OG-ID = OG-USER
    INP-NM := ND-F(S3.) MOVE EDITED GM-F(S3.) (EM=YYYYMMDD) TO INP-DTA
    INP-OGI := VO-I(S3.) INP-OGZ := VO-Z(S3.)
    END-FIND
TTT := 'СВЯЗАННЫЕ ДОГОВОРА' TX-PF5 := 'Запись'
REPEAT
IF INP-DOP = ' ' AND INP-DOP-DT = 0 THEN INP-TYP := DOG-TYP(1)
   ELSE INP-TYP := DOG-TYP(2) END-IF
SET WINDOW 'WIN1'
IF MSG = ' ' THEN
INPUT MARK CCC USING MAP 'CSLDOCM1'
ELSE
INPUT WITH TEXT MSG MARK CCC ALARM USING MAP 'CSLDOCM1'
END-IF
SET WINDOW OFF
CCC := *CURS-FIELD RESET MSG
DECIDE ON EVERY VALUES *PF-KEY
VALUES 'PF3'
   ESCAPE BOTTOM
VALUES 'PF11'
  IF CCC = POS(INP-OGI) THEN
     CALLNAT 'SELVON' OG-USER INP-OGI NM-VO END-IF
  IF CCC = POS(INP-OGZ) THEN
     CALLNAT 'SELVON' OG-USER INP-OGZ NM-VO END-IF
  ESCAPE TOP
NONE VALUES
  IF INP-NM = ' ' THEN
     MSG := 'Номер договора ?' CCC := POS(INP-NM)
     ESCAPE TOP END-IF
  IF INP-DT NE 0 THEN
     IF INP-DT = MASK(0) OR INP-DT NE MASK(YYYYMMDD) OR
        INP-DT < 19000000 THEN
        MSG := 'Дата ?' CCC := POS(INP-DT) ESCAPE TOP END-IF
     MOVE EDITED INP-DTA TO DOC-DD (EM=YYYYMMDD)
  ELSE
     RESET DOC-DD
  END-IF
  IF INP-OGZ NE 0 THEN
     KEYKD := INP-OGZ PERFORM PROC-ORG
  END-IF
  IF INP-OGZ = 0 OR FLG = 0 THEN
     MSG := 'Организаци  заказчик ?' CCC := POS(INP-OGZ)
     ESCAPE TOP END-IF
  IF INP-OGI NE 0 THEN
     KEYKD := INP-OGI PERFORM PROC-ORG
  END-IF
  IF INP-OGI = 0 OR FLG = 0 THEN
     MSG := 'Организаци  исполнитель ?' CCC := POS(INP-OGI)
     ESCAPE TOP END-IF
  RESET FLG SNNID SNNDP
S4. FIND ADS-DOG-FILE GM-F = DOC-DD AND VO-Z = INP-OGZ AND
         VO-I = INP-OGI AND ND-F = INP-NM AND UR-ID = 0 AND NN-DP = 0
    IF OG-ID(S4.) NE OG-USER THEN ESCAPE TOP END-IF
    IF TY-ID(S4.) NE DOG-TYP(1) THEN ESCAPE TOP END-IF
    FLG := 1 SNNID := NN-ID(S4.)
    IF NN-OD(S4.) NE 0 THEN FLG := 2 END-IF
    END-FIND
  IF FLG = 0 THEN
     MSG := 'Нет указанного договора' CCC := POS(INP-NM)
     ESCAPE TOP END-IF
  IF FLG = 2 THEN
     MSG := 'Указанный договор сам  вл етс  св занным'
     CCC := POS(INP-NM) ESCAPE TOP END-IF
  IF INP-DOP NE ' ' OR INP-DOP-DT NE 0 THEN
     IF INP-DOP = ' ' THEN
        MSG := 'Доп.соглашение ?' CCC := POS(INP-DOP)
        ESCAPE TOP END-IF
     IF INP-DOP-DT NE 0 THEN
        IF INP-DOP-DT = MASK(0) OR INP-DOP-DT NE MASK(YYYYMMDD) OR
           INP-DOP-DT < 19000000 THEN
           MSG := 'Дата доп.соглашени  ?' CCC := POS(INP-DOP-DT)
           ESCAPE TOP END-IF
        MOVE EDITED INP-DOP-DTA TO DOP-DD (EM=YYYYMMDD)
     ELSE
        RESET DOP-DD
     END-IF
     RESET FLG
 S5. FIND ADS-DOG-FILE NN-ID = SNNID AND GM-F = DOP-DD AND
          ND-F = INP-DOP AND UR-ID = 0 AND NN-DP NE 0
     IF OG-ID(S5.) NE OG-USER THEN ESCAPE TOP END-IF
     IF TY-ID(S5.) NE DOG-TYP(1) THEN ESCAPE TOP END-IF
     FLG := 1 SNNDP := NN-ID(S5.)
     END-FIND
     IF FLG = 0 THEN
        MSG := 'Нет указанного доп.соглашени ' CCC := POS(INP-DOP)
        ESCAPE TOP END-IF
  END-IF
  IF WNNID NE 0 AND SNNID NE WNNID OR
     WNNDP NE 0 AND SNNDP NE SNNDP THEN
     ADD 1 TO I
     IF I < 3 THEN
        MSG := 'Подтвердите клавишей "ВВОД" изменение св зей.'
        CCC := 1 ESCAPE TOP END-IF
  ELSE
     RESET I
  END-IF
  IF *PF-KEY = 'PF5' THEN
     C-DATA-B := C-DOC
     CALL 'RWSX' C-DATA-B SDOC RD-REC N-DOC-B
     IF DPISN NE 0
     S6. GET ADS-DOG-FILE DPISN
     ELSE
     S7. GET ADS-DOG-FILE DDISN
     END-IF
     ADS-DOG-FILE.NN-OD := SNNID ADS-DOG-FILE.NN-DO := SNNDP
     ESCAPE BOTTOM
  END-IF
END-DECIDE
END-REPEAT
RESET INITIAL TX-PF5
SET CONTROL 'K0'
END-SUBROUTINE
*
DEFINE SUBROUTINE PROC-ADD
DNNID := INP-NNID DNNDP := INP-NNDP RESET DDISN DPISN
A. FIND ADS-DOG-FILE NN-ID = INP-NNID AND UR-ID = 0
        AND OG-ID = OG-USER
   DDISN := *ISN(A.)
   END-FIND
IF DNNDP NE 0 THEN
A1. FIND ADS-DOG-FILE NN-ID = INP-NNID AND NN-DP = DNNDP
         AND UR-ID = 0 AND OG-ID = OG-USER
    DPISN := *ISN(A1.)
    END-FIND
END-IF
ADD 1 TO M-DOC C-DATA-B := M-DOC
CALL 'RWSX' C-DATA-B SDOC WR-REC N-DOC-B
END-SUBROUTINE
*
DEFINE SUBROUTINE PROC-DEL
C-DOC := F-DOC + C-CURS C-DATA-B := C-DOC
CALL 'RWSX' C-DATA-B SDOC RD-REC N-DOC-B
D. GET ADS-DOG-FILE DDISN
IF NS-F(D.) NE NUM-USER THEN
   MSG := 'Неавторизованный доступ' CCC := POS(INP-TY(C-CURS))
   ESCAPE TOP END-IF
KEYDGKD := IND-D(D.)
D1. FIND NUMBER ADS-DOG-FILE NN-OD = DNNID AND NN-DO = DNNDP
         AND OG-ID = OG-USER
    IF *NUMBER(D1.) NE 0 THEN
       MSG := 'Удал ть нельз . Есть св занные договора'
       CCC := POS(INP-TY(C-CURS)) ESCAPE TOP END-IF
IF DNNDP = 0 THEN
D2. FIND NUMBER ADS-DOG-FILE NN-ID = DNNID AND NN-DP NE 0
         AND OG-ID = OG-USER
    IF *NUMBER(D2.) NE 0 THEN
       MSG := 'Удал ть нельз . Есть доп.соглашени '
       CCC := POS(INP-TY(C-CURS)) ESCAPE TOP END-IF
ELSE
D7. GET ADS-DOG-FILE DPISN
    KEYDGKD := IND-D(D7.)
END-IF
D3. FIND NUMBER ADS-ZATRAT NN-ID = DNNID AND NN-DP = DNNDP
         AND OG-ID = OG-USER
    IF *NUMBER(D1.) NE 0 THEN
       MSG := 'Удал ть нельз . Есть плановые затраты'
       CCC := POS(INP-TY(C-CURS)) ESCAPE TOP END-IF
R. FIND NUMBER IBS-REC-FILE OG-DG-OS = KEYDG
   IF *NUMBER(R.) = 0 THEN
   R1. FIND NUMBER IBS-REC-FILE OG-DG-KS = KEYDG
   END-IF
   IF *NUMBER(R.) NE 0 OR *NUMBER(R1.) NE 0 THEN
      MSG := 'Удал ть нельз . Есть проводки'
      CCC := POS(INP-NAME(C-CURS)) ESCAPE TOP END-IF
IF DPISN NE 0 THEN
P. GET ADS-DOG-FILE DPISN
ELSE
P1. GET ADS-DOG-FILE DDISN
END-IF
TTT := 'УДАЛЕНИЕ ДОКУМЕНТА' RESET WNM
SET WINDOW 'WIN1'
SET KEY PF6 (PB=006/021/002/008) NAMED 'Удалить'
INPUT (AD=M IP=OFF SG=OFF ZP=OFF)
 'Подтвердите удаление' / INP-NAME(C-CURS) (AD=O) /
 'повторным вводом номера' / WNM /
 'и нажмите клавишу "Удалить"'
SET WINDOW OFF
IF *PF-KEY = 'PF6' AND WNM = ADS-DOG-FILE.ND-F THEN
D4. FIND ADS-DOG-FILE NN-ID = DNNID AND NN-DP = DNNDP
         AND OG-ID = OG-USER
    DELETE (D4.)
    END-FIND
    IF TY-ID(D.) = DOG-TYP(*) THEN
    D5. FIND ADS-TXT-FILE NN-ID = DNNID AND NN-DP = DNNDP
             AND OG-ID = OG-USER
        DELETE (D5.)
        END-FIND
    D6. FIND ADS-ZATRAT NN-ID = DNNID AND NN-DP = DNNDP
             AND OG-ID = OG-USER
        DELETE (D6.)
        END-FIND
    END-IF
    END OF TRANSACTION
    CALL 'RWSX' C-DATA-B H'FF' WR-REC N-DOC-B
    CALL 'PRSX' WR-REC WR-REC N-DOC-B
    M-DOC := M-DOC - 1
END-IF
SET CONTROL 'K0'
IF M-DOC = 0 THEN ESCAPE BOTTOM END-IF
END-SUBROUTINE
*
DEFINE SUBROUTINE PROC-ASS-DOG
C-DATA-B := C-DOC
CALL 'RWSX' C-DATA-B SDOC RD-REC N-DOC-B
Q. GET ADS-DOG-FILE DDISN
   DOC-OGZ := VO-Z(Q.) DOC-OGI := VO-I(Q.)
   MOVE EDITED GM-F(Q.) (EM=YYYYMMDD) TO DOC-DTA(1)
   DOC-NM(1) := ND-F(Q.) DOC-TYP := TY-ID(Q.)
   IF DNNDP = 0 THEN
      IF RKD = 0 THEN
         DOC-IND := IND-D(Q.) DOC-NN(*) := IN-F(Q./*)
      END-IF
   ELSE
   Q1. GET ADS-DOG-FILE DPISN
       DOC-NM(2) := ND-F(Q1.)
       MOVE EDITED GM-F(Q1.) (EM=YYYYMMDD) TO DOC-DTA(2)
       IF RKD = 0 THEN
          DOC-IND := IND-D(Q1.) DOC-NN(*) := IN-F(Q1./*)
       END-IF
   END-IF
END-SUBROUTINE
*
DEFINE SUBROUTINE PROC-ORG
RESET IBS-KVO-FILE FLG
IF KEYKD = 0 THEN ESCAPE ROUTINE END-IF
FIND IBS-KVO-FILE OG-VO = KEY1
FLG := 1
END-FIND
END-SUBROUTINE
*
CALL 'FRSX' N-DOC-B
END
