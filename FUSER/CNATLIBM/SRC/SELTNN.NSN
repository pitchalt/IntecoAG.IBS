* >Natural Source Header 000000 /*<RO>>
* :NatName SELTNN
* :UID T_MSA
* :Mode S
* :CP
* :Date 20100204
* :Time 1045330
* <Natural Source Header /*<<RO>
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* опнцпюллю-яопюбйю он тюлхкхъл
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE DATA
  PARAMETER
  1 #TN(N5)  1 #FA(A50)
  LOCAL  USING LCLASRZ    /* VIEW мю тюик ASRZ-LS-FILE
  LOCAL  USING ASRZ-SYS    /* VIEW мю тюик ASRZ-SYS-FILE
  LOCAL  USING UFROL1      /* наыхе оепелеммше
  LOCAL
*
* ярпсйрспю щйпюмю  я дюммшлх
*
    1 INPUT-REC(A79/1:15)
    1 REDEFINE INPUT-REC
      2 #REC(15)
        3 #FIELD-TN(N5)
        3 #FIELD-PO(N5)
        3 #FIELD-FI(A31)
        3 #FIELD-DO(A16)
        3 #FIELD-PR(N8)
        3 #FIELD-UV(N8)
        3 #FIELD-DR(N6)
* ярпсйрспю щкелемрю ярейю я дюммшлх
*
    1  STEK-REC(A79)
    1 REDEFINE  STEK-REC
        2 STEK-TN(N5)
        2 STEK-PO(N5)
        2 STEK-FI(A31)
        2 STEK-DO(A16)
        2 STEK-PR(N8)
        2 STEK-UV(N8)
        2 STEK-DR(N6)
    1 FF(A20)
    1 FA(A20)
    1 REDEFINE FA
      2 FA-M(A1/1:20)
    1 #ITOG(N5)
    1 TN1(N5) INIT<1>
    1 TN2(N5) INIT<99999>
    1 FAM(A20)
    1 REDEFINE FAM
      2 FAM-M(A1/1:20)
    1 I(N2)
    1 DL(N2)
    1 FUN-NM-G(A60)  1 SYS-NM-G(A60)  1 REG-NM-G(A40)
    1 MAX-EL(P7/200)
    1 FIRST-EL(P7/200)
    1 #SLC(A1/15)  1 FLG11(N1)  1 #I(N7) 1 ITN(N5)
    1 RD-REC(B4)  1 WR-REC(B4) CONST < 1 >
*
END-DEFINE
*
SET KEY ALL
*
CALL 'GTNX' N-DATA-B
N-DATA := N-DATA-B     /* мнлеп ярейю я дюммшлх
MOVE 79  TO L-DATA L-DATA-B     /* дкхмю щкелемрю б ярейе я дюммшлх
MOVE 500 TO Q-DATA Q-DATA-B     /* йнкхв.щкелемрнб б ярейе я дюммшлх
*
ASSIGN Q-FIELD = 7          /* онкеи б ярпнйе(хглемъелшу)
ASSIGN Q-LINE = 15          /* ярпнй мю щйпюме
ASSIGN F-LINE = 6           /* ялеыемхе оепбни ярпнйх
ASSIGN C-CURS = 1           /* ярпнйю я йспянпнл
ASSIGN T-KEY = 1            /* мювюкэмюъ онгхжхъ йкчвебнцн юрпхасрю
ASSIGN L-KEY = 5            /* дкхмю йкчвебнцн юрпхасрю
SYS-NM-G := 'хая'  CALLNAT 'CENTER60' SYS-NM-G
FUN-NM-G := 'яОПЮБНВМЮ  ЯХЯРЕЛЮ'  CALLNAT 'CENTER60' FUN-NM-G
REG-NM-G := 'яОПЮБЙЮ ОН ТЮЛХКХХ'  CALLNAT 'CENTER40' REG-NM-G
*
INPUT USING MAP 'SPFAMM5'
IF *PF-KEY = 'PF3' STOP END-IF
MOVE ALL H'FF' TO FF
COMPRESS FA FF TO FF LEAVING NO
PERFORM DLINA
CALL 'GTSX' L-DATA-B Q-DATA-B N-DATA-B /* ярей C дюмшлх
CALL 'NULX' ' '  N-DATA-B
*
PERFORM LOAD-PROC
IF MAX-EL(N-DATA) = 0
  REINPUT 'дюммшу мер' ALARM
END-IF
ASSIGN C-DATA1-B = T-KEY
ASSIGN C-DATA2-B = L-KEY
CALL 'SRTX' C-DATA1-B C-DATA2-B N-DATA-B
*
REPEAT
*
  RESET #FIELD-TN(*) #FIELD-PO(*) #FIELD-FI(*) #FIELD-DO(*)
        #FIELD-PR(*) #FIELD-UV(*) #FIELD-DR(*)
*
  PERFORM ARRY-PROC
*
  INPUT  USING MAP 'SPFAMM4'
*
  DECIDE FOR EVERY CONDITION
    WHEN *PF-KEY = 'PF3'
      CALL 'FRSX' N-DATA-B
      RESET MAX-EL(N-DATA)
      ESCAPE BOTTOM
    WHEN *PF-KEY = 'PF11' OR = 'ENTR' RESET FLG11
      FOR #I 1 15
        IF *CURS-FIELD = POS(#SLC(#I)) AND #FIELD-TN(#I) NE 0
          #TN := #FIELD-TN(#I)  #FA := #FIELD-FI(#I)  FLG11 := 1
          ESCAPE BOTTOM
        END-IF
      END-FOR
      IF FLG11 = 1
        CALL 'FRSX' N-DATA-B
        RESET MAX-EL(N-DATA)
        ESCAPE BOTTOM
      END-IF
    WHEN *PF-KEY = 'PF7'
      MOVE 1 TO P-CURS C-CURS
      COMPUTE FIRST-EL(N-DATA) = FIRST-EL(N-DATA) - Q-LINE
      IF FIRST-EL(N-DATA) <= 0 THEN ASSIGN FIRST-EL(N-DATA) = 1 END-IF
    WHEN *PF-KEY = 'PF8'
      MOVE 1 TO P-CURS C-CURS
      COMPUTE C-DATA1 = FIRST-EL(N-DATA) + Q-LINE - 1
      IF C-DATA1 <= MAX-EL(N-DATA) THEN
        COMPUTE FIRST-EL(N-DATA) = C-DATA1 + 1
      END-IF
    WHEN *PF-KEY = 'PF9'
      MOVE 1 TO P-CURS C-CURS
      ASSIGN FIRST-EL(N-DATA) = 1
    WHEN *PF-KEY = 'PF10'
      MOVE 1 TO P-CURS C-CURS
      ASSIGN FIRST-EL(N-DATA) = MAX-EL(N-DATA)
    WHEN NONE IGNORE
  END-DECIDE
*
END-REPEAT
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* опнжедспю оепеяшкйх дюммшу б люяяхб щйпюмю
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE ARRY-PROC
*
  ASSIGN C-DATA = FIRST-EL(N-DATA)
*
  FOR C-LINE = 1 TO Q-LINE
    IF C-DATA > MAX-EL(N-DATA) THEN ESCAPE BOTTOM END-IF
    ASSIGN C-DATA-B = C-DATA
    CALL 'RWSX' C-DATA-B INPUT-REC(C-LINE) RD-REC N-DATA-B
    ADD 1 TO C-DATA
  END-FOR
*
END-SUBROUTINE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* опнжедспю янпрхпнбйх
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE SORT-PROC
*
ASSIGN C-DATA1-B = P-STEK(P-CURS,1)
ASSIGN C-DATA2-B = P-STEK(P-CURS,2)
CALL 'SRTX' C-DATA1-B C-DATA2-B N-DATA-B
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* времхе дюммшу хг ад б ярей
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE LOAD-PROC
*
  ASSIGN C-DATA = 0
*
    RESET STEK-REC
    FIND ASRZ-LS-FILE  FA-F = FA  THRU FF
      IF ITN NE 0 AND ITN NE TN-F  ESCAPE TOP  END-IF
*     FIND ASRZ-LS-FILE  FA-F NE ' '
      ADD 1 TO C-DATA
      IF C-DATA > Q-DATA THEN ESCAPE BOTTOM END-IF
*
      ASSIGN STEK-TN = TN-F
      ASSIGN STEK-PO = PO-F
      COMPRESS FA-F IM-F OT-F TO STEK-FI
      FIND ASRZ-SYS-FILE KK-F = 'дк' AND RS-F = DL-F
         ASSIGN STEK-DO = NB-F(1)
      END-FIND
*     ASSIGN STEK-DO = DL-F
      ASSIGN STEK-PR = TP-F
      ASSIGN STEK-UV = DU-F
      ASSIGN STEK-DR = #DR
*
      ASSIGN C-DATA-B = C-DATA
      CALL 'RWSX' C-DATA-B STEK-REC WR-REC N-DATA-B
    END-FIND
*
*
  ASSIGN MAX-EL(N-DATA)   = C-DATA
  ASSIGN #ITOG            = C-DATA
  ASSIGN FIRST-EL(N-DATA) = 1
*
END-SUBROUTINE
*******************************
* дкхмю яйюмхпнбюмхъ рейярю
*******************************
 DEFINE SUBROUTINE DLINA
   RESET DL
   FOR I 1 20
    IF FA-M(I) NE ' '
       ADD 1 TO DL
     ELSE
       ESCAPE BOTTOM
    END-IF
   END-FOR
* WRITE '='DL
 END-SUBROUTINE
*******************************
* бшанп гюохяеи
*******************************
  DEFINE SUBROUTINE  TEXT
   RESET C-DEL
* WRITE 'TEXT' '='DL
   FOR I 1 DL
    IF FAM-M(I) = FA-M(I)
*  WRITE '='FAM-M(C-DUBL) '='FA-M(C-DUBL) '='C-DUBL
       ESCAPE TOP
     ELSE
       ASSIGN C-DEL = 1
    END-IF
   END-FOR
  END-SUBROUTINE
END
