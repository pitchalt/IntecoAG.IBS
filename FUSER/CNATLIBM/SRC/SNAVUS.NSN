* >Natural Source Header 000000 /*<RO>>
* :NatName SNAVUS
* :UID MSA
* :Mode S
* :CP
* :Date 20101018
* :Time 1406420
* <Natural Source Header /*<<RO>
************************************
* Õ¿—“–Œ… ¿  ”—“¿ÕŒ¬À≈ÕÕ€≈ —»—“≈Ã€ *
************************************
DEFINE DATA
*  GLOBAL USING UFROG       /* √ÀŒ¡¿À‹Õ€≈ œ≈–≈Ã≈ÕÕ€≈ ƒÀﬂ ¬—≈… —»—“≈Ã€
PARAMETER USING PRMNAVI
  LOCAL  USING LCLNAUL    /* VIEW Õ¿ ‘¿…À IBS-SYS-FILE
  LOCAL  USING LCLFROL1      /* Œ¡Ÿ»≈ œ≈–≈Ã≈ÕÕ€≈
  LOCAL  USING LCLFROL4
  LOCAL  USING PRMHELP
  LOCAL
    1 SELFUN(A60) INIT<'”ÒÚ‡ÌÓ‚ÎÂÌÌ˚Â ÒËÒÚÂÏ˚'>
    1 SELREG(A40)
    1 INPUT-REC(A14/1:10)
    1 REDEFINE INPUT-REC
      2 #INPUT-REC(10)
* œŒÀﬂ Õ≈¬€¬Œƒ»Ã€≈ Õ¿ › –¿Õ
        3 FIELD-FF  (B001) /* ‘À¿√ »«Ã≈Õ≈Õ»ﬂ/”ƒ¿À≈Õ»ﬂ «¿œ»—»
        3 FIELD-ISN (I4) /* ISN «¿œ»—»
        3 FIELD-UP  (A001) /* ‘À¿√ «¿Ÿ»“€ «¿œ»—»
* œŒÀﬂ ¬€¬Œƒ»Ã€≈ Õ¿ › –¿Õ
        3 #FIELD-01 (A008)      /*  Œƒ
        3 REDEFINE #FIELD-01
          4 #FIELD-01-A(A008)
*
* —“–” “”–¿ ›À≈Ã≈Õ“¿ —“≈ ¿ — ƒ¿ÕÕ€Ã»
*
    1 STEK-REC(A14)
    1 REDEFINE STEK-REC
      2 STEK-FF(B01)
      2 STEK-ISN(I4)
      2 STEK-UP(A01)
*
      2 STEK-01(A08)
    1 #KD(N05)                /*   Œƒ Œ–√¿Õ»«¿÷»»
    1 KEY1(A10)
    1 REDEFINE KEY1
      2 KEYOG1(N5)
      2 KEYKD1(N5)
    1 #I(N3)
    1 ROG(A8)
    1 MUG(A8/1:10)
    1 #ISN(I4)
    1 NASTR(A1)
*
END-DEFINE
*
SET KEY PF1 PF2 PF3 PF4 PF5 PF6 PF7 PF8 PF9 PF10 PF11 PF12
INCLUDE CCASKOG
#OPSYS := *OPSYS
*
MOVE 4   TO N-DATA N-DATA-B     /* ÕŒÃ≈– —“≈ ¿ — ƒ¿ÕÕ€Ã»
MOVE 14  TO L-DATA L-DATA-B     /* ƒÀ»Õ¿ ›À≈Ã≈Õ“¿ ¬ —“≈ ≈ — ƒ¿ÕÕ€Ã»
MOVE 1000 TO Q-DATA Q-DATA-B    /*  ŒÀ»◊≈—“¬Œ ›À≈Ã≈Õ“Œ¬ ¬ —“≈ ≈ — ƒ¿ÕÕ€Ã»
*
MOVE 5   TO N-DEL  N-DEL-B      /* ÕŒÃ≈– —“≈ ¿ — ISN ”ƒ¿À≈ÕÕ€’ «¿œ»—≈…
MOVE 4   TO L-DEL  L-DEL-B      /* ƒÀ»Õ¿ ›À≈Ã≈Õ“¿ ¬ —“≈ ≈ — ISN
MOVE 1000 TO Q-DEL  Q-DEL-B      /*  ŒÀ»◊≈—“¬Œ ›À≈Ã≈Õ“Œ¬ ¬ —“≈ ≈ — ISN
*
ASSIGN Q-FIELD = 1          /* œŒÀ≈… ¬ —“–Œ ≈
ASSIGN Q-LINE = 10          /* —“–Œ  Õ¿ › –¿Õ≈
ASSIGN F-LINE = 8           /* —Ã≈Ÿ≈Õ»≈ œ≈–¬Œ… —“–Œ »
ASSIGN T-KEY = 7            /* Õ¿◊¿À‹Õ¿ﬂ œŒ«»÷»ﬂ  Àﬁ◊≈¬Œ√Œ ¿“–»¡”“¿
ASSIGN L-KEY = 8            /* ƒÀ»Õ¿  Àﬁ◊≈¬Œ√Œ ¿“–»¡”“¿
ASSIGN P-INPUT(1,1) = 31
ASSIGN P-INPUT(1,2) = 8
*
ASSIGN P-STEK(1,1) = 7
ASSIGN P-STEK(1,2) = 8
ASSIGN #KD = OG-IDENT-G
*
* Œ—ÕŒ¬ÕŒ… ÷» À
*
REPEAT
 IF RE-MSG = ' '
  INCLUDE INPPC '"NAVUSM0"' '"MAPUSM0"'
 ELSE
 IF #OPSYS = 'W'
  INPUT TEXT RE-MSG ALARM USING MAP 'NAVUSM0'
  ELSE
  INPUT TEXT RE-MSG ALARM USING MAP 'MAPUSM0'
 END-IF
 END-IF
 RESET RE-MSG
    IF *PF-KEY = 'PF1'
        INCLUDE CCHELP '21'
        ESCAPE TOP
    END-IF
  INCLUDE CCUFRO51
  IF #KD = 0
    ASSIGN RE-MSG = 'Œ–√¿Õ»«¿÷»ﬂ'
    ESCAPE TOP
  END-IF
  MOVE #KD TO KEYOG1 KEYKD1
I.  FIND NUMBER IBS-NAUS-FILE OG-KD = KEY1
  IF *NUMBER(I.) = 0
    ASSIGN RE-MSG = 'Œ–√¿Õ»«¿÷»ﬂ'
    ESCAPE TOP
  END-IF
  ASSIGN C-CURS = 1           /* —“–Œ ¿ —  ”–—Œ–ŒÃ
*
  INCLUDE CCUFRO1
  REPEAT
*
    RESET #FIELD-01(*)
*
    PERFORM ARRY-PROC
*
  INCLUDE INPPC '"NAVUSM1"' '"MAPVUSM1"'
*
   FOR C-CURS 1 Q-LINE
     IF *CURS-FIELD = POS(#FIELD-01(C-CURS))
            ESCAPE BOTTOM  END-IF
   END-FOR
     IF *PF-KEY = 'PF1'
        INCLUDE CCHELP '21'
        ESCAPE TOP
     END-IF
*
    INCLUDE CCNAVC2                       /* Œ¡–¿¡Œ“ ¿ œ‘
*
  END-REPEAT
END-REPEAT
*
INCLUDE CCUFRO53
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* ◊“≈Õ»≈ ƒ¿ÕÕ€’ »« IBS-SYS-FILE ¬ —“≈  — ƒ¿ÕÕ€Ã»
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE LOAD-PROC
*
  RESET C-DATA C-DATA-B
  FIND IBS-NAUS-FILE OG-KD = KEY1
   ASSIGN #ISN = *ISN
    IF C-DATA > Q-DATA THEN ESCAPE BOTTOM END-IF
*
    ASSIGN STEK-FF  = H'00'
    ASSIGN STEK-ISN = *ISN
    MOVE SY-ID(*) TO MUG(*)
*
    FOR #I 1 10
    MOVE MUG(#I) TO STEK-01
    IF MUG(#I) = ' '  ESCAPE  BOTTOM  END-IF
      ASSIGN STEK-01 = MUG(#I)
      ASSIGN C-DATA-B = #I
      CALL 'RWSX' C-DATA-B STEK-REC WR-REC N-DATA-B
    END-FOR
    IF C-DATA-B = 0  ASSIGN C-DATA-B = 1 RESET STEK-01
      CALL 'RWSX' C-DATA-B STEK-REC WR-REC N-DATA-B
    END-IF
    ASSIGN C-DATA = C-DATA-B
*
  END-FIND
*
  ASSIGN MAX-EL(N-DATA)   = C-DATA
  ASSIGN FIRST-EL(N-DATA) = 1
  ASSIGN MAX-EL(N-DEL)    = 0
*
END-SUBROUTINE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* œ–Œ÷≈ƒ”–¿ œ–Œ¬≈– » ƒ¿ÕÕ€’ › –¿Õ¿
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CHECK-PROC
*
FOR C-LINE = 1 TO Q-LINE /* œ–Œ—Ã¿“–»¬¿≈Ã —“–Œ » › –¿Õ¿
*
  IF #FIELD-01(C-LINE) NE ' '     /* —“–Œ ¿ Õ≈ ”ƒ¿À≈Õ¿
    ASSIGN C-DUBL = 0
    ASSIGN ROG = #FIELD-01(C-LINE)
    FOR #I 1 Q-LINE
      IF #FIELD-01(#I) NE ' '
        IF ROG = #FIELD-01(#I)  COMPUTE C-DUBL = C-DUBL + 1
        END-IF
      END-IF
    END-FOR
    IF C-DUBL > 1 THEN
      REINPUT'ƒ”¡À»–Œ¬¿Õ»≈ »ƒ≈Õ“»‘» ¿“Œ–¿'
      MARK *#FIELD-01(C-LINE) ALARM
    END-IF
*
    RESET C-DATA-B
    COMPUTE C-DATA2 = FIRST-EL(N-DATA) + Q-LINE - 1
    REPEAT
      ASSIGN C-DATA1-B = T-KEY
      ASSIGN C-DATA2-B = L-KEY
      CALL 'CMPX' #FIELD-01(C-LINE)
      C-DATA1-B C-DATA2-B N-DATA-B C-DATA-B
      IF C-DATA1-B = H'00000000' THEN ESCAPE BOTTOM END-IF
      ASSIGN C-DATA1 = C-DATA1-B
      IF NOT(C-DATA1 = FIRST-EL(N-DATA) THRU C-DATA2) THEN
        REINPUT'ƒ”¡À»–Œ¬¿Õ»≈ »ƒ≈Õ“»‘» ¿“Œ–¿'
        MARK *#FIELD-01(C-LINE) ALARM
      END-IF
      ASSIGN C-DATA-B = C-DATA1-B
    END-REPEAT
    ELSE                                          /* —“–Œ ¿ ”ƒ¿À≈Õ¿
    IF C-DATA > MAX-EL(N-DATA) THEN ESCAPE BOTTOM END-IF
  END-IF
*
END-FOR
*
END-SUBROUTINE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* œ–Œ÷≈ƒ”–¿ »«Ã≈Õ≈Õ»ﬂ ƒ¿ÕÕ€’
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE UPD-PROC
*
* RESET #ISN
* FOR #I 1 MAX-EL(N-DATA)  ASSIGN C-DATA-B = #I
*   CALL 'RWSX' C-DATA-B STEK-REC RD-REC N-DATA-B
*   IF STEK-ISN NE 0  ASSIGN #ISN = STEK-ISN  END-IF
* END-FOR
* IF MAX-EL(N-DATA) = 0
*    GET IBS-NAUS-FILE #ISN
*   DELETE
* END-IF
*
IF #ISN NE 0 GET IBS-NAUS-FILE #ISN  END-IF
*
  RESET  IBS-NAUS-FILE.SY-ID(*)
FOR C-DATA 1 MAX-EL(N-DATA)
  ASSIGN C-DATA-B = C-DATA
  CALL 'RWSX' C-DATA-B STEK-REC RD-REC N-DATA-B
  ASSIGN IBS-NAUS-FILE.SY-ID(C-DATA) = STEK-01
  ASSIGN SY-IDENT-G(C-DATA) = STEK-01
END-FOR
*
IF #ISN NE 0
  THEN UPDATE
  ELSE STORE IBS-NAUS-FILE
END-IF
*
END OF TRANSACTION
*
END-SUBROUTINE
END
