* >Natural Source Header 000000 /*<RO>>
* :NatName KONTR-OS
* :UID NIMI
* :Mode S
* :CP
* :Date 20051020
* :Time 1405330
* <Natural Source Header /*<<RO>
*  Œ“—À≈ƒ»“‹ Õ¿ ¬Œ«ÃŒ∆ÕŒ—“‹ œ”—“€’ —“¿“≈… ¿Õ¿À»“» » œŒ Õ¿—“–Œ… ≈
*****************************************************************
DEFINE DATA
  PARAMETER
 1 OG-IDENT-G      (N005)
 1 SCHET           (N005)
 1 OBJ             (N005)
 1 PODR            (N005)
 1 ZAK             (A009)
 1 DOPINF          (A20/5)
 1 STKK            (A5/5)
 1 STKD            (N6/5)
 1 RCOD            (N001)  /*  0 - ¬—≈ ’Œ–ŒÿŒ œ–» ¬Œ«¬–¿“≈
 1 TIPSCH          (A002)  /*  'OS' OR 'KS'
 1 NSTR            (I004)
 1 SYST            (A010)
  LOCAL  USING LCLFROL1
  LOCAL  USING LCLPLL      /* VIEW Õ¿ ‘¿…À IBS-SYS-FILE
  LOCAL  USING LCLNPL      /* VIEW Õ¿ ‘¿…À IBS-SYS-FILE
  LOCAL  USING LCLVOL      /* VIEW Õ¿ ‘¿…À IBS-SYS-FILE
  LOCAL  USING LCLBSL      /* VIEW Õ¿ ‘¿…À IBS-BS-FILE
  LOCAL  USING LCLZKL      /* VIEW Õ¿ ‘¿…À ZAKAZ
  LOCAL  USING LCLPOL      /* VIEW Õ¿ ‘¿…À IBS-SYS-FILE
  LOCAL  USING LCLSTAT
  LOCAL USING LCLFROL4
  LOCAL  USING LCLSTSET
  LOCAL  USING CHREBCD
  LOCAL  USING CHR1251
  LOCAL
 1 SY-IDENT-G      (A8/10)
 1 LINEST          (A030)
 1 REDEFINE LINEST
   2 LINESTA       (A1/30)
 1 OBJ-NM          (A040)
 1 MAXDL           (N002)  INIT <30>
 1 KEY1            (A010)
 1 REDEFINE KEY1
   2 KEYOG1        (N005)
   2 KEYKD1        (N005)
 1 KEY2            (A008)
 1 REDEFINE KEY2
   2 KEYOG2        (N005)
   2 KEYKD2        (N003)
 1 STEK-REC
   2 BS-ID         (N003)
   2 AP-ID         (A003)
   2 RZ-ID         (N002)
   2 FL-BL         (A001)
   2 ST-BS         (I004)
   2 ST-SS         (I004)
   2 ST-F          (A5/3)
   2 BL-F          (A1/3)
   2 FL-AN         (A003)
   2 FL-DI         (A001)
   2 FL-PO         (A001)
   2 FL-ZK         (A001)
   2 FL-KL         (A001)
   2 FL-DZ         (A001)
   2 VA-ID         (A003)
   2 NM-BS         (A040)
 1 I               (N004)
 1 J               (N004)
 1 L               (N004)
 1 TEXT1           (A050)
 1 TEXT2           (A050)
 1 NAMEPL          (A004)
 1 REDEFINE NAMEPL
   2 IM-B          (A001)
   2 T1            (A001)
   2 OT-B          (A001)
   2 T2            (A001)
 1 INP-REC         (A46/5)
 1 REDEFINE INP-REC
   2 INPREC        (5)
     3 KK          (A005)
     3 NMKK        (A15)
     3 KD          (N006)
     3 REDEFINE KD
       4 KDS       (A006)
     3 NMKD        (A019)
     3 BL          (A001)
 1 KD-C            (C/5)   INIT ALL <(AD=PN)>
 1 DOPINFSC        (A20/10)
 1 CONTR           (A005)
 1 SHGS            (N001)
 1 OGCS            (A016)
 1 REDEFINE OGCS
   2 OG-ID         (N005)
   2 CS-F          (N006)
   2 ST-F          (A005)
 1 OGST            (A016)
 1 REDEFINE OGST
   2 OG-ID         (N005)
   2 ST-F          (A005)
   2 CS-F          (N006)
 1 RAB-MAS         (A10/3)
 1 REDEFINE RAB-MAS
   2 RABMAS        (3)
     3 RABMSA      (A1/10)
 1 TEKCS           (A006)
 1 REDEFINE TEKCS
   2 TEKCSA        (A1/6)
 1 NUMERR          (N003)
 1 III             (I004)
 1 NAMEST          (A070)
 1 N-STEK          (N005)
 1 TEMA            (A010)
 1 KEYSETUP        (A016)
 1 REDEFINE KEYSETUP
   2 KEYOG         (N005)
   2 KEYTT         (A005)
   2 KEYCD         (N006)
 1 DL-LINE         (N002)
 1 POINTL          (A001)
 1 STEK-SEL        (A030)
 1 REDEFINE STEK-SEL
   2 STEK-SEL-OBN  (N005)
   2 STEK-SEL-TX   (A020)
   2 STEK-SEL-KS   (N005)
 1 SSW1            (P007)  INIT <1>
 1 SSW             (P007)
 1 INPUT-REC       (A30/15)
 1 REDEFINE INPUT-REC
   2 INPREC        (15)
     3 #FIELD-OB   (N005)
     3 #FIELD-TX   (A020)
     3 #FIELD-KS   (N005)
 1 #FIELD-OBC      (C/15)  INIT ALL <(AD=PN)>
 1 FIO             (A020)
 1 TABN            (N005)
 1 TXT-TIP         (A010)
 1 IBS-NAUS  VIEW OF IBS-SYS-FILE
   2 SY-ID         (10)
 1 ASRZ-LS-FILE VIEW OF ASRZ-LS-FILE
   2 TN-F
   2 FA-F
   2 IM-F
   2 OT-F
   2 PO-F
 1 TXTSCR          (A025)
 1 OPSYS(A3)
END-DEFINE
*
  SET KEY PF1 PF3 PF7 PF8 PF9 PF10 PF11
  DEFINE WINDOW WIN
    SIZE 11 * 55
    BASE 05 / 10
    TITLE TEXT1
    CONTROL SCREEN
    FRAMED ON
  DEFINE WINDOW VV
    SIZE C-DEL * L-DEL
    BASE Q-DEL / L-DATA
    TITLE TEXT1
    CONTROL SCREEN
    /*
  OPSYS := *OPSYS
  INCLUDE DEFOPSYS
  MOVE OG-IDENT-G TO KEYOG1 KEYKD1 KEYOG2 OGCS.OG-ID OGST.OG-ID
  FIND IBS-NAUS OG-KD = KEY1
    EXAMINE SY-ID(*) 'ASRZ' GIVING NUMBER C-DUBL
  END-FIND
  IF TIPSCH = 'OS'
    COMPRESS 'Œ—Õ.—◊≈“”' SCHET TO TXT-TIP
   ELSE
    IF TIPSCH = 'KS'
      COMPRESS ' Œ––.—◊≈“”' SCHET TO TXT-TIP
     ELSE ESCAPE ROUTINE
    END-IF
  END-IF
  KEYKD1 := SCHET
  FIND IBS-BS-FILE OG-SS = KEY1
    ASSIGN STEK-REC.BS-ID  = IBS-BS-FILE.BS-ID
    ASSIGN STEK-REC.NM-BS  = IBS-BS-FILE.NM-BS
*    ASSIGN STEK-REC.FL-DZ  = IBS-BS-FILE.FL-DZ
    ASSIGN STEK-REC.FL-AN  = IBS-BS-FILE.FL-AN
    ASSIGN STEK-REC.FL-DI  = IBS-BS-FILE.FL-DI
    ASSIGN STEK-REC.FL-PO  = IBS-BS-FILE.FL-PO
    ASSIGN STEK-REC.ST-SS  = IBS-BS-FILE.CS-NN
    ASSIGN STEK-REC.FL-ZK  = IBS-BS-FILE.FL-ZK
    IF IBS-BS-FILE.FL-AN = '« '  STEK-REC.FL-ZK := 'ƒ'  END-IF
    ASSIGN STEK-REC.FL-KL  = IBS-BS-FILE.FL-KL
    SHGS := IBS-BS-FILE.C*GS-F
    FOR I 1 SHGS
      MOVE IBS-BS-FILE.BL-F(I) TO STEK-REC.BL-F(I) INP-REC.BL(I)
      MOVE IBS-BS-FILE.ST-F(I) TO STEK-REC.ST-F(I) INP-REC.KK(I)
    END-FOR
  END-FIND
  MOVE STEK-REC.BS-ID TO KEYKD2
  FIND IBS-BS-FILE OG-BS = KEY2
    ACCEPT IF SS-ID = 0
    ASSIGN STEK-REC.ST-BS  = IBS-BS-FILE.CS-NN
    ASSIGN STEK-REC.RZ-ID  = IBS-BS-FILE.RZ-ID
    ASSIGN STEK-REC.AP-ID  = IBS-BS-FILE.AP-ID
    ASSIGN STEK-REC.FL-BL  = IBS-BS-FILE.FL-BL
    ASSIGN STEK-REC.NM-BS  = IBS-BS-FILE.NM-BS
    IF SHGS = 0 AND IBS-BS-FILE.C*GS-F > 0
      SHGS := IBS-BS-FILE.C*GS-F
      FOR I 1 SHGS
        INP-REC.KK(I) := IBS-BS-FILE.ST-F(I)
      END-FOR
    END-IF
  END-FIND
  IF STEK-REC.ST-SS = 0 AND STEK-REC.ST-BS NE 0
    STEK-REC.ST-SS := STEK-REC.ST-BS
  END-IF
  IF STEK-REC.ST-SS = -1  RESET STEK-REC.ST-SS  END-IF
  IF STEK-REC.ST-SS NE 0
    OGCS.CS-F := -1
    FOR I 1 SHGS
      OGCS.ST-F := STEK-REC.ST-F(I)
      FIND VIEWSTAT OG-CS = OGCS
        INP-REC.NMKK(I) := VIEWSTAT.NM-OG
      END-FIND
      MOVE (AD=I) TO KD-C(I)
    END-FOR
    KEYSETUP.KEYOG := OG-IDENT-G
    KEYSETUP.KEYTT := NAME_TABLE_STSETUPV
    KEYSETUP.KEYCD := MAGIC_NUMBER_STSETUPV
    FIND (1) STSETUPV OG-ST = KEYSETUP
    END-FIND
  END-IF
  /*
  RESET RCOD
  SET WINDOW OFF
  IF STEK-REC.FL-ZK  = 'ƒ'
    IF ZAK NE ' '  PERFORM PROV-ZK  END-IF
    IF ZAK = ' ' OR RCOD NE 0  RCOD := 1
      REPEAT
        COMPRESS 'Œœ–≈ƒ≈À»“≈ «¿ ¿« œŒ' TXT-TIP TO TEXT1
        PERFORM FORM-ZAG
        SET WINDOW 'WIN'
        INPUT TEXT TEXT2 USING MAP 'KONTRMZ'
        RESET TEXT2
        IF *PF-KEY = 'PF11'
          CALLNAT 'SELZAK' OG-IDENT-G ZAK
          ESCAPE TOP
        END-IF
        IF *PF-KEY = 'PF3' SET WINDOW OFF ESCAPE ROUTINE  END-IF
        IF ZAK = ' '
          REINPUT '¬¬≈ƒ»“≈ «¿ ¿« »À» ¬€¡Œ– œŒ œ‘11' MARK *ZAK
        END-IF
        PERFORM PROV-ZK
        IF RCOD = 0  ESCAPE BOTTOM END-IF
      END-REPEAT
    END-IF
  END-IF
*
  DEFINE SUBROUTINE PROV-ZK
   RESET P-CURS
   Z1. FIND NUMBER ZAKAZ ZK-F = ZAK AND BS-F = SCHET
       IF *NUMBER(Z1.) NE 0
         RESET RCOD
        ELSE  RCOD := 1
   Z2.   FIND NUMBER ZAKAZ ZK-F = ZAK
         IF *NUMBER(Z2.) = 0
           TEXT2 := 'Õ≈“ “¿ Œ√Œ «¿ ¿«¿'
          ELSE
           COMPRESS '«¿ ¿« Õ≈ —ŒŒ“¬≈“—“¬”≈“ —◊≈“”' SCHET TO TEXT2
         END-IF
       END-IF
  END-SUBROUTINE
  /*
  IF STEK-REC.FL-DI  = 'ƒ'
    IF DOPINF(*) NE ' ' IGNORE
     ELSE
      COMPRESS 'ƒŒœ. »Õ‘Œ–. œŒ' TXT-TIP TO TEXT1
      RCOD := 1
      PERFORM FORM-ZAG
      PERFORM PROC-DI
      IF *PF-KEY = 'PF3'  SET WINDOW OFF ESCAPE ROUTINE  END-IF
      IF DOPINF(*) NE ' '  RESET RCOD  END-IF
    END-IF
  END-IF
*
  IF STEK-REC.FL-AN  = SYS-VO
    IF OBJ NE 0  PERFORM CHECK-VO  END-IF
    IF OBJ = 0 OR RCOD NE 0  RCOD := 1
      REPEAT
        COMPRESS ' Œƒ ¬Õ≈ÿÕ≈… Œ–√¿Õ. œŒ' TXT-TIP TO TEXT1
        TXTSCR := ' Ó‰ ‚ÌÂ¯ÌÂÈ Ó„‡ÌËÁ‡ˆËË :'
        PERFORM FORM-ZAG
        SET WINDOW 'WIN'
        INPUT TEXT TEXT2 USING MAP 'KONTRMV'
        RESET TEXT2
        IF *PF-KEY = 'PF11'
          CALLNAT 'SELVO' OG-IDENT-G OBJ
          ESCAPE TOP
        END-IF
        IF *PF-KEY = 'PF3'  SET WINDOW OFF ESCAPE ROUTINE  END-IF
        IF OBJ = 0 REINPUT '«¿ƒ¿…“≈  Œƒ »À» ¬€¡Œ– œŒ œ‘11' MARK *OBJ END-IF
        PERFORM CHECK-VO
        IF RCOD = 0  ESCAPE BOTTOM END-IF
      END-REPEAT
    END-IF
  END-IF
  /*
  DEFINE SUBROUTINE CHECK-VO
      ASSIGN KEYKD1 = OBJ
FF2.  FIND NUMBER IBS-KVO-FILE OG-VO = KEY1
      IF *NUMBER(FF2.) NE 0  RESET RCOD ELSE RCOD := 1
        TEXT2 := 'Õ≈“ ¬  Œƒ»‘» ¿“Œ–≈'
      END-IF
  END-SUBROUTINE
*
  IF STEK-REC.FL-AN  = SYS-KC
    IF OBJ NE 0  PERFORM CHECK-KC  END-IF
    IF OBJ = 0 OR RCOD NE 0  RCOD := 1
      REPEAT
        COMPRESS ' Œƒ —“¿“‹» –¿—’Œƒ¿ œŒ' TXT-TIP TO TEXT1
        TXTSCR := ' Ó‰ ÒÚ‡Ú¸Ë ‡ÒıÓ‰‡      :'
        PERFORM FORM-ZAG
        SET WINDOW 'WIN'
        INPUT TEXT TEXT2 USING MAP 'KONTRMV'
        RESET TEXT2
        IF *PF-KEY = 'PF11'
*         CALLNAT 'SELVO' OG-IDENT-G OBJ
          ESCAPE TOP
        END-IF
        IF *PF-KEY = 'PF3'  SET WINDOW OFF ESCAPE ROUTINE  END-IF
        IF OBJ = 0 REINPUT '«¿ƒ¿…“≈  Œƒ »À» ¬€¡Œ– œŒ œ‘11' MARK *OBJ END-IF
        PERFORM CHECK-KC
        IF RCOD = 0  ESCAPE BOTTOM END-IF
      END-REPEAT
    END-IF
  END-IF
  /*
  DEFINE SUBROUTINE CHECK-KC
      ASSIGN KEYKD1 = OBJ  RESET C-DATA2
NP1.  FIND IBS-KNP-FILE OG-NP = KEY1
**        IF #FIELD-P-OS NE KB-ID ESCAPE TOP END-IF
        ASSIGN C-DATA2 = 1
      END-FIND
      IF *NUMBER(NP1.) NE 0  RESET RCOD
        ELSE
         TEXT2 := 'Õ≈“ ¬  Œƒ»‘» ¿“Œ–≈'
      END-IF
      IF *NUMBER(NP1.) NE 0 AND C-DATA2 = 0
        COMPRESS '—“¿“‹ﬂ' OBJ 'Õ≈ Œœ»—¿Õ¿ —Œ —◊≈“ŒÃ' SCHET TO TEXT2
      END-IF
  END-SUBROUTINE
  /*
  IF STEK-REC.FL-AN = 'œÀ'
    IF OBJ NE 0  PERFORM CHECK-PL  END-IF
    IF OBJ = 0 OR RCOD NE 0 RCOD := 1
      REPEAT
        COMPRESS ' Œƒ œŒƒŒ“◊≈“ÕŒ√Œ À»÷¿ œŒ' SCHET TXT-TIP TO TEXT1
        PERFORM FORM-ZAG
        SET WINDOW 'WIN'
        INPUT TEXT TEXT2 USING MAP 'KONTRMPL'
        RESET TEXT2
        IF *PF-KEY = 'PF11'
          PERFORM SELPL
          ESCAPE TOP
        END-IF
        IF *PF-KEY = 'PF3'  SET WINDOW OFF ESCAPE ROUTINE  END-IF
        IF OBJ = 0 REINPUT '«¿ƒ¿…“≈  Œƒ »À» ¬€¡Œ– œŒ œ‘11' ALARM END-IF
        PERFORM CHECK-PL
        IF RCOD = 0  ESCAPE BOTTOM  END-IF
      END-REPEAT
    END-IF
    ASSIGN  KEYKD1 = PODR
PO1. FIND NUMBER IBS-KPO-FILE OG-PD = KEY1
    IF *NUMBER(PO1.) = 0
      RCOD := 1
      COMPRESS '('  OBJ-NM '),' TO TEXT2
      REPEAT
        INPUT / '  œŒƒ–¿«ƒ≈À≈Õ»≈, Œœ–≈ƒ≈À≈ÕÕŒ≈ ” œŒƒŒ“◊≈“Õ» ¿'
              / '       ' TEXT2 (AD=O AL=25)
              / '   Œ“—”“—“¬”≈“ ¬  Œƒ»‘» ¿“Œ–≈'
        SET WINDOW OFF ESCAPE ROUTINE
      END-REPEAT
    END-IF
  END-IF
  /*
  DEFINE SUBROUTINE CHECK-PL
      IF C-DUBL = 0
        ASSIGN KEYKD1 = OBJ
PL2.    FIND IBS-KPL-FILE OG-PL = KEY1
          ASSIGN OBJ-NM = NM-PL
          ASSIGN PODR   = PO-ID
        END-FIND
        IF *NUMBER(PL2.) NE 0 RESET RCOD
         ELSE
          RCOD := 1  TEXT2 := 'Õ≈“ ¬  Œƒ»‘» ¿“Œ–≈'
        END-IF
       ELSE
LS1.    FIND ASRZ-LS-FILE TN-F = OBJ
          ASSIGN IM-B = IM-F(LS1.)
          ASSIGN OT-B = OT-F(LS1.)
          MOVE '.' TO T1 T2
          COMPRESS FA-F(LS1.) NAMEPL TO OBJ-NM
          ASSIGN PODR = PO-F(LS1.)
        END-FIND
        IF *NUMBER(LS1.) NE 0  RESET RCOD
          ELSE
           RCOD := 1  TEXT2 := 'Õ≈“ ¬  Œƒ»‘» ¿“Œ–≈'
        END-IF
      END-IF
  END-SUBROUTINE
*
  IF STEK-REC.FL-PO  = 'ƒ'
    IF PODR NE 0 PERFORM CHECK-PODR END-IF
    IF PODR = 0 OR RCOD NE 0  RCOD := 1
      REPEAT
        COMPRESS 'œŒƒ–¿«ƒ≈À≈Õ»≈ œŒ' TXT-TIP TO TEXT1
        PERFORM FORM-ZAG
        SET WINDOW 'WIN'
        INPUT TEXT TEXT2 USING MAP 'KONTRMP'
        RESET TEXT2
        IF *PF-KEY = 'PF11'
          CALLNAT 'SELPO' OG-IDENT-G PODR
          ESCAPE TOP
        END-IF
        IF *PF-KEY = 'PF3'  SET WINDOW OFF ESCAPE ROUTINE  END-IF
        IF PODR = 0
          REINPUT '«¿ƒ¿…“≈  Œƒ »À» ¬€¡Œ– œŒ œ‘11' MARK *PODR
        END-IF
        PERFORM CHECK-PODR
        IF RCOD = 0 ESCAPE BOTTOM  END-IF
      END-REPEAT
    END-IF
  END-IF
  /*
  DEFINE SUBROUTINE CHECK-PODR
      ASSIGN  KEYKD1 = PODR
F.    FIND NUMBER IBS-KPO-FILE OG-PD = KEY1
      IF *NUMBER(F.) NE 0  RESET RCOD
        ELSE
         RCOD := 1  TEXT2 := 'Õ≈“ ¬  Œƒ»‘» ¿“Œ–≈'
      END-IF
  END-SUBROUTINE
*
  IF STEK-REC.ST-SS = 0  RESET LINEST RCOD STKK(*) STKD(*)
    ELSE
    FOR C-CURS 1 SHGS
      IF STKK(C-CURS) = ' ' OR STKD(C-CURS) = 0 ESCAPE BOTTOM END-IF
    END-FOR
    IF C-CURS > SHGS  RESET RCOD  PERFORM CHK-ST
      ELSE  RCOD := 1
    END-IF
    IF STKK(1) = ' ' OR RCOD NE 0
      COMPRESS ' Œƒ€ —“¿“≈… ¿Õ¿À»“» » œŒ' TXT-TIP TO TEXT1
      PERFORM FORM-ZAG
      SET WINDOW 'WIN'  RCOD := 1
R2.   REPEAT
        SET WINDOW 'WIN'
        INPUT USING MAP 'KONTRMS'
        IF *PF-KEY = 'PF3'  ESCAPE BOTTOM(R2.)  END-IF
        FOR C-CURS 1 SHGS
          IF *CURS-FIELD = POS(INP-REC.KDS(C-CURS)) ESCAPE BOTTOM END-IF
        END-FOR
        IF *PF-KEY = 'PF11' AND C-CURS = 1 THRU SHGS
          CALLNAT 'SELECTSC' OG-IDENT-G INP-REC.KK(C-CURS)
                             III NAMEST N-STEK
          INP-REC.KD(C-CURS) := III  INP-REC.NMKD(C-CURS) := NAMEST
          ESCAPE TOP
        END-IF
        FOR I 1 SHGS
          IF INP-REC.KDS(I) NE ' '
            OGST.ST-F := INP-REC.KK(I)
            IF INP-REC.KDS(I) IS (N6)
              OGST.CS-F := VAL(INP-REC.KDS(I))
              PERFORM CHECK-PROC
              IF Q-FIELD NE 0
                REINPUT 'Õ≈“ “¿ Œ√Œ  Œƒ¿' MARK *INP-REC.KDS(I) ALARM
              END-IF
             ELSE
              IF STSETUPV.NULL NE ' '
                IF INP-REC.KDS(I) = STSETUPV.FILL  IGNORE
                 ELSE
                  REINPUT ' Œƒ ƒŒÀ∆≈Õ ¡€“‹ ÷»‘–Œ¬€Ã'
                  MARK *INP-REC.KDS(I) ALARM
                END-IF
              END-IF
            END-IF
           ELSE
           IF STSETUPV.NULL NE ' '
             INP-REC.KDS(I) := STSETUPV.FILL
            ELSE
             REINPUT 'Õ≈Œ¡’Œƒ»ÃŒ «¿œŒÀÕ»“‹ ¬—≈  Œƒ€'
             MARK *INP-REC.KDS(I) ALARM
           END-IF
         END-IF
       END-FOR
       RESET RCOD
       RESET STKK(*) STKD(*)
       STKK(1:SHGS) := INP-REC.KK(1:SHGS)
       STKD(1:SHGS) := INP-REC.KD(1:SHGS)
       ESCAPE BOTTOM(R2.)
    END-REPEAT
    SET WINDOW OFF
    END-IF
*
DEFINE SUBROUTINE CHK-ST
        FOR I 1 SHGS
          IF STKK(I) NE ' '
            OGST.ST-F := STKK(I)
            OGST.CS-F := STKD(I)
            PERFORM CHECK-PROC
            IF Q-FIELD NE 0
              RCOD := 1  TEXT2 := 'Õ≈“ ¬  Œƒ»‘» ¿“Œ–≈'
            END-IF
          ELSE
           IF STSETUPV.NULL NE ' '
             IGNORE
             ELSE  RCOD := 1
              TEXT2 :=  'Õ≈Œ¡’Œƒ»ÃŒ «¿œŒÀÕ»“‹ ¬—≈  Œƒ€'
           END-IF
         END-IF
       END-FOR
END-SUBROUTINE
  END-IF
*
DEFINE SUBROUTINE CHECK-PROC
  RESET Q-FIELD
ST1. FIND VIEWSTAT OG-ST = OGST
    INP-REC.NMKD(I) := NM-OG
  END-FIND
  IF *NUMBER(ST1.) = 0  Q-FIELD := 1  END-IF
END-SUBROUTINE
*
DEFINE SUBROUTINE PROC-DI
  C-DEL := 17  L-DEL := 27  Q-DEL := 5  L-DATA := 10
  SET WINDOW 'VV'
  REPEAT
    INPUT USING MAP 'KONTRMD'
    RESET C-DATA1
    FOR C-DATA 1 10
      IF DOPINFSC(C-DATA) NE ' '
        ADD 1 TO C-DATA1
        IF C-DATA1 < 6
          DOPINF(C-DATA1) := DOPINFSC(C-DATA)
        END-IF
      END-IF
    END-FOR
    IF C-DATA1 < 10 AND C-DATA1 > 0 RESET DOPINFSC(C-DATA1+1:10)  END-IF
    DOPINFSC(1:5) := DOPINF(*)
    IF *PF-KEY = 'PF3'  ESCAPE BOTTOM END-IF
    IF *PF-KEY = 'ENTR' AND DOPINFSC(1:5) NE ' ' ESCAPE BOTTOM END-IF
  END-REPEAT
  SET WINDOW OFF
END-SUBROUTINE
*
DEFINE SUBROUTINE FORM-ZAG
  IF SYST = 'ASUM'
     COMPRESS TEXT1 'ƒÀﬂ —“–Œ »' NSTR TO TEXT1
  END-IF
END-SUBROUTINE
*
DEFINE SUBROUTINE SELPL
  CALL 'GTNX' N-DATA-B
  MOVE 30    TO L-DATA-B
  MOVE 10000 TO Q-DATA-B
  CALL 'GTSX' L-DATA-B Q-DATA-B N-DATA-B
R1. REPEAT
    TEXT1 := ' œ¿–¿Ã≈“–€ Œ“¡Œ–¿ œŒƒŒ“◊≈“Õ» Œ¬'
    SET WINDOW 'WIN'
    INPUT / '   “¿¡≈À‹Õ€… ÕŒÃ≈– :' TABN (AD=M SG=OFF ZP=OFF)
          / '   ‘¿Ã»À»ﬂ         :' FIO  (AD=M)
          / '   œŒƒ–¿«ƒ≈À≈Õ»≈   :' PODR (AD=M SG=OFF ZP=OFF)
         // '   --¬¬Œƒ---œ‘1---œ‘2---œ‘3---œ‘4---œ‘5---'
          / '     ŒÚ·Ó              ¬˚ı'
    IF *PF-KEY = 'PF3'  ESCAPE BOTTOM(R1.)  END-IF
  RESET C-DATA
  IF C-DUBL = 0
    ASSIGN  KEYKD1 = 1
    PL1. READ IBS-KPL-FILE BY OG-PL = KEY1
       IF IBS-KPL-FILE.OG-ID NE OG-IDENT-G ESCAPE BOTTOM END-IF
       ASSIGN STEK-SEL-OBN = PL-ID
       ASSIGN STEK-SEL-TX  = NM-PL
       ASSIGN STEK-SEL-KS  = PO-ID(PL1.)
       ADD 1 TO C-DATA
       ASSIGN C-DATA-B = C-DATA
       CALL 'RWSX' C-DATA-B STEK-SEL  WR-REC N-DATA-B
     END-READ
    ELSE
     FIND NUMBER ASRZ-LS-FILE TN-F > 0  RETAIN AS 'LLL'
     IF PODR NE 0
       FIND NUMBER ASRZ-LS-FILE WITH 'LLL' AND PO-F = PODR
       RETAIN AS 'LLL'
     END-IF
     IF TABN NE 0
       FIND NUMBER ASRZ-LS-FILE WITH 'LLL' AND TN-F = TABN
       RETAIN AS 'LLL'
     END-IF
     FIND ASRZ-LS-FILE WITH 'LLL'
       IF FIO NE ' '  ACCEPT IF FA-F = SCAN FIO  END-IF
       STEK-SEL-OBN := ASRZ-LS-FILE.TN-F
       STEK-SEL-TX  := ASRZ-LS-FILE.FA-F
       STEK-SEL-KS  := ASRZ-LS-FILE.PO-F
       ADD 1 TO C-DATA
       C-DATA-B := C-DATA
       CALL 'RWSX' C-DATA-B STEK-SEL WR-REC N-DATA-B
     END-FIND
   END-IF
   RELEASE SET 'LLL'
   IF C-DATA = 0  REINPUT 'Õ≈“ ƒ¿ÕÕ€’ œŒ œŒƒŒ“◊≈“Õ» ¿Ã' ALARM END-IF
   ASSIGN C-DATA1-B = 1
   ASSIGN C-DATA2-B = 5
   CALL 'SRTX' C-DATA1-B C-DATA2-B N-DATA-B
   Q-LINE := 15
   C-DEL := 20  L-DEL := 45  Q-DEL := 2  L-DATA := 10
   ASSIGN TEXT1 = '—ÔËÒÓÍ ÔÓ‰ÓÚ˜ÂÚÌ˚ı ÎËˆ'
   SET WINDOW 'VV'
   REPEAT
     SSW := SSW1
     RESET INPUT-REC(*) #FIELD-OB(*) #FIELD-KS(*)
     RESET INITIAL #FIELD-OBC(*)
     FOR C-LINE = 1 TO Q-LINE
       IF SSW > C-DATA   ESCAPE BOTTOM  END-IF
       ASSIGN C-DATA-B = SSW
       CALL 'RWSX' C-DATA-B INPUT-REC(C-LINE) RD-REC N-DATA-B
       ASSIGN #FIELD-OBC(C-LINE) = (AD=I)
       ADD 1 TO SSW
     END-FOR
     INPUT USING MAP 'KONTRM3'
     FOR C-CURS 1 Q-LINE
       IF *CURS-FIELD = POS(#FIELD-OB(C-CURS)) ESCAPE BOTTOM END-IF
     END-FOR
     DECIDE FOR FIRST CONDITION
       WHEN *PF-KEY = 'PF3' ESCAPE BOTTOM(R1.)
       WHEN *PF-KEY = 'PF7'
         SSW1 := SSW1 - Q-LINE
         IF SSW1 < 1  SSW1 := 1  END-IF
       WHEN *PF-KEY = 'PF8'
         IF SSW <= C-DATA  ADD Q-LINE TO SSW1 END-IF
       WHEN *PF-KEY = 'PF9'  SSW1 := 1
       WHEN *PF-KEY = 'PF10' SSW1 := C-DATA
       WHEN *PF-KEY = 'ENTR'
         C-DATA1 := SSW1 + C-CURS - 1
         C-DATA-B := C-DATA1
         CALL 'RWSX' C-DATA-B STEK-SEL RD-REC N-DATA-B
         OBJ := STEK-SEL-OBN
         ESCAPE BOTTOM(R1.)
       WHEN NONE IGNORE
     END-DECIDE
   END-REPEAT
  END-REPEAT
  CALL 'FRSX' N-DATA-B
END-SUBROUTINE
END
