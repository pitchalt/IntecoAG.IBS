* >Natural Source Header 000000 /*<RO>>
* :NatName SNAVZK
* :UID IEN
* :Mode S
* :CP
* :Date 20001019
* :Time 1658330
* <Natural Source Header /*<<RO>
********************************
* бедемхе йндхтхйюрнпю гюйюгнб *
********************************
DEFINE DATA
*  GLOBAL USING UFROG       /* цкнаюкэмше оепелеммше дкъ бяеи яхярелш
PARAMETER USING PRMNAVI
*
  LOCAL  USING LCLZKL     /* VIEW мю тюик ZAKAZ
  LOCAL  USING LCLFROL1      /* наыхе оепелеммше
  LOCAL  USING PRMHELP
  LOCAL
    1 SELFUN(A60) INIT<'йНДХТХЙЮРНП ГЮЙЮГНБ'>
    1 SELREG(A40)
    1 INPUT-REC(A020/1:15)
    1 REDEFINE INPUT-REC
      2 #INPUT-REC(15)
* онкъ мебшбндхлше мю щйпюм
        3 FIELD-FF  (B001) /* ткюц хглемемхъ/сдюкемхъ гюохях
        3 FIELD-ISN (P007) /* ISN гюохях
        3 FIELD-UP  (A001) /* ткюц гюыхрш гюохях
* онкъ бшбндхлше мю щйпюм
        3 #FIELD-01 (A009)      /* гюйюг
        3 REDEFINE #FIELD-01
          4 #FIELD-01-A(A009)
        3 #FIELD-02 (N005)      /* явер
* дхмюлхвеяйхе юрпхасрш дкъ бшбндхлшу онкеи
    1 #FIELD-01C (C/1:15)
    1 #FIELD-02C (C/1:15)
*
* ярпсйрспю щкелемрю ярейю я дюммшлх
*
    1 STEK-REC(A20)
    1 REDEFINE STEK-REC
      2 STEK-FF(B01)
      2 STEK-ISN(P07)
      2 STEK-UP(A01)
*
      2 STEK-01(A09)
      2 STEK-02(N05)
    1 #ZK(A09)                /*  гюйюг
    1 #BS(N05)                /*  явер
*
END-DEFINE
*
SET KEY PF1 PF2 PF3 PF4 PF5 PF6 PF7 PF8 PF9 PF10 PF11 PF12
INCLUDE CCASKOG
*
MOVE 3   TO N-DATA N-DATA-B     /* мнлеп ярейю я дюммшлх
MOVE 20  TO L-DATA L-DATA-B     /* дкхмю щкелемрю б ярейе я дюммшлх
MOVE 1000 TO Q-DATA Q-DATA-B    /* йнкхвеярбн щкелемрнб б ярейе я дюммшлх
*
MOVE 4   TO N-DEL  N-DEL-B      /* мнлеп ярейю я ISN сдюкеммшу гюохяеи
MOVE 4   TO L-DEL  L-DEL-B      /* дкхмю щкелемрю б ярейе я ISN
MOVE 1000 TO Q-DEL  Q-DEL-B      /* йнкхвеярбн щкелемрнб б ярейе я ISN
*
ASSIGN Q-FIELD = 2          /* онкеи б ярпнйе
ASSIGN Q-LINE = 15          /* ярпнй мю щйпюме
ASSIGN F-LINE = 6           /* ялеыемхе оепбни ярпнйх
ASSIGN T-KEY = 7            /* мювюкэмюъ онгхжхъ йкчвебнцн юрпхасрю
ASSIGN L-KEY = 9            /* дкхмю йкчвебнцн юрпхасрю
ASSIGN P-INPUT(1,1) = 33
ASSIGN P-INPUT(2,1) = 45
ASSIGN P-INPUT(1,2) = 9
ASSIGN P-INPUT(2,2) = 5
*
ASSIGN P-STEK(1,1) = 7
ASSIGN P-STEK(2,1) = 16
ASSIGN P-STEK(1,2) = 9
ASSIGN P-STEK(2,2) = 5
*
* нямнбмни жхйк
*
REPEAT
  INPUT USING MAP 'MAPZKM1'
*
  IF *PF-KEY = 'PF1'
    INCLUDE CCHELP '40'
    ESCAPE TOP
  END-IF
*
  INCLUDE CCUFRO51
  ASSIGN C-CURS = 1           /* ярпнйю я йспянпнл
*
  INCLUDE CCUFRO1
* IF #ZK = ' ' AND #BS = 0  REINPUT 'гюйюг хкх явер' ALARM  END-IF
  REPEAT
*
    RESET #FIELD-01(*) #FIELD-02(*)
*
    PERFORM ARRY-PROC
*
*   INPUT MARK *#FIELD-01(C-CURS) USING MAP 'MAPZKM2'
    INPUT MARK   F-MARK           USING MAP 'MAPZKM2'
*   COMPUTE C-CURS = *CURS-LINE - F-LINE               /* SZV
*
  IF *PF-KEY = 'PF1'
    INCLUDE CCHELP '41'
    ESCAPE TOP
  END-IF
*
 INCLUDE CCUFRO2                       /* напюанрйю от
*
IF *PF-KEY = 'PF2'
  CALLNAT 'SNAVZK0' PRMNAV    /*  гюйюгш - ондпюгдекемхъ
  INCLUDE CCRFUNNM
  END-IF
*
 END-REPEAT
END-REPEAT
*
INCLUDE CCUFRO53
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* времхе дюммшу хг IBS-SYS-FILE б ярей я дюммшлх
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE LOAD-PROC
*
  ASSIGN C-DATA = 0
  IF #ZK NE ' '
*   FIND ZAKAZ OG-F = OG-IDENT-G AND ZK-F = #ZK
    FIND ZAKAZ ZK-F = #ZK  AND BS-F NE 0
      ASSIGN C-DATA = *COUNTER
      IF C-DATA > Q-DATA THEN ESCAPE BOTTOM END-IF
*
      ASSIGN STEK-FF  = H'00'
      ASSIGN STEK-ISN = *ISN
*
      ASSIGN STEK-01 = ZK-F
      ASSIGN STEK-02 = BS-F
*
      ASSIGN C-DATA-B = C-DATA
      CALL 'RWSX' C-DATA-B STEK-REC WR-REC N-DATA-B
*
    END-FIND
*   ELSE
    END-IF
    IF #BS NE 0
*   FIND ZAKAZ OG-F = OG-IDENT-G AND BS-F = #BS
    FIND ZAKAZ  BS-F = #BS AND  ZK-F NE ' '
      ASSIGN C-DATA = *COUNTER
      IF C-DATA > Q-DATA THEN ESCAPE BOTTOM END-IF
*
      ASSIGN STEK-FF  = H'00'
      ASSIGN STEK-ISN = *ISN
*
      ASSIGN STEK-01 = ZK-F
      ASSIGN STEK-02 = BS-F
*
      ASSIGN C-DATA-B = C-DATA
      CALL 'RWSX' C-DATA-B STEK-REC WR-REC N-DATA-B
*
    END-FIND
  END-IF
    IF #BS =  0 AND #ZK = ' '
*   FIND ZAKAZ OG-F = OG-IDENT-G AND BS-F = #BS
    FIND ZAKAZ  BS-F NE 0 AND ZK-F NE ' '
      ASSIGN C-DATA = *COUNTER
      IF C-DATA > Q-DATA THEN ESCAPE BOTTOM END-IF
*
      ASSIGN STEK-FF  = H'00'
      ASSIGN STEK-ISN = *ISN
*
      ASSIGN STEK-01 = ZK-F
      ASSIGN STEK-02 = BS-F
*
      ASSIGN C-DATA-B = C-DATA
      CALL 'RWSX' C-DATA-B STEK-REC WR-REC N-DATA-B
*
    END-FIND
  END-IF
*
  ASSIGN MAX-EL(N-DATA)   = C-DATA
  ASSIGN FIRST-EL(N-DATA) = 1
  ASSIGN MAX-EL(N-DEL)    = 0
*
END-SUBROUTINE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* опнжедспю опнбепйх дюммшу щйпюмю
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CHECK-PROC
*
FOR C-LINE = 1 TO Q-LINE /* опнялюрпхбюел ярпнйх щйпюмю
*
  IF #FIELD-01(C-LINE) NE ' '  THEN            /* ярпнйю ме сдюкемю
    EXAMINE #FIELD-01-A(*) #FIELD-01-A(C-LINE) WITH DELIMITERS ' '
    GIVING NUMBER C-DUBL
    IF C-DUBL > 1 THEN
      REINPUT'дсакхпнбюмхе хдемрхтхйюрнпю мю щйпюме'
      MARK *#FIELD-01(C-LINE) ALARM
    END-IF
*
    RESET C-DATA-B
    COMPUTE C-DATA2 = FIRST-EL(N-DATA) + Q-LINE - 1
    REPEAT
      ASSIGN C-DATA1-B = T-KEY
      ASSIGN C-DATA2-B = L-KEY
      CALL 'CMPX' #FIELD-01(C-LINE)
      C-DATA1-B C-DATA2-B N-DATA-B C-DATA-B
      IF C-DATA1-B = H'00000000' THEN ESCAPE BOTTOM END-IF
      ASSIGN C-DATA1 = C-DATA1-B
      IF NOT(C-DATA1 = FIRST-EL(N-DATA) THRU C-DATA2) THEN
        REINPUT'дсакхпнбюмхе хдемрхтхйюрнпю б люяяхбе'
        MARK *#FIELD-01(C-LINE) ALARM
      END-IF
      !0.ASSIGN C-DATA-B = C-DATA1-B
    END-REPEAT
    COMPUTE C-DATA = FIRST-EL(N-DATA) + C-LINE - 1
    ASSIGN C-DATA-B = C-DATA
    CALL 'RWSX' C-DATA-B STEK-REC RD-REC N-DATA-B
     IF STEK-REC NE ' '
        IF STEK-ISN NE 0
*          FIND ZAKAZ OG-F = OG-IDENT-G AND ZK-F = #FIELD-01(C-LINE)
           FIND ZAKAZ  ZK-F = #FIELD-01(C-LINE)
             !1.IF *ISN(!0) NE STEK-ISN
                REINPUT'дсакхпнбюмхе хдемрхтхйюрнпю б тюике'
                MARK *#FIELD-01(C-LINE) ALARM
             END-IF
           END-FIND
        END-IF
       IF STEK-ISN = 0 AND STEK-01 NE #FIELD-01(C-LINE)
*          FIND ZAKAZ OG-F = OG-IDENT-G AND ZK-F = #FIELD-01(C-LINE)
           FIND NUMBER ZAKAZ  ZK-F = #FIELD-01(C-LINE)
             IF *NUMBER(!1) > 0
                !2.REINPUT'дсакхпнбюмхе хдемрхтхйюрнпю б тюике'
                MARK *#FIELD-01(C-LINE) ALARM
             END-IF
*          END-FIND
       END-IF
     END-IF
     IF STEK-REC = ' '
*      FIND ZAKAZ OG-F = OG-IDENT-G AND ZK-F = #FIELD-01(C-LINE)
       FIND NUMBER ZAKAZ  ZK-F = #FIELD-01(C-LINE)
         IF *NUMBER(!2) > 0
            REINPUT'дсакхпнбюмхе хдемрхтхйюрнпю б тюике'
            MARK *#FIELD-01(C-LINE) ALARM
         END-IF
*      END-FIND
     END-IF
    IF #FIELD-02(C-LINE) = 0
      REINPUT 'явер' MARK *#FIELD-02(C-LINE) ALARM
    END-IF
    ELSE                                          /* ярпнйю сдюкемю
    IF C-DATA > MAX-EL(N-DATA) THEN ESCAPE BOTTOM END-IF
  END-IF
*
END-FOR
*
END-SUBROUTINE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* опнжедспю хглемемхъ дюммшу
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE UPD-PROC
*
  ASSIGN OS-FK-G = 'P'         /* ме оепегюцпсфюрэ йндхтхйюрнпш
*
FOR C-DEL 1 TO MAX-EL(N-DEL)
  ASSIGN C-DEL-B = C-DEL
  CALL 'RWSX' C-DEL-B STEK-ISN RD-REC N-DEL-B
  GET ZAKAZ STEK-ISN
  DELETE
END-FOR
*
FOR C-DATA 1 TO MAX-EL(N-DATA)
*
  ASSIGN C-DATA-B = C-DATA
  CALL 'RWSX' C-DATA-B STEK-REC RD-REC N-DATA-B
*
  IF STEK-FF = H'01' THEN
*
    IF STEK-ISN NE 0 THEN GET ZAKAZ STEK-ISN END-IF
*
    ASSIGN ZAKAZ.OG-F = OG-IDENT-G
    ASSIGN ZAKAZ.ZK-F = STEK-01
    ASSIGN ZAKAZ.BS-F = STEK-02
*
    IF STEK-ISN NE 0  /* гюахрн он опняэае опнхгб.цп,р.й юпухб гюйюгнб
      THEN UPDATE     /* бедеряъ вепег ASRZ
      ELSE STORE ZAKAZ
    END-IF
*
  END-IF
*
  END OF TRANSACTION
*
END-FOR
*
END-SUBROUTINE
END
