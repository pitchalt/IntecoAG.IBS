* >Natural Source Header 000000 /*<RO>>
* :NatName SELTIP
* :UID IEN
* :Mode S
* :CP
* :Date 20001019
* :Time 1646330
* <Natural Source Header /*<<RO>
DEFINE DATA
  PARAMETER
    1 OG_IDENT_G     (N005)
    1 TIP            (N005)
  LOCAL  USING LCLMATT     /* VIEW HA ÔAÉË ASUM-SYS-FILE
  LOCAL  USING LCLFROL1      /* OÁÙÈE ÏEPEMEHHÛE
  LOCAL  USING LCLAGLOB
  LOCAL  USING LCLSTAKD
  LOCAL
    1 INPUT-REC      (A40/12)
    1 REDEFINE INPUT-REC
      2 #INPUT-REC   (12)
        3 #FIELD-01  (N005)      /* KOÄ
        3 #FIELD-02  (A035)      /* OÁOÇHA×EHÈE
    1 STEK-REC       (A040)
    1 REDEFINE STEK-REC
      2 STEK-01      (N005)
      2 STEK-02      (A035)
    1 KEY1           (A007)      /*  ÏOÈCKOBÛÉ KËÞ× HA×AËÜHÛÉ
    1 REDEFINE KEY1
      2 KEYOG1       (N005)      /*  KOÄ
      2 KEYKD1       (A002)      /*  METKA
    1 POSIT          (I004)
    1 MRK            (A1/12)
    1 MRK-C          (C/12)  INIT ALL <(AD=PN)>
    1 SHOW_PROGRESS_BAR (L)  INIT <TRUE>
    1 KOLPR          (N002)
    1 CMD            (A128)
    1 REDEFINE CMD
      2 KOD_MAT_TMP  (A022)
    1 NAME_OF_MODULE (A008)
END-DEFINE
  SET KEY PF3 PF7 PF8 PF9 PF10 PF11
  DEFINE WINDOW ATTR_WIND
    SIZE 20 * 50
    BASE 03 / 25
    TITLE 'Cïècoê òèïoâ ìaòepèaëoâ '
    CONTROL SCREEN
  SET CONTROL 'E=ON'
  INCLUDE CCINITPR
*
  MOVE 1    TO N-DATA N-DATA-B    /* HOMEP CTEKA C ÄAHHÛMÈ
  MOVE 40   TO L-DATA L-DATA-B    /* ÄËÈHA ÝËEMEHTA B CTEKE C ÄAHHÛMÈ
  MOVE 1000 TO Q-DATA Q-DATA-B    /* KOË-BO ÝËEMEHTOB B CTEKE C ÄAHHÛMÈ
*
  ASSIGN Q-LINE = 12          /* CTPOK HA ÝKPAHE
  ASSIGN T-KEY = 1            /* HA×AËÜHAß ÏOÇÈÖÈß KËÞ×EBOÃO ATPÈÁÓTA
  ASSIGN L-KEY = 5            /* ÄËÈHA KËÞ×EBOÃO ATPÈÁÓTA
*
  ASSIGN KEYOG1 = OG_IDENT_G
  MOVE 'TM' TO KEYKD1
*
  CALL 'GTSX' L-DATA-B Q-DATA-B N-DATA-B /* CTEK C ÄAHHÛMÈ
  CALL 'NULX' ' '  N-DATA-B
*
  PERFORM LOAD-PROC
  ASSIGN C-DATA1-B = T-KEY
  ASSIGN C-DATA2-B = L-KEY
  CALL 'SRTX' C-DATA1-B C-DATA2-B N-DATA-B
  SET WINDOW 'ATTR_WIND'
  REPEAT
    RESET #FIELD-01(*) #FIELD-02(*)
    RESET INITIAL MRK-C(*)
    PERFORM ARRY-PROC
    INPUT MARK POSIT USING MAP 'MAPTIPM'
    POSIT := *CURS-FIELD
    FOR C-CURS 1 Q-LINE
      IF POSIT = POS(MRK(C-CURS))  ESCAPE BOTTOM  END-IF
    END-FOR
    DECIDE FOR EVERY CONDITION
      WHEN *PF-KEY = 'PF3'
        ESCAPE BOTTOM
      WHEN *PF-KEY = 'PF7'
        RESET POSIT
        COMPUTE FIRST-EL(N-DATA) = FIRST-EL(N-DATA) - Q-LINE
        IF FIRST-EL(N-DATA) <= 0  FIRST-EL(N-DATA) := 1 END-IF
      WHEN *PF-KEY = 'PF8'
        RESET POSIT
        COMPUTE C-DATA1 = FIRST-EL(N-DATA) + Q-LINE
        IF C-DATA1 <= MAX-EL(N-DATA)
          COMPUTE FIRST-EL(N-DATA) = C-DATA1
        END-IF
      WHEN *PF-KEY = 'PF9'
        RESET POSIT
        ASSIGN FIRST-EL(N-DATA) = 1
      WHEN *PF-KEY = 'PF10'
        RESET POSIT
        ASSIGN FIRST-EL(N-DATA) = MAX-EL(N-DATA)
      WHEN *PF-KEY = 'PF11' AND C-CURS = 1 THRU Q-LINE
        TIP := #FIELD-01(C-CURS)
        ESCAPE BOTTOM
      WHEN NONE IGNORE
    END-DECIDE
  END-REPEAT
  SET WINDOW OFF
  CALL 'FRSX' N-DATA-B
  RESET MAX-EL(N-DATA) COU-EL(N-DATA)
  ESCAPE ROUTINE
*
DEFINE SUBROUTINE ARRY-PROC
  ASSIGN C-DATA = FIRST-EL(N-DATA)
  FOR C-LINE = 1 TO Q-LINE
    IF C-DATA > MAX-EL(N-DATA) ESCAPE BOTTOM END-IF
    ASSIGN C-DATA-B = C-DATA
    CALL 'RWSX' C-DATA-B INPUT-REC(C-LINE) RD-REC N-DATA-B
    MOVE (AD=I) TO MRK-C(C-LINE)
    ADD 1 TO C-DATA
  END-FOR
END-SUBROUTINE
*
DEFINE SUBROUTINE LOAD-PROC
  ASSIGN C-DATA = 0
  FIND ASUM-MATT  TP-Z = KEY1
    INCLUDE CCPROCF
    COMPUTE C-DATA = C-DATA + 1
    IF C-DATA > Q-DATA  ESCAPE BOTTOM END-IF
    ASSIGN STEK-01 = KD-F
    MOVE NAMEMAT TO STEK-02
    ASSIGN C-DATA-B = C-DATA
    CALL 'RWSX' C-DATA-B STEK-REC WR-REC N-DATA-B
  END-FIND
  ASSIGN MAX-EL(N-DATA)   = C-DATA
  ASSIGN FIRST-EL(N-DATA) = 1
END-SUBROUTINE
INCLUDE CCERIN1
END
