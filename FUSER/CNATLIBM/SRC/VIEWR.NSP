* >Natural Source Header 000000 /*<RO>>
* :NatName VIEWR
* :UID MSA
* :Mode S
* :CP
* :Date 20051111
* :Time 1758330
* <Natural Source Header /*<<RO>
*
* ПРОСМОТР записей
*
DEFINE DATA
  LOCAL USING IBS-RECL
  LOCAL USING STEKL
  LOCAL
  1 #KS(N5)
  1 #OG(N5) INIT < 1000 >
  1 IOP(N5)  1 #OS(N5)  1 ISY(A8)  1 IUS(A8)
  1 DT1(D)  1 DT2(D)  1 TM1(T)  1 TM2(T)
*
  1 INPUT-REC(A71/8)
  1 REDEFINE INPUT-REC
    2 #INPUT-REC(8)
      3 #DT(N8)  3 #ND(N6)  3 #OP(N5)  3 #SU(N13.2)  3 #US(A8)
      3 CRT(N5)  3 DBT(N5)  3 DTR(D)  3 TMR(T)  3 #SY(A8)
  1 FUN-NM-G (A060) INIT < 'Просмотр проводок' >
  1 SYS-NM-G (A060) INIT < 'ИБС' >
  1 C-CTR(C/8)
  1 LEN-ST(B4) INIT < 71 >
  1 X1(B4)
END-DEFINE
SET KEY ALL
CALL 'GTNX' XN1
XI := 1000  CALL 'GTSX' LEN-ST XI XN1
DT1 := DT2 := *DATX  TM1 := TM2 := *TIMX
C-CTR(*) := (AD=PD)  RESET C-CTR(1)
REPEAT
  INPUT USING MAP 'VIEWRM1'
  DECIDE FOR EVERY CONDITION
    WHEN *PF-KEY = 'PF3'  ESCAPE BOTTOM
    WHEN #OG = 0  REINPUT 'Организаци ' MARK *#OG ALARM
    WHEN DT1 = 0  REINPUT 'Дата' MARK *DT1 ALARM
    WHEN DT2 = 0  DT2 := DT1
    WHEN DT2 < DT1  REINPUT 'Интервал' MARK *DT2 ALARM
    WHEN TM1 = 0  REINPUT 'Врем ' MARK *TM1 ALARM
    WHEN TM2 = 0  TM2 := TM1
    WHEN TM2 < TM1  REINPUT 'Интервал' MARK *TM2 ALARM
    WHEN NONE  IGNORE
  END-DECIDE
  CALL 'NULX' ' ' XN1  RESET IS1
  FIND IBS-REC-FILE UP-DT = DT1 THRU DT2
    ACCEPT IF KD-F = #OG AND
    #KS = 0 OR = KS-F AND IOP = 0 OR = OP-ID AND #OS = 0 OR = OS-F
    AND ISY = ' ' OR = SY-F AND UP-TM = TM1 THRU TM2
    ADD 1 TO IS1
    IF IS1 > 1000  FUN-NM-G := 'Отобрана перва  1000 проводок'
      ESCAPE BOTTOM
    END-IF
    XI := IS1  #DT(1) := DT-ID  #ND(1) := ND-ID  #OP(1) := OP-ID
    #SU(1) := SU-F  #US(1) := UP-II  #SY(1) := SY-F
    IF BO-F = 3   CRT(1) := KS-F  DBT(1) := OS-F
      ELSE  CRT(1) := OS-F  DBT(1) := KS-F
    END-IF
    DTR(1) := UP-DT  TMR(1) := UP-TM
    CALL 'RWSX' XI INPUT-REC(1) XW XN1
  END-FIND
  IF IS1 = 0  REINPUT 'Нет данных' ALARM  END-IF
  #N := 1
  REPEAT
    #L := 0  #K := #N + 7
    FOR #I #N #K
      ADD 1 TO #L
      IF #I <= IS1  XI := #I  CALL 'RWSX' XI INPUT-REC(#L) XR XN1
        ELSE RESET INPUT-REC(#L) XW XN1
      END-IF
    END-FOR
    INPUT USING MAP 'VIEWRM2'
    IF *PF-KEY = 'PF3'  ESCAPE BOTTOM  END-IF
    IF *PF-KEY = 'PF9' OR = 'PF12'  #N := 1  END-IF
    IF *PF-KEY = 'PF7' AND #N > 8  ADD -8 TO #N  END-IF
    IF *PF-KEY = 'PF8' AND #K < IS1  ADD 8 TO #N  END-IF
    IF *PF-KEY = 'PF10' AND IS1 > 8  #N := IS1 - 7  END-IF
    IF *PF-KEY = 'PF12'  RESET XI
      DECIDE FOR FIRST CONDITION
        WHEN *CURS-FIELD = POS(#DT(1))  XI := 1  X1 := 8
        WHEN *CURS-FIELD = POS(#ND(1))  XI := 9  X1 := 6
        WHEN *CURS-FIELD = POS(#OP(1))  XI := 15  X1 := 5
        WHEN *CURS-FIELD = POS(#SU(1))  XI := 20  X1 := 15
        WHEN *CURS-FIELD = POS(#US(1))  XI := 35  X1 := 8
        WHEN *CURS-FIELD = POS(CRT(1))  XI := 43  X1 := 5
        WHEN *CURS-FIELD = POS(DBT(1))  XI := 48  X1 := 5
        WHEN *CURS-FIELD = POS(DTR(1))  XI := 53  X1 := 4
        WHEN *CURS-FIELD = POS(TMR(1))  XI := 57  X1 := 7
        WHEN *CURS-FIELD = POS(#SY(1))  XI := 64  X1 := 8
        WHEN NONE  IGNORE
      END-DECIDE
      IF XI NE 0  CALL 'SRTX' XI X1 XN1  END-IF
    END-IF
  END-REPEAT
END-REPEAT
CALL 'FRSX' XN1
END
