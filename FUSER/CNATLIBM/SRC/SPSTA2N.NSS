* >Natural Source Header 000000 /*<RO>>
* :NatName SPSTA2N
* :UID IEN
* :Mode S
* :CP
* :Date 20001019
* :Time 1730330
* <Natural Source Header /*<<RO>
/********************************************
/*                                          *
/*         Преобразование статьи            *
/*            STRING -> ARRAY               *
/*                                   TNA    *
/********************************************
DEFINE DATA
 PARAMETER USING PRMSELSV
 LOCAL USING PRMCOMM
 LOCAL USING LCLSTAT
 LOCAL USING PRMSELSS
/* LOCAL USING LCLMSGL
 LOCAL
1 ERRORID(I4)
1 KEYSTTM(A16)
1 REDEFINE KEYSTTM
  2 KEYOG(N5)
  2 KEYST(A5)
  2 KEYCD(N6)
1 MAXRES(I4)
1 STRUCTLEVSTR(30)
  2 LEVSTR(A10)
  2 REDEFINE LEVSTR
    3 LEVSTRA(A1/1:10)
1 TMPREM(A50)
1 REDEFINE TMPREM
  2 STRA(A1/1:50)
1 I(I4)
1 K(I4)
1 N(I4)
1 PREVSTR(A1)
1 NUMLEV(I4)
1 TMPLEV(I4/1:15)
1 PREVPOINT(A1)
1 PREVFILLER(A1)
1 SSHORT(A5)
END-DEFINE
DEFINE SUBROUTINE SPSTA2N
 INCLUDE CCSETER 'PRMSELSV' 'FALSE' '2' ;
 IF NOT(PRMSELSV.OG_ID EQ 1 THRU 99999) THEN
  INCLUDE CCSETER 'PRMSELSV' 'FALSE' '1' ;
  ESCAPE ROUTINE
 END-IF
 RESET PARCOMM ;
 PARCOMM.OG_ID := PRMSELSV.OG_ID
 PERFORM SPSTCOMM PARCOMM ;
 IF NOT PARCOMM.RESULT OR PARCOMM.RESULT_ID NE 0 THEN
  INCLUDE CCSETER 'PRMSELSV' 'FALSE' 'PARCOMM.RESULT_ID' ;
  ESCAPE ROUTINE
 END-IF
 RESET SELSSPAR ;
 SELSSPAR.SEL_OG := PRMSELSV.OG_ID
 SELSSPAR.SEL_SS := PRMSELSV.SS_ID
 CALLNAT 'SBCHKSS' SELSSPAR ;
 IF SELSSPAR.SEL_SS EQ 0 THEN
   INCLUDE CCSETER 'PRMSELSV' 'FALSE' '5' ;
   ESCAPE ROUTINE
 END-IF
 IF SELSSPAR.CS_NN EQ 0 THEN
  IF SELSSPAR.SEL_BS EQ 0 THEN
    INCLUDE CCSETER 'PRMSELSV' 'FALSE' '5' ;
    ESCAPE ROUTINE
   ELSE
    SELSSPAR.SEL_SS := 0
    CALLNAT 'SBCHKSS' SELSSPAR ;
  END-IF
 END-IF
 IF SELSSPAR.CS_NN EQ 0 THEN
   INCLUDE CCSETER 'PRMSELSV' 'FALSE' '13' ;
  ESCAPE ROUTINE
 END-IF
 TMPREM := PRMSELSV.STAT_A
 FOR I = 50 TO 1 STEP -1
  IF STRA(I) NE ' ' THEN ESCAPE BOTTOM END-IF
 END-FOR
 IF I > 1 THEN
  IF STRA(1:I) EQ ' ' THEN
   INCLUDE CCSETER 'PRMSELSV' 'TRUE' '0' ;
   ESCAPE ROUTINE
  END-IF
 END-IF
 INCLUDE CCSETER 'PRMSELSV' 'FALSE' '16' ;
 SEPARATE PRMSELSV.STAT_A LEFT JUSTIFIED INTO LEVSTR(*)
 REMAINDER TMPREM WITH RETAINED DELIMITERS GIVING NUMBER IN MAXRES ;
 INCLUDE CCSETER 'PRMSELSV' 'FALSE' '2' ;
 IF TMPREM NE ' ' THEN
  INCLUDE CCSETER 'PRMSELSV' 'FALSE' '18' ;
  ESCAPE ROUTINE
 END-IF
 IF PRMSELSV.STAT_A EQ ' ' OR MAXRES < 1 THEN
  INCLUDE CCSETER 'PRMSELSV' 'FALSE' '17' ;
  ESCAPE ROUTINE
 END-IF
 I := MAXRES / 2 ;
 I := MAXRES - I * 2;
 IF I NE 1 THEN
  INCLUDE CCSETER 'PRMSELSV' 'FALSE' '19' ;
  ESCAPE ROUTINE
 END-IF
*
 FOR I = 1 TO MAXRES
  IF LEVSTR(I) EQ ' ' THEN
   N := I + 1
   FOR K = N TO MAXRES
    LEVSTR(K - 1) := LEVSTR(K)
    LEVSTR(K) := ' '
   END-FOR
   ADD -1 TO MAXRES
  END-IF
 END-FOR
 PREVSTR := 'P' ;
 PREVPOINT := ' ' ;
 PREVFILLER := PARCOMM.FILL ;
 NUMLEV := 0
 FOR I = 1 TO MAXRES
  IF LEVSTR(I) IS (N9) AND LEVSTRA(I,1) NE '.' THEN
    IF PREVSTR NE 'P' THEN
     INCLUDE CCSETER 'PRMSELSV' 'FALSE' '20' ;
     ESCAPE ROUTINE
    END-IF
    PREVSTR := 'N'
    ADD 1 TO NUMLEV ;
    TMPLEV(NUMLEV) := VAL(LEVSTR(I));
   ELSE
    IF LEVSTRA(I,2:10) NE ' ' THEN
     INCLUDE CCSETER 'PRMSELSV' 'FALSE' '21' ;
     ESCAPE ROUTINE
    END-IF
    IF PREVSTR EQ 'P' THEN
      DECIDE FOR FIRST CONDITION
       WHEN I EQ 1
        PREVFILLER := LEVSTRA(I,1)
        PREVSTR := 'F'
        ADD 1 TO NUMLEV ;
        TMPLEV(NUMLEV) := 0;
       WHEN I > 1 AND I < MAXRES
        IF LEVSTR(I + 1) IS (N9) AND LEVSTRA(I + 1,1) NE '.' THEN
          INCLUDE CCSETER 'PRMSELSV' 'FALSE' '20' ;
          ESCAPE ROUTINE
         ELSE
          IF PREVFILLER EQ ' ' THEN
            PREVFILLER := LEVSTRA(I,1)
            PREVSTR := 'F'
            ADD 1 TO NUMLEV ;
            TMPLEV(NUMLEV) := 0;
           ELSE
            IF PREVFILLER NE LEVSTRA(I,1) THEN
              INCLUDE CCSETER 'PRMSELSV' 'FALSE' '22' ;
              ESCAPE ROUTINE
             ELSE
              PREVSTR := 'F'
              ADD 1 TO NUMLEV ;
              TMPLEV(NUMLEV) := 0;
            END-IF
          END-IF
        END-IF
       WHEN I EQ MAXRES
        IF PREVFILLER EQ ' ' THEN
          PREVFILLER := LEVSTRA(I,1)
          PREVSTR := 'F'
          ADD 1 TO NUMLEV ;
          TMPLEV(NUMLEV) := 0;
         ELSE
          IF PREVFILLER NE LEVSTRA(I,1) THEN
            INCLUDE CCSETER 'PRMSELSV' 'FALSE' '22' ;
            ESCAPE ROUTINE
           ELSE
            PREVSTR := 'F'
            ADD 1 TO NUMLEV ;
            TMPLEV(NUMLEV) := 0;
          END-IF
        END-IF
       WHEN NONE
        INCLUDE CCSETER 'PRMSELSV' 'FALSE' '17' ;
        ESCAPE ROUTINE
      END-DECIDE
     ELSE
      IF PREVSTR EQ 'N' OR EQ 'F' THEN
        IF PREVPOINT EQ ' ' THEN
          PREVSTR := 'P'
          PREVPOINT := LEVSTRA(I,1)
         ELSE
          IF PREVPOINT NE LEVSTRA(I,1) THEN
            INCLUDE CCSETER 'PRMSELSV' 'FALSE' '23' ;
            ESCAPE ROUTINE ;
           ELSE
            PREVSTR := 'P'
          END-IF
        END-IF
       ELSE
        INCLUDE CCSETER 'PRMSELSV' 'FALSE' '17' ;
        ESCAPE ROUTINE
      END-IF
    END-IF
  END-IF
 END-FOR
 IF SELSSPAR.CS_NN NE NUMLEV THEN
  INCLUDE CCSETER 'PRMSELSV' 'FALSE' '24' ;
  ESCAPE ROUTINE
 END-IF
 IF MAXRES > 1 AND PREVPOINT NE PARCOMM.POINT THEN
  INCLUDE CCSETER 'PRMSELSV' 'FALSE' '25' ;
  ESCAPE ROUTINE
 END-IF
 IF PREVFILLER NE PARCOMM.FILL THEN
  INCLUDE CCSETER 'PRMSELSV' 'FALSE' '26' ;
  ESCAPE ROUTINE
 END-IF
 PRMSELSV.N_LEV           := NUMLEV
 PRMSELSV.CODE(1:NUMLEV)  := TMPLEV(1:NUMLEV)
 PRMSELSV.SHORT(1:NUMLEV) := SELSSPAR.ST_F(1:NUMLEV)
 FOR I = 1 TO NUMLEV
  IF PRMSELSV.CODE(I) > 0 THEN
   KEYSTTM.KEYOG := PRMSELSV.OG_ID
   KEYSTTM.KEYST := PRMSELSV.SHORT(I)
   KEYSTTM.KEYCD := PRMSELSV.CODE(I)
   FIND (1) VIEWSTAT OG-ST EQ KEYSTTM
    PRMSELSV.NAME(I) := VIEWSTAT.NM-OG
   END-FIND
  END-IF
 END-FOR
 IF PRMSELSV.RESULT_ID = 2 THEN
  INCLUDE CCSETER 'PRMSELSV' 'TRUE' '0' ;
 END-IF
ON ERROR
 ESCAPE ROUTINE
END-ERROR
END-SUBROUTINE
END
