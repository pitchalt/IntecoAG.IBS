* >Natural Source Header 000000 /*<RO>>
* :NatName CSLDOC-I
* :UID INTECO
* :Mode S
* :CP
* :Date 20090910
* :Time 1107330
* <Natural Source Header /*<<RO>
*****************************************
* ОБРАБОТКА ПАРАМЕТРОВ ОТБОРА ДОКУМЕНТОВ
*****************************************
DEFINE DATA
PARAMETER USING CSLDOC-P
PARAMETER USING CSLDOCP1
PARAMETER
1 OG-USER(N5)
1 N-DOC-B(B4)
1 M-DOC(P7)
LOCAL USING LCLADSDG
LOCAL USING CSLDOCL
LOCAL
1 TX-PF5(A8)   INIT <'Добавить'>
1 TX-PF10(A8)
1 CCC(I4)
1 MSG(A50)
1 NM-TY(A50)
1 REDEFINE NM-TY
  2 NM-VO(A30)
1 DOC-DD(D)
1 DOP-DD(D)
1 I(P7)
1 J(I4)
1 L-DOC-B(B4)  INIT <H'00000010'>
1 Q-DOC-B(B4)
1 COL-ADD(P3)  INIT <200>
1 N_RELOADST(P7)
1 I_RELOADST(P7)
1 WLINE(A16)
1 FLG(P7)
1 FLG-V(N1)
END-DEFINE
DEFINE WINDOW WIN1
SIZE 13 * 60
BASE 5 / 10
TITLE 'ВЫБОР ДОКУМЕНТА'
CONTROL SCREEN
*
SET KEY PF3 PF11
IF FUN = 'WR' SET KEY PF5
   ELSE RESET TX-PF5 SET KEY PF5 = OFF END-IF
RESET DOC-IND DOC-NN(*) M-DOC
IF *PF-KEY = 'PF2' THEN
   FLG-V := 1 SET CONTROL 'K0'
ELSE
   IF DOC-TYP NE ' ' THEN INP-TYP := DOC-TYP FLG := 1 END-IF
   IF DOC-NM(1) NE ' ' THEN INP-NM := DOC-NM(1) FLG := 1 END-IF
   IF DOC-NM(2) NE ' ' THEN INP-DOP := DOC-NM(2) FLG := 1 END-IF
   IF DOC-NM(3) NE ' ' THEN INP-ET := DOC-NM(3) FLG := 1 END-IF
   IF DOC-OGZ NE 0 THEN INP-OGZ := DOC-OGZ FLG := 1 END-IF
   IF DOC-OGI NE 0 THEN INP-OGI := DOC-OGI FLG := 1 END-IF
   IF DOC-DT(1) NE 0 THEN INP-DT := DOC-DT(1) FLG := 1 END-IF
   IF DOC-DT(2) NE 0 THEN INP-DOP-DT := DOC-DT(2) FLG := 1 END-IF
   IF *PF-KEY = 'PF11' THEN FLG-V := 1 END-IF
   IF FLG = 1 THEN SET CONTROL 'N' END-IF
END-IF
REPEAT
SET WINDOW 'WIN1'
IF MSG = ' ' THEN
INPUT MARK CCC USING MAP 'CSLDOCM1'
ELSE
INPUT WITH TEXT MSG MARK CCC ALARM USING MAP 'CSLDOCM1'
END-IF
SET WINDOW OFF
CCC := *CURS-FIELD RESET MSG
*
DECIDE ON EVERY VALUES *PF-KEY
VALUES 'PF3'
  ESCAPE BOTTOM
VALUES 'PF11'
  IF CCC = POS(INP-TYP)
     CALLNAT 'VIEW-TY' INP-TYP NM-TY
  END-IF
  IF CCC = POS(INP-OGI) THEN
     CALLNAT 'SELVON' OG-USER INP-OGI NM-VO END-IF
  IF CCC = POS(INP-OGZ) THEN
     CALLNAT 'SELVON' OG-USER INP-OGZ NM-VO END-IF
  ESCAPE TOP
VALUES 'ENTR'
  IF INP-DT NE 0 THEN
     IF INP-DT = MASK(0) OR INP-DT NE MASK(YYYYMMDD) OR
        INP-DT < 19000000 THEN
        MSG := 'Дата ?' CCC := POS(INP-DT) ESCAPE TOP END-IF
     MOVE EDITED INP-DTA TO DOC-DD (EM=YYYYMMDD)
  ELSE
     RESET DOC-DD
  END-IF
  IF INP-DOP-DT NE 0 THEN
     IF INP-DOP-DT = MASK(0) OR INP-DOP-DT NE MASK(YYYYMMDD) OR
        INP-DOP-DT < 19000000 THEN
        MSG := 'Дата доп.соглашени  ?' CCC := POS(INP-DOP-DT) ESCAPE TOP END-IF
     MOVE EDITED INP-DOP-DTA TO DOP-DD (EM=YYYYMMDD)
  ELSE
     RESET DOP-DD
  END-IF
  IF INP-NM = ' ' AND INP-DT = 0 AND INP-OGI = 0 AND INP-OGZ = 0
     AND INP-DOP = ' ' AND INP-DOP-DT = 0 AND INP-TYP = ' ' THEN
     MSG := 'Задайте параметры документа' CCC := POS(INP-NM)
     ESCAPE TOP END-IF
  PERFORM PROC-READ
  IF N-DOC-B = 0 THEN
     MSG := 'Требуетс  вмешательство программиста'
     ESCAPE TOP END-IF
  IF M-DOC = 0 THEN
     MSG := 'Нет информации' CCC := 1 ESCAPE TOP
  ELSE
     IF M-DOC = 1 THEN
        IF *PF-KEY NE 'PF11' AND FLG-V = 0 AND FUN NE 'WR' THEN
           PERFORM PROC-ONE
        END-IF
        SET CONTROL 'K0' ESCAPE BOTTOM
     ELSE
        SET CONTROL 'K0' ESCAPE BOTTOM
     END-IF
  END-IF
VALUES 'PF5'
  IF FUN = 'WR' THEN
     SET CONTROL 'K5' ESCAPE BOTTOM
  END-IF
NONE VALUES IGNORE
END-DECIDE
END-REPEAT
*
DEFINE SUBROUTINE PROC-ONE
C-DATA-B := 1 RESET FLG J
CALL 'RWSX' C-DATA-B SDOC RD-REC N-DOC-B
IF INP-ET NE ' ' THEN
Z. FIND ADS-DOG-FILE NN-ID = DNNID AND NN-DP = DNNDP AND UR-ID > 0
        AND OG-ID = OG-USER
   IF INP-ET NE ' ' AND INP-ET NE ND-F(Z.) THEN ESCAPE TOP END-IF
   ADD 1 TO FLG J := IND-D
   END-FIND
END-IF
IF INP-ET = ' ' OR INP-ET NE ' ' AND FLG = 1 THEN
    IF FLG = 1 THEN
       KEYIND-OG := OG-USER DOC-IND := KEYIND-ID := J
   Z1. FIND ADS-DOG-FILE OG-IND = KEYIND
       DOC-NN(*) := IN-F(*) DOC-NM(3) := ND-F(Z1.)
       END-FIND
    END-IF
Z2. FIND ADS-DOG-FILE NN-ID = DNNID AND UR-ID = 0
         AND OG-ID = OG-USER
    DOC-TYP := TY-ID(Z2.) DOC-OGZ := VO-Z(Z2.) DOC-OGI := VO-I(Z2.)
    IF NN-DP(Z2.) = 0 THEN
       DOC-NM(1) := ND-F(Z2.)
       MOVE EDITED GM-F(Z2.) (EM=YYYYMMDD) TO DOC-DTA(1)
       IF FLG = 0 AND DNNDP = 0 THEN
          DOC-IND := IND-D(Z2.) DOC-NN(*) := IN-F(*)
       END-IF
    ELSE
       IF NN-DP(Z2.) = DNNDP THEN
          DOC-NM(2) := ND-F(Z2.)
          MOVE EDITED GM-F(Z2.) (EM=YYYYMMDD) TO DOC-DTA(2)
          IF FLG = 0 THEN
             DOC-IND := IND-D(Z2.) DOC-NN(*) := IN-F(*)
          END-IF
       END-IF
    END-IF
    END-FIND
    RESET M-DOC
    CALL 'FRSX' N-DOC-B
    SET CONTROL 'K11'
    ESCAPE BOTTOM
ELSE
    IF INP-ET NE ' ' AND *NUMBER(Z.) NE 0 AND FLG = 0 THEN
       SET CONTROL 'K12'
    ELSE
       SET CONTROL 'K0'
    END-IF
    ESCAPE BOTTOM
END-IF
END-SUBROUTINE
*
DEFINE SUBROUTINE PROC-READ
CALL 'GTNX' N-DOC-B
IF N-DOC-B = 0 THEN ESCAPE ROUTINE END-IF
RESET M-DOC I J
IF DOC-DD NE 0 THEN
  FIND ADS-DOG-FILE GM-F = DOC-DD AND NN-DP = 0 AND UR-ID = 0
  AT START OF DATA
  Q-DOC-B := *NUMBER + 1
  CALL 'GTSX' L-DOC-B Q-DOC-B N-DOC-B
  END-START
  DDISN := *ISN PERFORM PROC-ACC
  END-FIND
ELSE
  IF INP-NM NE ' ' THEN
    FIND ADS-DOG-FILE ND-F = INP-NM AND NN-DP = 0 AND UR-ID = 0
    AT START OF DATA
    Q-DOC-B := *NUMBER + 1
    CALL 'GTSX' L-DOC-B Q-DOC-B N-DOC-B
    END-START
    DDISN := *ISN PERFORM PROC-ACC
    END-FIND
  ELSE
    IF INP-OGI NE 0 THEN
      FIND ADS-DOG-FILE VO-I = INP-OGI AND UR-ID = 0
      AT START OF DATA
      Q-DOC-B := *NUMBER + 1
      CALL 'GTSX' L-DOC-B Q-DOC-B N-DOC-B
      END-START
      DDISN := *ISN PERFORM PROC-ACC
      END-FIND
    ELSE
      IF INP-OGZ NE 0 THEN
        FIND ADS-DOG-FILE VO-Z = INP-OGZ AND UR-ID = 0
        AT START OF DATA
        Q-DOC-B := *NUMBER + 1
        CALL 'GTSX' L-DOC-B Q-DOC-B N-DOC-B
        END-START
        DDISN := *ISN PERFORM PROC-ACC
        END-FIND
      ELSE
        IF INP-DOP NE ' ' THEN
          FIND ADS-DOG-FILE ND-F = INP-DOP AND NN-DP NE 0 AND UR-ID = 0
          AT START OF DATA
          Q-DOC-B := *NUMBER + 1
          CALL 'GTSX' L-DOC-B Q-DOC-B N-DOC-B
          END-START
          DDISN := *ISN PERFORM PROC-ACC
          END-FIND
        ELSE
          IF INP-DOP-DT NE 0 THEN
            FIND ADS-DOG-FILE GM-F = DOP-DD AND NN-DP NE 0 AND UR-ID = 0
            AT START OF DATA
            Q-DOC-B := *NUMBER + 1
            CALL 'GTSX' L-DOC-B Q-DOC-B N-DOC-B
            END-START
            DDISN := *ISN PERFORM PROC-ACC
            END-FIND
          ELSE
            FIND ADS-DOG-FILE UR-ID = 0
            AT START OF DATA
            Q-DOC-B := *NUMBER + 1
            CALL 'GTSX' L-DOC-B Q-DOC-B N-DOC-B
            END-START
            DDISN := *ISN PERFORM PROC-ACC
            END-FIND
          END-IF
        END-IF
      END-IF
    END-IF
  END-IF
END-IF
*
RESET I
FOR C-DATA 1 M-DOC
C-DATA-B := C-DATA
CALL 'RWSX' C-DATA-B SDOC RD-REC N-DOC-B
RESET C-DATA1
IF DNNDP = 0 THEN
   IF INP-DOP NE ' ' OR DOP-DD NE 0 THEN
S. FIND ADS-DOG-FILE NN-ID = DNNID AND NN-DP NE 0
        AND UR-ID = 0 AND OG-ID = OG-USER
   IF INP-DOP NE ' ' AND ND-F(S.) NE INP-DOP THEN ESCAPE TOP END-IF
   IF DOP-DD NE 0 AND GM-F(S.) NE DOP-DD THEN ESCAPE TOP END-IF
   DNNDP := NN-DP(S.) DPISN := *ISN(S.)
   IF M-DOC + 1 = Q-DOC-B THEN
      PERFORM RELOADOUT ; END-IF
   ADD 1 TO M-DOC C-DATA-B := M-DOC
   CALL 'RWSX' C-DATA-B SDOC WR-REC N-DOC-B
   END-FIND
   C-DATA-B := C-DATA ADD 1 TO I
   CALL 'RWSX' C-DATA-B H'FF' WR-REC N-DOC-B WR-REC WR-REC
   END-IF
ELSE
S1. FIND ADS-DOG-FILE NN-ID = DNNID AND NN-DP = 0
        AND UR-ID = 0 AND OG-ID = OG-USER
   IF INP-NM NE ' ' AND ND-F(S1.) NE INP-NM THEN ESCAPE TOP END-IF
   IF DOC-DD NE 0 AND GM-F(S1.) NE DOC-DD THEN ESCAPE TOP END-IF
   C-DATA1 := 1 DDISN := *ISN(S1.)
   END-FIND
   IF C-DATA1 = 0 THEN
      ADD 1 TO I
      CALL 'RWSX' C-DATA-B H'FF' WR-REC N-DOC-B WR-REC WR-REC
   ELSE
      CALL 'RWSX' C-DATA-B SDOC WR-REC N-DOC-B
   END-IF
END-IF
END-FOR
IF I NE 0 THEN
   CALL 'PRSX' WR-REC WR-REC N-DOC-B
   M-DOC := M-DOC - I
END-IF
IF M-DOC = 0
   IF J = 1 THEN CALL 'FRSX' N-DOC-B END-IF
ELSE
   CALL 'SRTX' WR-REC L-DOC-B N-DOC-B
END-IF
END-SUBROUTINE
*
DEFINE SUBROUTINE PROC-ACC
J := 1
IF ADS-DOG-FILE.OG-ID NE OG-USER THEN ESCAPE TOP END-IF
IF INP-TYP NE ' ' AND ADS-DOG-FILE.TY-ID NE INP-TYP THEN
   ESCAPE TOP END-IF
IF INP-OGI NE 0 AND ADS-DOG-FILE.VO-I NE INP-OGI THEN ESCAPE TOP END-IF
IF INP-OGZ NE 0 AND ADS-DOG-FILE.VO-Z NE INP-OGZ THEN ESCAPE TOP END-IF
IF INP-NM NE ' ' OR DOC-DD NE 0 THEN
   IF INP-NM NE ' ' AND ADS-DOG-FILE.ND-F NE INP-NM THEN
      ESCAPE TOP END-IF
   IF DOC-DD NE 0 AND ADS-DOG-FILE.GM-F NE DOC-DD THEN
      ESCAPE TOP END-IF
ELSE
   IF INP-DOP NE ' ' OR DOP-DD NE 0 THEN
      IF ADS-DOG-FILE.NN-DP = 0 THEN ESCAPE TOP END-IF
      IF INP-DOP NE ' ' AND ADS-DOG-FILE.ND-F NE INP-DOP THEN
         ESCAPE TOP END-IF
      IF DOP-DD NE 0 AND ADS-DOG-FILE.GM-F NE DOP-DD THEN
         ESCAPE TOP END-IF
   END-IF
END-IF
DNNID := ADS-DOG-FILE.NN-ID DNNDP := ADS-DOG-FILE.NN-DP
RESET DPISN
IF ADS-DOG-FILE.NN-DP NE 0 THEN DPISN := DDISN RESET DDISN END-IF
IF M-DOC + 1 = Q-DOC-B THEN
   PERFORM RELOADOUT ; END-IF
ADD 1 TO M-DOC C-DATA-B := M-DOC
CALL 'RWSX' C-DATA-B SDOC WR-REC N-DOC-B
END-SUBROUTINE
*
INCLUDE RELOADST 'RELOADOUT' 'L-DOC-B' 'Q-DOC-B' 'N-DOC-B' 'WLINE' 'COL_ADD'
END
