* >Natural Source Header 000000 /*<RO>>
* :NatName EXL-FP
* :UID MSA
* :Mode S
* :CP
* :Date 20110428
* :Time 1340000
* <Natural Source Header /*<<RO>
DEFINE DATA
PARAMETER
1 #FPATH(A80)  1 #COMMAND(A80)
PARAMETER USING EXL-PARM
LOCAL
1 V                  (I01)  CONST <20>
1 VARIABLE-STRING    (A253)
1 VARIABLE-TITLE     (A253)
LOCAL
1 USR1057L
  2 OBJECT-KEY
    3 LIBRARY        (A08)
    3 OBJECT-NAME    (A32)
    3 OBJECT-TYPE    (A02)
/*
  2 INPUTS
    3 OPT-ACCESS     (A01)
    3 OPT-UNUSED-1   (L)
    3 OPT-UNUSED-2   (A01)
    3 OPT-LINE-NUM   (A01)
    3 OPT-UNUSED-3   (L)
    3 OPT-REDEF-DIR  (L)
    3 OPT-UNUSED-4   (A01)
    3 OPT-AMOUNT     (I02)
    3 OPT-LINESIZE   (I02)
/*
  2 INPUT-OUTPUTS
    3 INT-HANDLE     (I04)
    3 NEXT-SEQ       (I04)
    3 NEXT-NUM       (I02)
/*
  2 OUTPUTS
    3 RETURNED       (I02)
    3 SRC-NUM        (I02/1:V)
    3 SRC-TEXT       (A01/1:V,1:72)
    3 REDEFINE SRC-TEXT
      4 SRC-GROUP    (1:V)
        5 SRC-LINE   (A72)
    3 REDEFINE SRC-TEXT
      4 DIR-OBJNAME      (A32)    /* Object Name
      4 DIR-LIBRARY      (A08)    /* Library ID
      4 DIR-OBJTYPE      (A02)    /* Object Type
      4 DIR-OBJKIND      (A01)    /* Source or Module
      4 DIR-DBID         (A05)    /* DBID of System File
      4 DIR-FNR          (A05)    /* FNR of System File
      4 DIR-DATN         (A08)    /* Date in Format (YYYYMMDD)
      4 DIR-TIMN         (A07)    /* Time in Format (HHIISST)
      4 DIR-USERID       (A08)    /* User ID
      4 DIR-PROGMODE     (A01)    /* Programming Mode
      4 DIR-SRCSIZE      (A10)    /* Source Area Size
      4 DIR-GPSIZE       (A10)    /* Size of Module
      4 DIR-UNIQUE-ID    (A32)    /* Unique ID
      4 DIR-DDM-DBID     (A05)    /* DBID the DDM is cataloged with
      4 DIR-DDM-FNR      (A05)    /* FNR the DDM is cataloged with
      4 DIR-NATVERS      (A04)    /* NATURAL Version
      4 DIR-NATSM        (A02)    /* NATURAL SM Level
      4 DIR-INIT-USER    (A08)    /* Init User ID
      4 DIR-TID          (A08)    /* Terminal ID
      4 DIR-TRANS-NAME   (A08)    /* TP Transcation Name
      4 DIR-OPSYS        (A08)    /* Operating System
      4 DIR-TPSYS        (A08)    /* TP System
      4 DIR-USED-GDA     (A08)    /* Used GDA
/* End of directory attributes
    3 SRC-SEQ        (I04/1:V)
    3 SRC-LONG       (A01/1:V)
/*
1 USR1057N
  2 VERSION          (I01)     INIT <2>
  2 V1-NSC-CKECK     (A01)
  2 V2-DBID          (N05)
  2 V2-FNR           (N04)
  2 V2-PSW           (A08)
  2 V2-CIP           (N08)
  2 V2-SYSFILE       (A01)
1 REDEFINE USR1057N
  2 EXTENDED-PARMS
    3 EXTENDED-DATA  (A01/1:28)
/*
LOCAL USING USR-MSG   /* Data for message exchange
LOCAL USING USR-FLD   /* Description of the field in error
/*
LOCAL
1 LOCAL-MSG          (A79)
1 IX                 (I02)
1 INPUT-OK           (L)
/*
LOCAL
1 USR1050L
  2 INPUTS
    3 FUNCTION        (A01)
    3 WORK-NUM        (I01)
  2 INPUT-OUTPUTS
    3 WORK-FILE       (A52)
    3 WORK-TYPE       (A01)
  2 OUTPUTS
    3 MAX-NUM         (I01)
  3 RESPONSE        (I04)
/*
1 USR1050N
  2 VERSION           (I01)     INIT <0>
1 REDEFINE USR1050N
  2 EXTENDED-PARMS
    3 EXTENDED-DATA   (A01/1:1)
/*
LOCAL
1 USR1052L
  2 OS-COMMAND        (A253)
  2 RESPONSE          (I04)
1 #FLAG                (A1)
1 #SYNCHFLAG           (A1)
 LOCAL 1 NAME_OF_MODULE(A8)
END-DEFINE
/*
DECIDE ON FIRST VALUE OF RECORD-MODE
  VALUE 'I'
    PERFORM SET-NEW-WORKFILE
    OBJECT-NAME   := PAPER-ORIENTATION
    PERFORM TEMPLATE-READ
    OBJECT-NAME   := 'STYLE'
    PERFORM TEMPLATE-READ
    OBJECT-NAME   := 'SETTINGS'
    PERFORM TEMPLATE-READ
    WRITE WORK FILE 10 VARIABLE '<body link=blue vlink=purple>'
    WRITE WORK FILE 10 VARIABLE '<table x:str border=0 cellpadding=0 cellspacing=0>'
    FOR IX 1 TO HOW-MUCH-ROWS
      COMPRESS "    <COL STYLE='MSO-WIDTH-SOURCE:USERSET;WIDTH:"  TO VARIABLE-STRING
      COMPRESS VARIABLE-STRING EXL-PARM.WIDTH(IX) "PT'>" TO VARIABLE-STRING LEAVING NO
      WRITE WORK FILE 10 VARIABLE VARIABLE-STRING
    END-FOR
    PERFORM WRITE-TABLE-CELLS
  VALUE 'W'
    PERFORM WRITE-TABLE-CELLS
  VALUE 'C'
    WRITE WORK FILE 10 VARIABLE ' </table>'
    WRITE WORK FILE 10 VARIABLE '</body>'
    WRITE WORK FILE 10 VARIABLE '</html>'
    CLOSE WORK FILE 10
    PERFORM SET-OLD-WORKFILE
    PERFORM SEND-OS-COMMAND
  NONE VALUE
    IGNORE
END-DECIDE

DEFINE SUBROUTINE TEMPLATE-READ
/*
LIBRARY       := *LIBRARY-ID
OPT-LINE-NUM  := 'Y'
OPT-REDEF-DIR := FALSE
OPT-AMOUNT    := 20
OPT-LINESIZE  := 72
/*
OPT-ACCESS   := 'O'
/*
REPEAT
/*
  CALLNAT 'USR1057N' USR1057L  USR1057N.EXTENDED-PARMS
    NAD-MSG   NAD-FLD
/*
  OPT-ACCESS := 'R'
/*
  FOR IX = 1 TO RETURNED
    IF SRC-NUM (IX) NE 0
/*  WRITE (ZP=ON) SRC-NUM (IX)
/*   SRC-LINE (IX) (EM=X(71))
      MOVE SRC-LINE (IX) TO VARIABLE-TITLE
      COMPRESS '&Ë' HEADER-LEFT-TO-RIGHT (1) '&Ö'
      HEADER-LEFT-TO-RIGHT (2) '&Ï' HEADER-LEFT-TO-RIGHT (3)
      TO VARIABLE-STRING LEAVING NO
      EXAMINE VARIABLE-TITLE FOR '##HEADER-MESSAGE##'
      AND REPLACE WITH VARIABLE-STRING
      COMPRESS '&Ë' FOOTER-LEFT-TO-RIGHT (1) '&Ö' FOOTER-LEFT-TO-RIGHT (2) '&Ï' FOOTER-LEFT-TO-RIGHT (3)
        TO VARIABLE-STRING LEAVING NO
      EXAMINE VARIABLE-TITLE FOR '##FOOTER-MESSAGE##' AND REPLACE WITH VARIABLE-STRING
      WRITE WORK FILE 10 VARIABLE VARIABLE-TITLE
    END-IF
  END-FOR
/*
  IF MSG-NR NE 0
    ESCAPE BOTTOM
  END-IF
/*
  INPUT-OK := TRUE    /* All parameter checks are done
END-REPEAT
END-SUBROUTINE
/*
DEFINE SET-NEW-WORKFILE
FUNCTION := 'G'
PERFORM SET-WORKFILE
WORK-FILE-NAME-OLD := WORK-FILE
FUNCTION := 'S'
WORK-FILE := WORK-FILE-NAME-NEW
PERFORM SET-WORKFILE
END-SUBROUTINE
/*
DEFINE SET-OLD-WORKFILE
FUNCTION  := 'S'
WORK-FILE := WORK-FILE-NAME-NEW
PERFORM SET-WORKFILE
END-SUBROUTINE
/*
DEFINE SET-WORKFILE
WORK-NUM  := 10
WORK-TYPE := 'D'
CALLNAT 'USR1050N'  USR1050L  USR1050N.EXTENDED-PARMS
END-SUBROUTINE
/*
DEFINE SUBROUTINE WRITE-TABLE-CELLS
RESET VARIABLE-STRING
IF EXL-PARM.HEIGHT(1) NE 0
  COMPRESS " <TR STYLE='MSO-HEIGHT-SOURCE:USERSET;HEIGHT:"  EXL-PARM.HEIGHT(1) "PT'" TO VARIABLE-STRING LEAVING NO
  COMPRESS VARIABLE-STRING ">" TO VARIABLE-STRING
  WRITE WORK FILE 10 VARIABLE VARIABLE-STRING
ELSE
  COMPRESS " <TR STYLE='MSO-HEIGHT-SOURCE:USERSET;HEIGHT:13.5PT'>" TO VARIABLE-STRING LEAVING NO
  WRITE WORK FILE 10 VARIABLE VARIABLE-STRING
END-IF
RESET VARIABLE-STRING
FOR IX 1 TO HOW-MUCH-ROWS
  COMPRESS "    <TD CLASS=" EXL-PARM.STYLE(IX) TO VARIABLE-STRING LEAVING NO
  COMPRESS VARIABLE-STRING  "STYLE='MSO-WIDTH-SOURCE:USERSET;WIDTH:"  TO VARIABLE-STRING
  COMPRESS VARIABLE-STRING EXL-PARM.WIDTH(IX) "PT'" TO VARIABLE-STRING LEAVING NO
  COMPRESS VARIABLE-STRING ">" EXL-PARM.CELL(IX) "</TD>" TO VARIABLE-STRING
  WRITE WORK FILE 10 VARIABLE VARIABLE-STRING
/*  EXL-PARM.CELL(IX) := " "
END-FOR
WRITE WORK FILE 10 VARIABLE ' </tr>'
END-SUBROUTINE
/*
DEFINE SUBROUTINE SEND-OS-COMMAND
* COMPRESS 'EXPLORER ' WORK-FILE-NAME-NEW INTO OS-COMMAND
 COMPRESS 'C:\PROGRAM FILES\MICROSOFT OFFICE\OFFICE11\EXCEL.EXE' WORK-FILE-NAME-NEW INTO OS-COMMAND
  CALL 'WINCMD' OS-COMMAND
END-SUBROUTINE
DEFINE SUBROUTINE SEND-OS-COMMAND2
DECIDE FOR FIRST CONDITION
  WHEN *MACHINE-CLASS = 'PC' AND *WINMGR = MASK ('WIN')
    COMPRESS 'EXPLORER' WORK-FILE-NAME-NEW TO OS-COMMAND
  WHEN *MACHINE-CLASS = 'PC' AND *OPSYS = MASK ('OS/2')
    ASSIGN OS-COMMAND = 'start e'
  WHEN NONE            /* UNIX assumed
    ASSIGN OS-COMMAND = 'vi'
END-DECIDE
/*
#FLAG := 'N'
INPUT (AD=MIW IP=OFF)
  'Enter an operating system command:' OS-COMMAND (AL=44)
  / 'Screen-io, Noscreen-io (S/N):' #FLAG
  / 'Synch, Asynch          (S/A):' #SYNCHFLAG
/*
IF *PF-KEY NE 'ENTR'
  ESCAPE ROUTINE
END-IF
/*
/* give the desired flags
IF #FLAG = 'S' OR #FLAG = 's' THEN
  COMPRESS OS-COMMAND 'SCREENIO' INTO OS-COMMAND
END-IF
IF #FLAG = 'N' OR #FLAG = 'n' THEN
  COMPRESS OS-COMMAND 'NOSCREENIO' INTO OS-COMMAND
END-IF
IF #SYNCHFLAG = 'S' OR #SYNCHFLAG = 's' THEN
  COMPRESS OS-COMMAND 'SYNCH' INTO OS-COMMAND
END-IF
IF #SYNCHFLAG = 'A' OR #SYNCHFLAG = 'a' THEN
  COMPRESS OS-COMMAND 'ASYNCH' INTO OS-COMMAND
END-IF
/*
/* NOTES:
/* Avoid translation of quotation marks:
/*   Set the profile parameter TQ=OFF or
/*   replace quotation marks with hex-code.
/* If you use one of the keywords SCREENIO, NOSCREENIO,
/*   SYNCH or ASYNCH in the system command itself,
/*   enclose it with quotation marks.
/*
EXAMINE OS-COMMAND FOR '"' AND REPLACE WITH H'22'
/*
/* call the interface
CALLNAT 'USR1052N'  USR1052L
/*
WRITE / 'Return code from the operating system:' USR1052L.RESPONSE
/*
END-SUBROUTINE
/*
END
