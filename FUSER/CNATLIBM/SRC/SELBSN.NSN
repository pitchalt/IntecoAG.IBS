* >Natural Source Header 000000 /*<RO>>
* :NatName SELBSN
* :UID MSA
* :Mode S
* :CP
* :Date 20080104
* :Time 1719330
* <Natural Source Header /*<<RO>
*   CÏÈCOK C×ETOB È ÑÓÁÑ×ÅÒÎÂ
******************************************************************
DEFINE DATA
   PARAMETER
  1 OG_IDENT_G     (N005)
  1 BSS            (N005)
  1 NMBS(A70)
  LOCAL USING LCLFROL4
   LOCAL
  1 I              (N007)
  1 READ_WRITE     (B004)       /* PEÆÈM PAÁOTÛ CO CTEKOM
  1 POINT          (B004)       /* ÓKAÇATEËÜ ÏOËOÆEHÈß B CTEKE
  1 #POINT         (N008)
  1 #START_POINT   (N008)
  1 ZAPIS_LINE     (B004)  INIT <43>
  1 ZAPIS          (A043)
  1 REDEFINE ZAPIS
    2 #N_ID        (N003)       /* ÁC
    2 #N_PO        (N005)       /* CC
    2 #NM_ID       (A035)       /* ÈMß
  1 ACTIV_SCREEN   (A43/13)
  1 REDEFINE ACTIV_SCREEN
    2 ASCREEN      (13)
      3 #N_SCR       (N3)
      3 #PO_SCR      (N5)
      3 NAME_SCH     (A35)
  1 MRK            (A1/13)
  1 MRK-C          (C/13)  INIT ALL <(AD=PN)>
  1 CUR_SCR        (N007)
  1 TMP_ST         (B004)  INIT <1>
  1 SCAN_BS        (N003)
  1 MESSAGE        (A040)
  1 C-CURS         (N002)
  1 NAME_OF_MODULE (A008)
  1 IBS-BS-FILE VIEW OF IBS-BS-FILE
    2 OG-ID
    2 BS-ID
    2 SS-ID
    2 NM-BS
END-DEFINE
  SET CONTROL 'E=ON'
  DEFINE WINDOW WIN
    SIZE 21 * 55
    BASE 02 / 21
    TITLE 'Cïècoê c÷eòoâ è cyác÷eòoâ'
    CONTROL SCREEN
    FRAMED ON
*
  READ_WRITE:=1  #OPSYS := *OPSYS
  FIND IBS-BS-FILE IBS-BS-FILE.OG-ID EQ OG_IDENT_G
    IF NO RECORDS FOUND
      INCLUDE CCMSG '"ÄAHHÛE HE HAÉÄEHÛ B ÁAÇE ÄAHHÛX !"'
      ESCAPE ROUTINE
    END-NOREC
    AT START DATA
      POINT := *NUMBER
      CALL 'GTSX' ZAPIS_LINE POINT TMP_ST
    END-START
    ACCEPT IF IBS-BS-FILE.SS-ID NE 0
    ADD  1 TO #POINT
    ASSIGN POINT = #POINT
    ZAPIS.#N_ID    := IBS-BS-FILE.BS-ID
    ZAPIS.#N_PO    := IBS-BS-FILE.SS-ID
    ZAPIS.#NM_ID   := IBS-BS-FILE.NM-BS
    CALL 'RWSX' POINT ZAPIS READ_WRITE TMP_ST
  END-FIND
  CALL 'SRTX' H'00000001' H'00000008' TMP_ST ;
  RESET READ_WRITE
  CUR_SCR := 1
  SET KEY PF1 PF3  PF7 PF8 PF9 PF10 PF11
  SET WINDOW 'WIN'
  REPEAT
    #START_POINT := CUR_SCR
    RESET #N_SCR(*) #PO_SCR(*) NAME_SCH(*)
    RESET INITIAL MRK-C(*)
    FOR I 1 13
      IF #START_POINT > #POINT  ESCAPE BOTTOM  END-IF
      ASSIGN POINT = #START_POINT
      CALL 'RWSX' POINT ACTIV_SCREEN(I) READ_WRITE TMP_ST
      MOVE (AD=I) TO MRK-C(I)
      ADD 1 TO #START_POINT
    END-FOR
    INCLUDE INPPC '"MAPBSM0"' '"MAPBSM"'
    FOR C-CURS 1 13
      IF *CURS-FIELD = POS(MRK(C-CURS))  ESCAPE BOTTOM  END-IF
    END-FOR
    DECIDE ON EVERY *PF-KEY
      VALUE 'PF3'
        CALL 'FRSX' TMP_ST
        ESCAPE BOTTOM
      VALUE 'PF7'
        CUR_SCR := CUR_SCR - 13
        IF CUR_SCR < 1  CUR_SCR := 1  END-IF
      VALUE 'PF8'
        IF #START_POINT <= #POINT  ADD 13 TO CUR_SCR  END-IF
      VALUE 'PF9'   CUR_SCR := 1
      VALUE 'PF10'  CUR_SCR := #POINT
      VALUE 'PF11'
        IF C-CURS = 1 THRU 13
          BSS := #PO_SCR(C-CURS)
          NMBS := ACTIV_SCREEN.NAME_SCH(C-CURS)
          CALL 'FRSX' TMP_ST  ESCAPE BOTTOM
        END-IF
      VALUE 'ENTR'
        IF SCAN_BS NE 0
          FOR I 1 TO #POINT
            POINT := I
            CALL 'RWSX' POINT ZAPIS READ_WRITE TMP_ST
            IF ZAPIS.#N_ID EQ SCAN_BS THEN
              CUR_SCR := POINT
              ESCAPE BOTTOM
            END-IF
          END-FOR
        END-IF
      NONE VALUE IGNORE
    END-DECIDE
  END-REPEAT
  SET WINDOW OFF  ESCAPE ROUTINE
  INCLUDE CCERIN1
END
