* >Natural Source Header 000000 /*<RO>>
* :NatName SELZAKNO
* :UID MSA
* :Mode S
* :CP
* :Date 20080104
* :Time 1652330
* <Natural Source Header /*<<RO>
*********************************************************************
* ÏÐÎÑÌÎÒÐ KOÄÈÔÈKATOPA ÇAKAÇOB
*********************************************************************
DEFINE DATA
 PARAMETER
  1 OG_IDENT_G         (N005)
  1 ZAKVX              (A009)
  1 ZAKNM              (A030)
 LOCAL  USING LCLZKL1  /* VIEW HA ÔAÉË ZAKAZ
 LOCAL  USING LCLAGLOB
* LOCAL  USING VIEW_BS
 LOCAL  USING LCLMO
 LOCAL  USING LCLGR
 LOCAL  USING LCLFROL1    /* OÁÙÈE ÏEPEMEHHÛE
 LOCAL  USING LCLFROL4    /* OÁÙÈE ÏEPEMEHHÛE
 LOCAL  USING LCLSTAKD
 LOCAL
  1 VIEW-BS VIEW OF IBS-BS-FILE
    2 OG-ID
    2 BS-ID
    2 SS-ID
  1 INPUT-REC          (A51/13)
  1 REDEFINE INPUT-REC
    2 #INPUT-REC       (13)
      3 FIELD-ISN      (P007) /* ISN ÇAÏÈCÈ
      3 #FIELD-01      (A009) /* ÇAKAÇ
      3 #FIELD-02      (N005) /* C×ET
      3 #FIELD-03      (A030) /* ÏOËE ÄËß OÏÈCAHÈß
      3 #FIELD-04      (A003) /* ÏOËE ÄOÏOËHÈTEËÜHOÉ ÈHÔOPMAÖÈÈ
  1 STEK-REC           (A051)
  1 REDEFINE STEK-REC
    2 STEK-ISN         (P007)
    2 STEK-01          (A009)
    2 STEK-02          (N005)
    2 STEK-03          (A030)
    2 STEK-04          (A003)
  1 #ZK                (A009) /* ÇAKAÇ
  1 #BS                (N005) /* C×ET
  1 #MO                (N005)
  1 #GR                (N005)
  1 POSIT              (I004)
  1 KEYB               (A010)
  1 REDEFINE KEYB
    2 KEYOG            (N005)
    2 KEYKD            (N005)
  1 KEY1               (A007)
  1 REDEFINE KEY1
    2 KEYOG            (N005)
    2 KEYKD            (A002)
  1 KEY2               (B010)      /*  ÏOÈCKOBÛÉ KËÞ×
  1 REDEFINE KEY2
    2 KEYOG2           (N005)
    2 KEYKD2           (N005)
  1 MESSAGE_FULL       (A079)
  1 REDEFINE MESSAGE_FULL
    2 MESSAGE          (A040)
  1 MRK                (A1/13)
  1 MRK-C              (C/13)   INIT ALL <(AD=PN)>
  1 TEXT1              (A040)
  1 SHOW_PROGRESS_BAR  (L)  INIT <TRUE>
  1 KOLPR              (N002)
  1 CMD                (A128)
  1 REDEFINE CMD
    2 KOD_MAT_TMP      (A022)
  1 NAME_OF_MODULE     (A008)
END-DEFINE
  DEFINE WINDOW WIN
    SIZE Q-DEL * L-DEL
    BASE N-DEL / L-DATA
    TITLE TEXT1
    CONTROL SCREEN
    FRAMED ON  POSITION OFF
  INCLUDE CCINITPR
  SET CONTROL 'E=ON'
  SET KEY PF1 PF3 PF7 PF8 PF9 PF10 PF11
  CALL 'GTNX' N-DATA-B           /* HOMEP CTEKA C ÄAHHÛMÈ
  MOVE N-DATA-B TO N-DATA        /* HOMEP CTEKA C ÄAHHÛMÈ
  MOVE 51 TO L-DATA L-DATA-B     /* ÄËÈHA ÝËEMEHTA B CTEKE C ÄAHHÛMÈ
  MOVE 1000 TO Q-DATA Q-DATA-B   /* KOË-BO ÝËEMEHTOB B CTEKE C ÄAHHÛMÈ
  #OPSYS := *OPSYS
  ASSIGN Q-LINE = 13    /* CTPOK HA ÝKPAHE
  ASSIGN T-KEY  = 5     /* HA×AËÜHAß ÏOÇÈÖÈß KËÞ×EBOÃO ATPÈÁÓTA
  ASSIGN L-KEY  = 9     /* ÄËÈHA KËÞ×EBOÃO ATPÈÁÓTA
  RESET #BS  #ZK := ZAKVX
  MOVE OG_IDENT_G TO KEYB.KEYOG KEY1.KEYOG KEYOG2
  !0.REPEAT
    TEXT1 := 'Ïàðàìåòðû çàïðîñà'
    Q-DEL := 12  L-DEL := 44  N-DEL := 05  L-DATA := 25
    SET WINDOW 'WIN'
    INCLUDE INPPC '"MAPZAKM3"' '"MAPZAKM1"'
    POSIT := *CURS-FIELD
    IF #BS NE 0 THEN
      !1.KEYB.KEYKD := #BS
      FIND NUMBER VIEW-BS OG-SS = KEYB
      IF *NUMBER(!0) = 0
        REINPUT  'Taêoão c÷eòa íe íaéäeío.' (AD=I CD=RE) MARK *#BS ALARM
      END-IF
    END-IF
    IF #MO NE 0 THEN
      !2.KEYKD2 := #MO
      FIND NUMBER VIEW_MO OG-MO = KEY2
      IF *NUMBER(!1) = 0
        REINPUT  'Taêoãî Ì/Î íe íaéäeío.' (AD=I CD=RE) MARK *#MO ALARM
      END-IF
    END-IF
    IF #GR NE 0 THEN
      KEY1.KEYKD := 'MA'
      FIND NUMBER VIEW_GR  TP-Z = KEY1 AND KD-F = #GR
      IF *NUMBER(!2) = 0
        REINPUT  'Taêoé ãðóïïû íe íaéäeío.' (AD=I CD=RE) MARK *#GR ALARM
      END-IF
    END-IF
    DECIDE ON EVERY *PF-KEY
      VALUE 'PF1'
        IF POSIT EQ POS(#BS) PERFORM SELBS #BS ESCAPE TOP  END-IF
        ESCAPE TOP
      VALUE 'PF3'
        SET WINDOW OFF
        ESCAPE ROUTINE
      NONE VALUE IGNORE
    END-DECIDE
    IF *PF-KEY NE 'ENTR'  ESCAPE TOP  END-IF
    CALL 'GTSX' L-DATA-B Q-DATA-B N-DATA-B
    CALL 'NULX' ' '  N-DATA-B
    PERFORM LOAD-PROC
    IF C-DATA < Q-DATA AND C-DATA > 0
      ASSIGN C-DATA1-B = T-KEY
      ASSIGN C-DATA2-B = L-KEY
      CALL 'SRTX' C-DATA1-B C-DATA2-B N-DATA-B
      REPEAT
        TEXT1 := 'Ñïèñîê çàêàçîâ'
        Q-DEL := 21  L-DEL := 55  N-DEL := 02  L-DATA := 20
        SET WINDOW 'WIN'
        PERFORM ARRY-PROC
        IF *PF-KEY ='PF7' OR ='PF8' OR ='PF9' OR ='PF10' RESET POSIT END-IF
        INCLUDE INPPC '"MAPZAKM4"' '"MAPZAKM2"'
        POSIT := *CURS-FIELD
        FOR C-CURS 1 Q-LINE
          IF POSIT = POS(MRK(C-CURS))  ESCAPE BOTTOM  END-IF
        END-FOR
        DECIDE FOR EVERY CONDITION
          WHEN *PF-KEY = 'PF3'
            ESCAPE BOTTOM
          WHEN *PF-KEY = 'PF7'
            COMPUTE FIRST-EL(N-DATA) = FIRST-EL(N-DATA) - Q-LINE
            IF FIRST-EL(N-DATA) <= 0  FIRST-EL(N-DATA) := 1 END-IF
          WHEN *PF-KEY = 'PF8'
            COMPUTE C-DATA1 = FIRST-EL(N-DATA) + Q-LINE - 1
            IF C-DATA1 <= MAX-EL(N-DATA) THEN
              COMPUTE FIRST-EL(N-DATA) = C-DATA1 + 1
            END-IF
          WHEN *PF-KEY = 'PF9'
            ASSIGN FIRST-EL(N-DATA) = 1
          WHEN *PF-KEY = 'PF10'
            ASSIGN FIRST-EL(N-DATA) = MAX-EL(N-DATA)
          WHEN *PF-KEY = 'PF11' AND C-CURS = 1 THRU Q-LINE
            ZAKVX := #FIELD-01(C-CURS)
            ZAKNM := #FIELD-03(C-CURS)
            ESCAPE BOTTOM
          WHEN NONE IGNORE
        END-DECIDE
      END-REPEAT
      SET WINDOW OFF
      CALL 'FRSX' N-DATA-B
      RESET MAX-EL(N-DATA)
      ESCAPE ROUTINE
     END-IF
  END-REPEAT
*
  DEFINE SUBROUTINE ARRY-PROC
    RESET FIELD-ISN(*) INPUT-REC(*)  #FIELD-02(*)
    RESET INITIAL MRK-C(*)
    ASSIGN C-DATA = FIRST-EL(N-DATA)
    FOR C-LINE = 1 TO Q-LINE
      IF C-DATA > MAX-EL(N-DATA) THEN ESCAPE BOTTOM END-IF
      ASSIGN C-DATA-B = C-DATA
      CALL 'RWSX' C-DATA-B INPUT-REC(C-LINE) RD-REC N-DATA-B
      MOVE (AD=I) TO MRK-C(C-LINE)
      ADD 1 TO C-DATA
    END-FOR
  END-SUBROUTINE
*
  DEFINE SUBROUTINE LOAD-PROC
    MESSAGE := 'ÇÀÃÐÓÇÊÀ KOÄÈÔÈKATOPA ÇAKAÇOB.'
    CALLNAT 'WMESSAGE' MESSAGE
    C-DATA := 0
    FIND NUMBER ZAKAZ ZK-F NE ' ' /* AND OG-F = OG_IDENT_G
    RETAIN AS 'LIST'
    IF #GR NE 0
      FIND NUMBER ZAKAZ WITH 'LIST' AND GR-F EQ #GR RETAIN AS 'LIST'
    END-IF
    IF #MO NE 0
      FIND NUMBER ZAKAZ WITH 'LIST' AND MO-F EQ #MO RETAIN AS 'LIST'
    END-IF
    IF #ZK NE ' '
      FIND NUMBER ZAKAZ WITH 'LIST' AND ZK-F EQ #ZK RETAIN AS 'LIST'
    END-IF
    IF #BS NE 0
      FIND NUMBER ZAKAZ WITH 'LIST' AND BS-F EQ #BS RETAIN AS 'LIST'
    END-IF
    FIND ZAKAZ WITH 'LIST'
      ADD 1 TO C-DATA
      IF C-DATA > Q-DATA THEN
        INPUT USING MAP 'MAPBDER'
        ESCAPE BOTTOM
      END-IF
      ASSIGN STEK-ISN = *ISN
      ASSIGN STEK-01 = ZAKAZ.ZK-F
      ASSIGN STEK-02 = ZAKAZ.BS-F
      ASSIGN C-DATA-B = C-DATA
      STEK-03 := ZAKAZ.NAME-ZAKAZ
      IF ZAKAZ.C*GM-F NE 0 THEN
        STEK-REC.STEK-04 := 'Oïp'
       ELSE
        STEK-REC.STEK-04 := ' '
      END-IF
      ASSIGN C-DATA-B = C-DATA
      CALL 'RWSX' C-DATA-B STEK-REC WR-REC N-DATA-B
    END-FIND
    ASSIGN MAX-EL(N-DATA) = C-DATA
    ASSIGN FIRST-EL(N-DATA) = 1
  END-SUBROUTINE
  INCLUDE CCERIN1
END
