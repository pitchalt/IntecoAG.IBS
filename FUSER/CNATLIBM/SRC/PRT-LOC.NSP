* >Natural Source Header 000000 /*<RO>>
* :NatName PRT-LOC
* :UID IBS_10
* :Mode S
* :CP
* :Date 20020607
* :Time 1304330
* <Natural Source Header /*<<RO>
**********************************************************
* тнплхпнбюмхе лндскъ бшанпю сярпниярб бшбндю нрвернб
* опх хглемемхх хкх бмнбэ нопедекемхх мюгмювемхи сярпниярб
**********************************************************
DEFINE DATA
LOCAL USING LCLSYS
LOCAL  USING LCLFROL1
LOCAL
1 NAME_OF_MODULE(A8)
1 TTT(A40)
1 NAME-PRT(A70)
1 REDEFINE NAME-PRT
  2 TEXT-PRT(A25)
  2 FILE-PRT(A8)
  2 PROF-PRT(A8)
  2 PAGE-PRT(N3)
  2 SPOOL-PRT(A25)
  2 BATCH-PRT(A1)
END-DEFINE
*
MOVE 1 TO N-DATA-B N-DATA
Q-DATA-B := 20 L-DATA-B := 70
CALL 'GTSX' L-DATA-B Q-DATA-B N-DATA-B
*
R. FIND IBS-SYS1-FILE KK-F = 'LP'
FOR C-DATA1 1 C*NB-F(R.)
NAME-PRT := NB-F(R./C-DATA1)
ADD 1 TO C-DATA C-DATA-B := C-DATA
CALL 'RWSX' C-DATA-B NAME-PRT WR-REC N-DATA-B
END-FOR
END-FIND
COMPRESS '<' C-DATA '>' INTO TTT LEAVING NO
*
SET CONTROL 'Z'
CLOSE PRINTER (1)
DEFINE PRINTER (1) OUTPUT 'SOURCE'
*
WRITE(1) NOTITLE NOHDR
'DEFINE DATA' /
'LOCAL' /
'1 Q-LINE(N2)  CONST <5>' /
'1 FIELD1(A25/1:Q-LINE)' /
'1 FIELD2(A1/1:Q-LINE)' /
'1 FIELD-C(C/1:Q-LINE) INIT ALL <(AD=PN)>' /
'1 C-LINE(N2)' /
'1 NAME_OF_MODULE(A8)' /
'1 K(N3)' /
'1 J(N3)' /
'1 I(N3)' /
'1 KOL-EKZ(N1)' /
'1 TX-PF7(A3)  INIT' '<"мГД">' /
'1 TX-PF8(A3)  INIT' '<"бОП">' /
'1 CCC(I4)' /
'1 OUTLINE(A50)' /
'1 REDEFINE OUTLINE' /
'2 OUT-FILE(A8)' /
'2 OUT-PROF(A8)' /
'2 OUT-PAGE(N3)' /
'2 OUT-SPOOL(A25)' /
'2 OUT-BATCH(A1)' /
'2 OUT-CPY(N5)'
*
IF C-DATA = 0 THEN
  WRITE(1) NOTITLE NOHDR
  '1 COL-PRT(N3)' /
  '1 TEXT-PRT(A25/1:1)'/
  '1 FILE-PRT(A8/1:1)'/
  '1 PROF-PRT(A8/1:1)'/
  '1 PAGE-PRT(N3/1:1)'/
  '1 SPOOL-PRT(A25/1:1)'/
  '1 BATCH-PRT(A1/1:1)'
ELSE
  WRITE(1) NOTITLE NOHDR
  '1 COL-PRT(N3) CONST' TTT /
  '1 TEXT-PRT(A25/1:COL-PRT)  INIT'
  FOR C-DATA1 1 C-DATA
  C-DATA-B := C-DATA1
  CALL 'RWSX' C-DATA-B NAME-PRT RD-REC N-DATA-B
  COMPRESS '(' C-DATA1 ')' INTO TTT LEAVING NO
  COMPRESS TTT '<"' INTO TTT
  COMPRESS TTT TEXT-PRT '">' INTO TTT LEAVING NO
  WRITE(1) NOTITLE NOHDR TTT
  END-FOR
  WRITE(1) NOTITLE NOHDR
  '1 FILE-PRT(A8/1:COL-PRT) INIT '
  FOR C-DATA1 1 C-DATA
  C-DATA-B := C-DATA1
  CALL 'RWSX' C-DATA-B NAME-PRT RD-REC N-DATA-B
  COMPRESS '(' C-DATA1 ')' INTO TTT LEAVING NO
  COMPRESS TTT '<"' INTO TTT
  COMPRESS TTT FILE-PRT '">' INTO TTT LEAVING NO
  WRITE(1) NOTITLE NOHDR TTT
  END-FOR
  WRITE(1) NOTITLE NOHDR
  '1 PAGE-PRT(N3/1:COL-PRT) INIT '
  FOR C-DATA1 1 C-DATA
  C-DATA-B := C-DATA1
  CALL 'RWSX' C-DATA-B NAME-PRT RD-REC N-DATA-B
  COMPRESS '(' C-DATA1 ')' INTO TTT LEAVING NO
  COMPRESS TTT '<' INTO TTT
  COMPRESS TTT PAGE-PRT '>' INTO TTT LEAVING NO
  WRITE(1) NOTITLE NOHDR TTT
  END-FOR
  RESET C-DATA2
  WRITE(1) NOTITLE NOHDR
  '1 PROF-PRT(A8/1:COL-PRT)'
  FOR C-DATA1 1 C-DATA
  C-DATA-B := C-DATA1
  CALL 'RWSX' C-DATA-B NAME-PRT RD-REC N-DATA-B
  IF PROF-PRT NE ' ' THEN
    ADD 1 TO C-DATA2
    IF C-DATA2 = 1 THEN WRITE(1) NOTITLE NOHDR '  INIT' END-IF
    COMPRESS '(' C-DATA1 ')' INTO TTT LEAVING NO
    COMPRESS TTT '<"' INTO TTT
    COMPRESS TTT PROF-PRT '">' INTO TTT LEAVING NO
    WRITE(1) NOTITLE NOHDR TTT
  END-IF
  END-FOR
  RESET C-DATA2
  WRITE(1) NOTITLE NOHDR
  '1 SPOOL-PRT(A25/1:COL-PRT)'
  FOR C-DATA1 1 C-DATA
  C-DATA-B := C-DATA1
  CALL 'RWSX' C-DATA-B NAME-PRT RD-REC N-DATA-B
  IF SPOOL-PRT NE ' ' THEN
    ADD 1 TO C-DATA2
    IF C-DATA2 = 1 THEN WRITE(1) NOTITLE NOHDR '  INIT' END-IF
    COMPRESS '(' C-DATA1 ')' INTO TTT LEAVING NO
    COMPRESS TTT '<"' INTO TTT
    COMPRESS TTT SPOOL-PRT '">' INTO TTT LEAVING NO
    WRITE(1) NOTITLE NOHDR TTT
  END-IF
  END-FOR
  RESET C-DATA2
  WRITE(1) NOTITLE NOHDR
  '1 BATCH-PRT(A1/1:COL-PRT)'
  FOR C-DATA1 1 C-DATA
  C-DATA-B := C-DATA1
  CALL 'RWSX' C-DATA-B NAME-PRT RD-REC N-DATA-B
  IF BATCH-PRT NE ' ' THEN
    ADD 1 TO C-DATA2
    IF C-DATA2 = 1 THEN WRITE(1) NOTITLE NOHDR '  INIT' END-IF
    COMPRESS '(' C-DATA1 ')' INTO TTT LEAVING NO
    COMPRESS TTT '<"' INTO TTT
    COMPRESS TTT BATCH-PRT '">' INTO TTT LEAVING NO
    WRITE(1) NOTITLE NOHDR TTT
  END-IF
  END-FOR
END-IF
CALL 'FRSX' N-DATA-B
*
WRITE (1) NOTITLE NOHDR
'END-DEFINE ' /
'DEFINE WINDOW WIN1' /
'SIZE 14 * 33' /
'BASE 04 / 20' /
'TITLE' '"бшанп пефхлю оевюрх"' /
'CONTROL SCREEN' /
'SET KEY PF3' /
'IF COL-PRT = 0 THEN'
'SET WINDOW' '"WIN1"' /
'INPUT' '"менопедекемш сярпниябю бшбндю хмтнплюжхх" /' /
'"опнбедхре менаундхлсч мюярпнийс яхярелш"' /
'SET WINDOW OFF' /
'END-IF' /
'IF *PF-KEY =' '"PF3"' 'THEN ESCAPE ROUTINE END-IF' /
'IF COL-PRT > Q-LINE THEN SET KEY PF7 PF8' /
'ELSE RESET TX-PF7 TX-PF8 END-IF' /
'KOL-EKZ := 1' /
'REPEAT' /
'RESET OUTLINE FIELD1(*) FIELD2(*)' /
'RESET INITIAL FIELD-C(*)' /
'FOR C-LINE 1 Q-LINE' /
'I := J + C-LINE' /
'IF I > COL-PRT THEN ESCAPE BOTTOM END-IF' /
'MOVE ALL "." TO FIELD1(C-LINE)' /
'COMPRESS TEXT-PRT(I) FIELD1(C-LINE) INTO FIELD1(C-LINE)' /
'FIELD2(C-LINE) := I FIELD-C(C-LINE) := (AD=D)' /
'END-FOR' /
'SET WINDOW' '"WIN1"' /
'INPUT USING MAP' '"MAPPRT"' /
'SET WINDOW OFF' /
'FOR K 1 Q-LINE' /
'IF *CURS-FIELD = POS(FIELD2(K)) THEN ESCAPE BOTTOM END-IF' /
'END-FOR' /
'IF KOL-EKZ = 0 THEN KOL-EKZ := 1 END-IF' /
'DECIDE ON EVERY VALUES *PF-KEY' /
'VALUES' '"PF3"' 'ESCAPE BOTTOM' /
'VALUES' '"ENTR"' /
'IF K = 1 THRU COL-PRT THEN' /
'OUT-FILE := FILE-PRT(K) OUT-PROF := PROF-PRT(K)' /
'OUT-SPOOL := SPOOL-PRT(K) OUT-BATCH := BATCH-PRT(K)' /
'OUT-PAGE := PAGE-PRT(K) OUT-CPY := KOL-EKZ' /
'ESCAPE BOTTOM END-IF' /
'VALUES' '"PF7"' /
'IF J > Q-LINE THEN J := J - Q-LINE' /
'ELSE RESET J END-IF' /
'VALUES' '"PF8"'
'IF I < COL-PRT THEN ADD Q-LINE TO J END-IF' /
'NONE VALUES IGNORE' /
'END-DECIDE' /
'END-REPEAT' /
'*COM := OUTLINE' /
'INCLUDE ERRORINC' /
'END'
*
STACK TOP COMMAND 'NAVPRT1'
STACK TOP COMMAND 'LOGON' *LIBRARY-ID
STACK TOP COMMAND 'STOW DEFPRT1 CNATLIBM'
STACK TOP COMMAND 'RENUMBER'
STACK TOP COMMAND 'SCRATCH DEFPRT1'
STACK TOP COMMAND 'LOGON CNATLIBM'
*
INCLUDE ERRORINC
END
