* >Natural Source Header 000000 /*<RO>>
* :NatName SNAVPOO
* :UID !!TEST!!
* :Mode S
* :CP
* :Date 20101115
* :Time 0900400
* <Natural Source Header /*<<RO>
**************************************
* BEДEHИE KOДИФИKATOPA ПOДPAЗДEЛEHИЙ *
**************************************
DEFINE DATA
*  GLOBAL USING UFROG       /* ГЛOБAЛЬHЫE ПEPEMEHHЫE ДЛЯ BCEЙ CИCTEMЫ
 PARAMETER USING PRMNAVI
*
  LOCAL  USING LCLPOL     /* VIEW HA ФAЙЛ IBS-SYS-FILE
  LOCAL  USING LCLKGPL     /* VIEW HA ФAЙЛ IBS-SYS-FILE
  LOCAL  USING LCLPLL     /* VIEW HA ФAЙЛ IBS-SYS-FILE
  LOCAL  USING LCLFROL1      /* OБЩИE ПEPEMEHHЫE
  LOCAL  USING PRMHELP
*
  LOCAL
    1 SELFUN(A60) INIT<'Пoдpaздeлeни '>
    1 SELREG(A40)
    1 INPUT-REC(A067/1:15)
    1 REDEFINE INPUT-REC
      2 #INPUT-REC(15)
* ПOЛЯ HEBЫBOДИMЫE HA ЭKPAH
        3 FIELD-FF  (B001) /* ФЛAГ ИЗMEHEHИЯ/УДAЛEHИЯ ЗAПИCИ
        3 FIELD-ISN (I4) /* ISN ЗAПИCИ
        3 FIELD-UP  (A001) /* ФЛAГ ЗAЩИTЫ ЗAПИCИ
* ПOЛЯ BЫBOДИMЫE HA ЭKPAH
        3 #FIELD-01 (N006)      /* KOД
        3 REDEFINE #FIELD-01
          4 #FIELD-01-A(A006)
        3 #FIELD-03 (N005)      /* ГPУППA
        3 #FIELD-02 (A050)      /* OБOЗHAЧEHИE
* ДИHAMИЧECKИE ATPИБУTЫ ДЛЯ BЫBOДИMЫX ПOЛEЙ
    1 #FIELD-01C (C/1:15)
    1 #FIELD-02C (C/1:15)
    1 #FIELD-03C (C/1:15)
*
* CTPУKTУPA ЭЛEMEHTA CTEKA C ДAHHЫMИ
*
    1 STEK-REC(A67)
    1 REDEFINE STEK-REC
      2 STEK-FF(B01)
      2 STEK-ISN(I4)
      2 STEK-UP(A01)
*
      2 STEK-01(N06)
      2 STEK-03(N05)
      2 STEK-02(A50)
    1 KEY1(B10)               /*  ПOИCKOBЫЙ KЛЮЧ HAЧAЛЬHЫЙ
    1 REDEFINE KEY1
      2 KEYOG1(N5)            /*  OPГAHИЗAЦИЯ
      2 KEYKD1(N5)            /*  KOД
    1 KEY2(B10)               /*  ПOИCKOBЫЙ KЛЮЧ KOHEЧHЫЙ
    1 REDEFINE KEY2
      2 KEYOG2(N5)
      2 KEYKD2(N5)
    1 KEY3(B10)               /*  ПOИCKOBЫЙ KЛЮЧ KOHTPOЛЬHЫЙ
    1 REDEFINE KEY3
      2 KEYOG3(N5)
      2 KEYKD3(N5)
    1 #DATA(N3)
    1 CURSOR(N4)
* FOR MAP
    1 #KD(N06)                /*  KOД ПOДP.
    1 #GP(N05)                /*  KOД ПOДP.
    1 #NAME(A50)
END-DEFINE
*
SET KEY PF1 PF2 PF3 PF4 PF5 PF6 PF7 PF8 PF9 PF10 PF11 PF12
INCLUDE CCASKOG
*
MOVE 1   TO N-DATA N-DATA-B  /* HOMEP CTEKA C ДAHHЫMИ
MOVE 67  TO L-DATA L-DATA-B  /* ДЛИHA ЭЛEMEHTA B CTEKE C ДAHHЫMИ
MOVE 1000 TO Q-DATA Q-DATA-B /* KOЛИЧECTBO ЭЛEMEHTOB B CTEKE C ДAHHЫMИ
*
MOVE 2   TO N-DEL  N-DEL-B      /* HOMEP CTEKA C ISN УДAЛEHHЫX ЗAПИCEЙ
MOVE 4   TO L-DEL  L-DEL-B      /* ДЛИHA ЭЛEMEHTA B CTEKE C ISN
MOVE 1000 TO Q-DEL  Q-DEL-B     /* KOЛИЧECTBO ЭЛEMEHTOB B CTEKE C ISN
*
ASSIGN Q-FIELD = 3          /* ПOЛEЙ B CTPOKE
ASSIGN Q-LINE = 15          /* CTPOK HA ЭKPAHE
ASSIGN F-LINE = 5           /* CMEЩEHИE ПEPBOЙ CTPOKИ
ASSIGN T-KEY = 7            /* HAЧAЛЬHAЯ ПOЗИЦИЯ KЛЮЧEBOГO ATPИБУTA
ASSIGN L-KEY = 6            /* ДЛИHA KЛЮЧEBOГO ATPИБУTA
ASSIGN P-INPUT(1,1) = 9
ASSIGN P-INPUT(2,1) = 17
ASSIGN P-INPUT(3,1) = 24
ASSIGN P-INPUT(1,2) = 6
ASSIGN P-INPUT(2,2) = 5
ASSIGN P-INPUT(3,2) = 50
*
ASSIGN P-STEK(1,1) = 7
ASSIGN P-STEK(2,1) = 13
ASSIGN P-STEK(3,1) = 18
ASSIGN P-STEK(1,2) = 6
ASSIGN P-STEK(2,2) = 5
ASSIGN P-STEK(3,2) = 50
*
* OCHOBHOЙ ЦИKЛ
*
REPEAT
  INPUT USING MAP 'MAPPOM1'
  IF *PF-KEY = 'PF1'
    INCLUDE CCHELP '40'
    ESCAPE TOP
  END-IF
  INCLUDE CCUFRO50
  INCLUDE CCUFRO51
  ASSIGN C-CURS = 1           /* CTPOKA C KУPCOPOM
  IF #KD = 0
    ASSIGN KEYKD1 = 1  ASSIGN KEYKD2 = 99999
  ELSE  ASSIGN KEYKD1 = #KD  ASSIGN KEYKD2 = #KD
    ASSIGN KEYKD3 = #KD
F1. FIND NUMBER IBS-KPO-FILE OG-PD = KEY3
    IF *NUMBER(F1.) = 0
      REINPUT  'HEBEPHЫЙ HOMEP ПOДPAЗДEЛEHИЯ' MARK *#KD ALARM
    END-IF
  END-IF
*
  INCLUDE CCUFRO1
*
  REPEAT
  RESET #FIELD-01(*) #FIELD-02(*) #FIELD-03(*)
  PERFORM ARRY-PROC
* ECЛИ БЫЛO OБPAЩEHИE B KOДИФИKATOP ГPУПП
  ASSIGN CURSOR = COU-EL(N-DATA)
  IF CURSOR =  0 THEN MOVE 1 TO P-CURS C-CURS
     ASSIGN CURSOR = 1     /* БEЗ BЫБOPA
    ELSE COMPUTE F-MARK = 2 + Q-FIELD * ( CURSOR - 1 )
  END-IF
  IF GP-IDENT-G NE 0                   /* БЫЛ BЫБOP
   ASSIGN  #FIELD-03(CURSOR) = GP-IDENT-G
  END-IF
  RESET GP-IDENT-G COU-EL(N-DATA)
*
  INPUT MARK F-MARK  USING MAP 'MAPPOM2'
*
    FOR C-CURS 1 Q-LINE
     IF *CURS-FIELD = POS(#FIELD-01(C-CURS)) OR
                    = POS(#FIELD-02(C-CURS)) OR
                    = POS(#FIELD-03(C-CURS))
            ESCAPE BOTTOM  END-IF
   END-FOR
 IF *PF-KEY = 'PF1'
    INCLUDE CCHELP '41'
    ESCAPE TOP
  END-IF
*
  IF *PF-KEY = 'PF2' AND FL-CURS = 0 AND #FIELD-01(C-CURS) NE 0 THEN
*    COMPUTE C-CURS = *CURS-LINE - F-LINE
    COMPUTE COU-EL(N-DATA) =  C-CURS
    PERFORM CHECK-PROC
    PERFORM SCAN-PROC
*   STACK TOP COMMAND *PROGRAM #KD #GP #NAME
*   FETCH RETURN 'NAVGP' #FIELD-03(C-CURS)
    COMPUTE OP-IDENT-G =  C-CURS   /* BЫЗOB ИЗ-ПOД NAVPO
    STACK TOP DATA #FIELD-03(C-CURS)
    CALLNAT 'SNAVGP' PRMNAV
    INCLUDE CCRFUNNM
*    STACK TOP DATA #KD #GP #NAME
*    CALLNAT 'SNAVGP' PRMNAV
*    INCLUDE CCRFUNNM
   ESCAPE TOP
  END-IF
*
  INCLUDE CCUFRO2                        /* OБPAБOTKA ПФ
*
  END-REPEAT
  SET CONTROL 'K0'    RESET OP-IDENT-G
  IF OS-FP-G NE ' ' ESCAPE BOTTOM END-IF /* BЫЙTИ,ECЛИ PAБOTA ПOД NAVPL
END-REPEAT
*
INCLUDE CCUFRO3
*
* * * * * * * * * * * * * * * * * * * * * * * * * *
* ЧTEHИE ДAHHЫX ИЗ IBS-SYS-FILE B CTEK C ДAHHЫMИ
* * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE LOAD-PROC
ASSIGN C-DATA = 0
F. FIND IBS-KPO-FILE OG-PD = KEY1 THRU KEY2
   IF #GP NE 0 AND GP-PD(F.) NE #GP THEN ESCAPE TOP END-IF
   IF #NAME NE ' ' AND NM-PD(F.) NE SCAN #NAME ESCAPE TOP END-IF
   COMPUTE C-DATA = C-DATA + 1
   IF C-DATA > Q-DATA THEN ESCAPE BOTTOM END-IF
    ASSIGN STEK-FF  = H'00'
    ASSIGN STEK-ISN = *ISN
    ASSIGN STEK-01 = PD-ID
    ASSIGN STEK-02 = NM-PD
    ASSIGN STEK-03 = GP-PD
    ASSIGN C-DATA-B = C-DATA
    CALL 'RWSX' C-DATA-B STEK-REC WR-REC N-DATA-B
  END-FIND
  ASSIGN MAX-EL(N-DATA)   = C-DATA
  ASSIGN FIRST-EL(N-DATA) = 1
  ASSIGN MAX-EL(N-DEL)    = 0
  IF MAX-EL(N-DATA) NE 0 THEN
   ASSIGN C-DATA1-B = T-KEY
   ASSIGN C-DATA2-B = L-KEY
   CALL 'SRTX' C-DATA1-B C-DATA2-B N-DATA-B
  END-IF
END-SUBROUTINE
* * * * * * * * * * * * * * * * * * * *
* ПPOЦEДУPA ПPOBEPKИ ДAHHЫX ЭKPAHA
* * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CHECK-PROC
C-DATA1 := FIRST-EL(N-DATA)
C-DATA2 := FIRST-EL(N-DATA) + Q-LINE - 1
FOR C-LINE = 1 TO Q-LINE /* ПPOCMATPИBAEM CTPOKИ ЭKPAHA
IF #FIELD-01(C-LINE) NE 0 THEN                /* CTPOKA HE УДAЛEHA
   EXAMINE #FIELD-01-A(*) #FIELD-01-A(C-LINE) GIVING NUMBER C-DUBL
   IF C-DUBL > 1 THEN
      REINPUT 'Дублирование кода на экране'
              MARK *#FIELD-01(C-LINE) ALARM
   END-IF
* ДУБЛИРОВАНИЕ В СТЕКЕ
   FOR C-DATA 1 MAX-EL(N-DATA)
   IF C-DATA = C-DATA1 THRU C-DATA2 THEN ESCAPE TOP END-IF
   C-DATA-B := C-DATA
   CALL 'RWSX' C-DATA-B STEK-REC RD-REC N-DATA-B
   IF STEK-01 = #FIELD-01(C-LINE) THEN
      REINPUT 'Подразделение с указанным кодом уже определено'
               MARK *#FIELD-01(C-LINE) ALARM
   END-IF
   END-FOR
* ДУБЛИРОВАНИЕ В ФАЙЛЕ
   ASSIGN KEYKD3 = #FIELD-01(C-LINE)
!0.F2.   FIND IBS-KPO-FILE OG-PD = KEY3
   IF NOT ( *ISN(F2.) = FIELD-ISN(C-LINE) ) THEN
      STEK-ISN := *ISN(!0) C-DEL-B := 1
      CALL 'CMPXF' STEK-ISN C-DEL-B H'00000004' N-DEL-B
      IF C-DEL-B = 0 THEN
         REINPUT 'Пoдpaздeлeниe c yкaзaнным кoдoм yжe cyщecтвyeт'
         MARK *#FIELD-01(C-LINE) ALARM
      END-IF
   END-IF
   END-FIND
*
   IF #FIELD-03(C-LINE) NE 0 THEN
   NU. FIND NUMBER IBS-KGP-FILE GP-ID = #FIELD-03(C-LINE)
            AND OG-ID = OG-IDENT-G
       IF *NUMBER(NU.) = 0 THEN
          REINPUT 'Группа (служба) ?' MARK *#FIELD-03(C-LINE) ALARM
       END-IF
   END-IF
*
*  IF #FIELD-02(C-LINE) = ' ' THEN
*     REINPUT 'Hаименование?' MARK *#FIELD-02(C-LINE) ALARM
*  END-IF
END-IF
END-FOR
END-SUBROUTINE
* * * * * * * * * * * * * * * * * * *
* ПPOЦEДУPA ИЗMEHEHИЯ ДAHHЫX
* * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE UPD-PROC
FOR C-DEL 1 TO MAX-EL(N-DEL)
  ASSIGN C-DEL-B = C-DEL
  CALL 'RWSX' C-DEL-B STEK-ISN RD-REC N-DEL-B
  GET IBS-KPO-FILE STEK-ISN
  DELETE
END-FOR
*
FOR C-DATA 1 TO MAX-EL(N-DATA)
ASSIGN C-DATA-B = C-DATA
CALL 'RWSX' C-DATA-B STEK-REC RD-REC N-DATA-B
*
IF STEK-FF = H'01' THEN
  IF STEK-ISN NE 0 THEN GET IBS-KPO-FILE STEK-ISN END-IF
*
  ASSIGN IBS-KPO-FILE.OG-ID = OG-IDENT-G
  ASSIGN IBS-KPO-FILE.PD-ID = STEK-01
  ASSIGN IBS-KPO-FILE.NM-PD = STEK-02
  ASSIGN IBS-KPO-FILE.GP-PD = STEK-03
  ASSIGN IBS-KPO-FILE.ST-F  = 'PO'
  ASSIGN IBS-KPO-FILE.CT-F  = STEK-01
*
  IF STEK-ISN NE 0 THEN UPDATE
    ELSE STORE IBS-KPO-FILE END-IF
END-IF
*
END OF TRANSACTION
OS-FK-G := 'K'
END-FOR
END-SUBROUTINE
END
