* >Natural Source Header 000000 /*<RO>>
* :NatName SNAVPRT
* :UID IBS_10
* :Mode S
* :CP
* :Date 20020518
* :Time 1113330
* <Natural Source Header /*<<RO>
*************************************
* НАСТРОЙКА УСТРОЙСТВ ВЫВОДА ОТЧЕТОВ
*************************************
DEFINE DATA
PARAMETER USING PRMNAVI
LOCAL USING PRMHELP
LOCAL USING LCLSYS
LOCAL USING LCLFROL1
LOCAL
1 NAME_OF_MODULE(A8)
1 MAX-PRT(N3) CONST <20>
1 COL(N2)     CONST <12>
1 INPUT-REC(A70/1:COL)
1 REDEFINE INPUT-REC
  2 INP-REC(COL)
    3 FIELD1(A25)
    3 FIELD2(A8)
    3 FIELD3(A8)
    3 FIELD4(N3)
    3 FIELD5(A25)
    3 FIELD6(A1)
1 CCC(I4)
1 M-EL(P7)
1 I(P7)
1 J(P7)
1 K(P7)
1 WORK-ISN(P10)
1 SSS(A250/1:2)
1 REDEFINE SSS
  2 SSA(A125/1:4)
END-DEFINE
*
SET KEY PF1 PF3 PF5 PF7 PF8
MOVE 21 TO N-DATA-B N-DATA
Q-DATA-B := MAX-PRT L-DATA-B := 70
CALL 'GTSX' L-DATA-B Q-DATA-B N-DATA-B
PRMNAV.REG-NM-G := '<Устройства вывода отчетов>'
CALLNAT 'SBCNTR40' PRMNAV.REG-NM-G
*
R. FIND IBS-SYS1-FILE KK-F = 'LP'
FOR C-DATA1 1 C*NB-F(R.)
INPUT-REC(1) := NB-F(R./C-DATA1)
ADD 1 TO M-EL C-DATA-B := M-EL
CALL 'RWSX' C-DATA-B INPUT-REC(1) WR-REC N-DATA-B
END-FOR
END-FIND
RESET C-DATA1 RE-MSG
*
REPEAT
IF RE-MSG = ' ' THEN
RESET INPUT-REC(*) FIELD4(*)
FOR C-LINE 1 COL
C-DATA := C-DATA1 + C-LINE C-DATA-B := C-DATA
IF C-DATA > M-EL THEN ESCAPE BOTTOM END-IF
CALL 'RWSX' C-DATA-B INPUT-REC(C-LINE) RD-REC N-DATA-B
END-FOR
END-IF
*
IF RE-MSG NE ' ' THEN
INPUT WITH TEXT RE-MSG MARK CCC ALARM USING MAP 'MAPPRTM'
ELSE
INPUT MARK CCC USING MAP 'MAPPRTM'
END-IF
RESET RE-MSG
*
DECIDE FOR EVERY CONDITION
WHEN *PF-KEY = 'PF3' ESCAPE BOTTOM
WHEN *PF-KEY = 'PF1'
  INCLUDE CCHELP '60'
  ESCAPE TOP
WHEN *PF-KEY NE 'PF3'
  PERFORM PROC-SCAN
WHEN *PF-KEY = 'PF7'
  IF C-DATA1 > COL THEN C-DATA1 := C-DATA1 - COL
    ELSE RESET C-DATA1 END-IF
WHEN *PF-KEY = 'PF8' AND C-DATA <= M-EL
  ADD COL TO C-DATA1
WHEN *PF-KEY = 'PF5'
  PERFORM PROC-SAVE
WHEN NONE IGNORE
END-DECIDE
END-REPEAT
*
DEFINE SUBROUTINE PROC-SCAN
FOR C-CURS 1 COL
IF FIELD1(C-CURS) NE ' ' OR FIELD2(C-CURS) NE ' ' OR
   FIELD3(C-CURS) NE ' ' OR FIELD4(C-CURS) NE 0 OR
   FIELD5(C-CURS) NE ' ' OR FIELD6(C-CURS) NE ' ' THEN
  IF FIELD1(C-CURS) = ' ' THEN
    RE-MSG := 'Наименование устройства ?'
    CCC := POS(FIELD1(C-CURS)) ESCAPE BOTTOM END-IF
  IF FIELD2(C-CURS) = ' ' THEN
    RE-MSG := 'Системный файл ?'
    CCC := POS(FIELD2(C-CURS)) ESCAPE BOTTOM END-IF
  IF FIELD4(C-CURS) = 0 THEN
    RE-MSG := 'Количество строк на странице ?'
    CCC := POS(FIELD4(C-CURS)) ESCAPE BOTTOM END-IF
END-IF
END-FOR
IF RE-MSG NE ' ' THEN ESCAPE TOP END-IF
RESET C-DUBL
FOR C-CURS 1 COL
C-DATA2 := C-DATA1 + C-CURS C-DATA-B := C-DATA2
IF FIELD1(C-CURS) NE ' ' OR FIELD2(C-CURS) NE ' ' OR
   FIELD3(C-CURS) NE ' ' OR FIELD4(C-CURS) NE 0 OR
   FIELD5(C-CURS) NE ' ' OR FIELD6(C-CURS) NE ' ' THEN
  IF C-DATA2 > M-EL THEN
    IF C-DATA2 > Q-DATA-B THEN
      RE-MSG := 'Требуетс  вмешательство программиста'
      CCC := 1 ESCAPE BOTTOM END-IF
    ADD 1 TO M-EL C-DATA-B := M-EL
  END-IF
  CALL 'RWSX' C-DATA-B INPUT-REC(C-CURS) WR-REC N-DATA-B
ELSE
  IF C-DATA2 <= M-EL THEN
    ADD 1 TO C-DUBL
    CALL 'RWSX' C-DATA-B H'FF' WR-REC N-DATA-B
         H'00000001' H'00000001'
  END-IF
END-IF
END-FOR
IF RE-MSG NE ' ' THEN ESCAPE TOP END-IF
IF C-DUBL NE 0 THEN
  CALL 'PRSX' H'00000001' H'00000001' N-DATA-B
  M-EL := M-EL - C-DUBL
END-IF
CCC := 1
END-SUBROUTINE
*
DEFINE SUBROUTINE PROC-SAVE
   RESET J
W. FIND IBS-SYS1-FILE KK-F = 'LP'
   IF NO RECORDS FOUND
     RESET WORK-ISN
   END-NOREC
   IF *NUMBER(W.) NE 0 THEN WORK-ISN := *ISN(W.) END-IF
   REPEAT
   RESET I IBS-SYS1-FILE
   IBS-SYS1-FILE.KK-F := 'LP'
   FOR C-DATA2 1 50
   K := J + C-DATA2 C-DATA-B := K
   IF K > M-EL THEN ESCAPE BOTTOM END-IF
   CALL 'RWSX' C-DATA-B INPUT-REC(1) RD-REC N-DATA-B
   ADD 1 TO I
   IBS-SYS1-FILE.NB-F(I) := INPUT-REC(1)
   END-FOR
   IF I NE 0 THEN
     IF WORK-ISN NE 0 THEN UPDATE (W.)
       ELSE STORE IBS-SYS1-FILE END-IF
   ELSE
     IF WORK-ISN NE 0 THEN DELETE (W.) END-IF
   END-IF
   ADD 50 TO J
   ESCAPE BOTTOM
   END-REPEAT
   END-FIND
END OF TRANSACTION
PERFORM WRITE-STACK
STACK TOP COMMAND 'PRT-LOC'
ESCAPE BOTTOM
END-SUBROUTINE
*
CALL 'FRSX' N-DATA-B
INCLUDE SNAVPRTW
INCLUDE ERRORINC
END
