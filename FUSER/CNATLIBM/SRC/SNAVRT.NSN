* >Natural Source Header 000000 /*<RO>>
* :NatName SNAVRT
* :UID MSA
* :Mode S
* :CP
* :Date 20050308
* :Time 1242330
* <Natural Source Header /*<<RO>
*********************************************************************
*                                                                   *
* ¬≈ƒ≈Õ»≈  Œƒ»‘» ¿“Œ–¿ √–”œœ «¿ ¿«Œ¬                                *
*                                                                   *
*********************************************************************
DEFINE DATA
  PARAMETER
  1 IKD(N5)  1 IDATA(A70)   1 TSK(A1)
  LOCAL  USING LCLKKL
  LOCAL  USING STEKL
  LOCAL  USING GLL
  LOCAL
  1 #OG(N5) CONST < 1000 >
  1 RNM(A50)
  1 INPUT-REC(A075/1:15)
  1 REDEFINE INPUT-REC
    2 #INPUT-REC(15)
      3 #TN(N5)  3 #DL(A30)  3 #FIO(A30)  3 #TEL(A10)
  1 STEK(A75)
  1 REDEFINE STEK
    2 STN(N5) 2 SDL(A30)  2 SFIO(A30)  2 STEL(A10)
  1 REDEFINE STEK
    2 PUS(B1)
  1 RGR(N5)  1 #NUM(N7)  1 OPSYS(A3)
  1 #KKF(A2) CONST < 'Z2' >
  1 C-TSK(C/15)  1 C-ZAP(C)  1 C-VIB(C)
  1 C-SLC(C/15)
  1 ZAP(A3) INIT <'«‡Ô'>
  1 VIB(A3) INIT <'¬˚·'>
  1 OG-IDENT-G(N5) CONST < 1000 >
  1 RABO(N5)
  1 SLC(A1/15)
END-DEFINE
*
SET KEY PF1 PF2 PF3 PF4 PF5 PF6 PF7 PF8 PF9 PF10 PF11 PF12
OPSYS := *OPSYS
SYS-NM-G := '»¡—  »Õ“≈ Œ ¿√'  CALLNAT 'CENTER60' SYS-NM-G
FUN-NM-G := 'Õ¿—“–Œ… ¿ —»—“≈Ã€'  CALLNAT 'CENTER60' FUN-NM-G
REG-NM-G := '–ÛÍÓ‚Ó‰ËÚÂÎË ÚÂÏ'  CALLNAT 'CENTER40' REG-NM-G
IF TSK = 'R'  C-TSK(*) := (AD=PD)  C-ZAP := (AD=PN)
  ELSE  C-SLC(*) := (AD=PN)  RESET C-TSK(*) C-ZAP
END-IF
*
CALL 'GTNX' XN1
ASSIGN XI = 75 ASSIGN XW = 1000  CALL 'GTSX' XI XW XN1
ASSIGN XW = 1
F. FIND IBS-KK-FILE OG-ID = 1000 AND KK-F = #KKF SORTED KD-F
  ASSIGN XI = *COUNTER  STEK := NA-F
  CALL 'RWSX' XI STEK XW XN1
END-FIND
MOVE *NUMBER(F.) TO IS1 #NUM
#N := 1
REPEAT
  RESET #L  COMPUTE #K = #N + 14
  FOR #I #N #K
    ASSIGN XI = #I  CALL 'RWSX' XI STEK XR XN1
    IF STEK = ' '  RESET SDL SFIO STEL STN  END-IF
    ADD 1 TO #L  ASSIGN INPUT-REC(#L) = STEK
  END-FOR
  INPUT USING MAP 'NAVRTM1'
*
  IF *PF-KEY = 'PF3'  ESCAPE BOTTOM  END-IF
* IF *PF-KEY = 'PF1'
*   INCLUDE HELP '99'
*   ESCAPE TOP
* END-IF
  ASSIGN #J = #N
  FOR #I 1 15
    IF #TN(#I) NE 0  RABO := #TN(#I)
      CALLNAT 'GETNMTN' OG-IDENT-G RABO RNM
      #FIO(#I) := RNM
      STEK := INPUT-REC(#I)
      ELSE  ASSIGN STEK.PUS = H'FF'
    END-IF
    ASSIGN XI = #J  CALL 'RWSX' XI STEK XW XN1
    ADD 1 TO #J
  END-FOR
  ASSIGN XI = 1  CALL 'PRSX' XI XW XN1
  CALL 'CMPX' ' ' XI XW XN1
  ASSIGN IS1 = XI  COMPUTE IS1 = IS1 - 1
  IF *PF-KEY = 'PF5'
    IF IS1 > #NUM
      COMPUTE #J = IS1 - #NUM
      FOR #I 1 #J
        IBS-KK-FILE.OG-ID := 1000  IBS-KK-FILE.KK-F := #KKF
        STORE IBS-KK-FILE
      END-FOR
    END-IF
F2. FIND IBS-KK-FILE OG-ID = 1000 AND KK-F = #KKF
      IF *COUNTER <= IS1  ASSIGN XI = *COUNTER
        CALL 'RWSX' XI STEK XR XN1
        NA-F := STEK  KD-F := STN
        UPDATE(F2.)
        ELSE  DELETE(F2.)
      END-IF
      END OF TRANSACTION
    END-FIND
    ESCAPE BOTTOM
  END-IF
  IF *PF-KEY = 'PF9'  ASSIGN #N = 1  END-IF
  IF *PF-KEY = 'PF10'  ASSIGN #N = IS1  END-IF
  IF *PF-KEY = 'PF7' AND #N > 15  COMPUTE #N = #N - 15  END-IF
  IF *PF-KEY = 'PF8' AND #K <= IS1  COMPUTE #N = #N + 15  END-IF
  IF *PF-KEY = 'PF11' AND TSK NE 'R'  RESET IDATA
    FOR #I 1 15
      IF *CURS-FIELD = POS(#TN(#I))
        CALLNAT 'SELTNN' RABO RNM
        #L := #N + #I - 1  XI := #L
        CALL 'RWSX' XI STEK XR XN1
        STN := RABO  SFIO := RNM  CALL 'RWSX' XI STEK XW XN1
        ESCAPE BOTTOM
      END-IF
    END-FOR
    ESCAPE TOP
  END-IF
  IF *PF-KEY = 'PF11' AND TSK = 'R'  RESET IDATA
    FOR #I 1 15
      IF *CURS-FIELD = POS(SLC(#I))
        #L := #N + #I - 1
        IF #L <= IS1  XI := #L  CALL 'RWSX' XI STEK XR XN1
          IDATA := SFIO  IKD := STN  ESCAPE BOTTOM
        END-IF
      END-IF
    END-FOR
    IF IDATA NE ' '  SET CONTROL 'K0'  ESCAPE BOTTOM  END-IF
  END-IF
END-REPEAT
CALL 'FRSX' XN1
END
