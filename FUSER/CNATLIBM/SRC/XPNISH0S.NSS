* >Natural Source Header 000000 /*<RO>>
* :NatName XPNISH0S
* :UID TIROD
* :Mode S
* :CP
* :Date 20080407
* :Time 1200330
* <Natural Source Header /*<<RO>
DEFINE DATA
/*
LOCAL USING AUNIXX0L
LOCAL USING XPNISC0L
LOCAL USING XPNISR0L
/*
LOCAL USING XPNISH0A
LOCAL USING XPNISH0L
LOCAL USING XPNISH1L
LOCAL USING XPCPXX0L
LOCAL USING XPNIP60L
LOCAL USING XPNIP61L
LOCAL USING HLPST
LOCAL USING STAN19L
LOCAL USING XPXXCO0L
LOCAL USING LCLSTAT
LOCAL
1 #RETURN-CODE (I4)
1 #ADDITION-ERROR (A35)
1 #STATUS  (A15)
1 #RESULT  (I4)
1 #VIEW-TEXT (A40)
1 #LS-START (I2) INIT <1>
1 #LS-END (I2) INIT <15>
1 #LIST-END (L) INIT <FALSE>
1 #KOL-STRING (I4) INIT <15>
1 #TEXT-VIEW  (A40)
1 #OBJECT  (A10)
1 #NI-CODE (N5)
1 #TITLE-ARCHIV (A40)
/*
1 #CP-MSG-POS (I2)
1 #C    (I2)
1 #I       (I4)
1 #STACK-I (I2)
1 #L1      (I2)
1 #L2      (I2)
1 KEYST1(A16)
1 REDEFINE KEYST1
  2 OG1(N5)  2 ST1(A5)  2 CD1(N6)
END-DEFINE
/*
DEFINE SUBROUTINE XPNISH0S
/*
DEFINE WINDOW RESULT-NIOKR
  SIZE 20*80
  BASE 4/1
  TITLE 'Найденные элементы НИОКР.'
  FRAMED ON
/*
DEFINE WINDOW CRITERY-NIOKR
  SIZE 18*80
  BASE 7/1
  TITLE 'Параметры отбора элементов НИОКР.'
  FRAMED ON
/*
DEFINE WINDOW VIEW-ARCHIV
  SIZE 15*50
  BASE 8/2
  TITLE #TITLE-ARCHIV
  FRAMED ON
/***********************************

/* init
MOVE "NI-CRITERY" TO #STATUS
/* основной цикл
REPEAT
  DECIDE ON FIRST VALUE #STATUS
     VALUE "NI-CRITERY"
        PERFORM NI-CRITERY
     VALUE "NEW-OBJECT"
        #OBJECT := "NEW"
        PERFORM NEW-OBJECT
     VALUE "EDIT-OBJECT"
        #OBJECT := "EDIT"
        PERFORM NEW-OBJECT
     VALUE "LIST-OBJECT"
        PERFORM LIST-OBJECT
     NONE VALUE
        WRITE "ERROR PARAMETERS"
        MOVE "EXIT" TO #STATUS
  END-DECIDE
  UNTIL #STATUS = "EXIT"
END-REPEAT
/*
DEFINE SUBROUTINE LIST-OBJECT  /* отображение найденных объектов
  SET WINDOW 'RESULT-NIOKR'
  SET KEY NAMED OFF
  SET KEY ALL
  SET KEY PF2 NAMED 'Новый'
  SET KEY PF5 NAMED 'Измен'
  SET KEY PF3 NAMED 'Выход'
  SET KEY CLR NAMED 'Выход'
  SET KEY PF7 NAMED 'Вверх'
  SET KEY PGUP NAMED 'Вверх'
  SET KEY PF8 NAMED 'Вниз'
  SET KEY PGDN NAMED 'Вниз'
  SET KEY PF9 NAMED 'Начал'
  SET KEY PF10 NAMED 'Конец'
  /*
  REPEAT
     PERFORM LIST-VIEW
/*
     IF #RETURN-CODE NE 0 THEN
        INPUT WITH TEXT *#RETURN-CODE , #ADDITION-ERROR
        MARK CP-CURS-FIELD USING MAP 'XPNISR0M'
        RESET #RETURN-CODE #ADDITION-ERROR
     ELSE
        INPUT MARK CP-CURS-FIELD USING MAP 'XPNISR0M'
     END-IF
     DECIDE ON FIRST VALUE *PF-KEY
        VALUE "PF2"
           MOVE "NEW-OBJECT" TO #STATUS
           SET WINDOW OFF
           PERFORM STACK-FREE
           ESCAPE BOTTOM
        VALUE "PF5"
           FOR #I = 1 TO #KOL-STRING
              IF *CURS-FIELD EQ POS(CMD(#I)) THEN
                 MOVE "EDIT-OBJECT" TO #STATUS
                 MOVE XPNISR0L.ELEM-STACK(#I) TO XPNISH0L.STACK-POS
                 PERFORM STACK-READ
                 RESET #NI-CODE
                 MOVE XPNISR0L.NI-CODE(#I) TO #NI-CODE
                 ESCAPE BOTTOM
              END-IF
           END-FOR
           SET WINDOW OFF
           PERFORM STACK-FREE
           ESCAPE BOTTOM
        VALUE "PF3" , "CLR"
           SET WINDOW OFF
           MOVE "EXIT" TO #STATUS
           PERFORM STACK-FREE
           ESCAPE BOTTOM
           /* очистить за собой стеки
        VALUE "PF7" , "PGUP"
           IF #LIST-END = TRUE
              #LIST-END := FALSE
           END-IF
           #LS-START := #LS-START  - #KOL-STRING
           #LS-END := #LS-END - #KOL-STRING
           IF #LS-START < 1 THEN
              #LS-START := 1
              #LS-END := #KOL-STRING
           END-IF
        VALUE "PF8" , "PGDN"
           IF #LIST-END = FALSE
              ADD #KOL-STRING TO #LS-START
              ADD #KOL-STRING TO #LS-END
           END-IF
        VALUE "PF9" /* начало
           #LIST-END := FALSE
           #LS-START := 1
           #LS-END := #KOL-STRING
        VALUE "PF10" /* конец
           #LIST-END := TRUE
           #LS-START := XPNISH0L.STACK-LEN - #KOL-STRING + 1
           #LS-END := XPNISH0L.STACK-LEN
           IF #LS-START <= 0 THEN
              #LS-START := 1
              #LS-END := #KOL-STRING
           END-IF
        NONE VALUE
           MOVE 2002 TO #RETURN-CODE
           MOVE *PF-KEY TO #ADDITION-ERROR
     END-DECIDE
  END-REPEAT
END-SUBROUTINE
/*
DEFINE SUBROUTINE NEW-OBJECT   /* создание нового или редактирование объекта
  SET KEY NAMED OFF
  SET KEY ALL
  SET KEY ENTR NAMED 'Прове'
  IF #OBJECT = "NEW"
     SET KEY PF5 NAMED 'Cохр'
  ELSE
     PERFORM READ-RECORD
     PERFORM OBJECT-TO-SCREEN
     SET KEY PF5 NAMED 'Измен'
     SET KEY PF6 NAMED 'Архив'
  END-IF
  SET KEY PF3 NAMED 'Выход'
  SET KEY CLR NAMED 'Выход'
  SET KEY PF11 NAMED 'Выбор'
/*
  REPEAT
     IF #RETURN-CODE NE 0 THEN
        INPUT WITH TEXT *#RETURN-CODE , #ADDITION-ERROR
        MARK CP-CURS-FIELD USING MAP 'XPNISH0M'
        RESET #RETURN-CODE #ADDITION-ERROR
     ELSE
        INPUT MARK CP-CURS-FIELD USING MAP 'XPNISH0M'
     END-IF
     DECIDE ON FIRST VALUE *PF-KEY
        VALUE "PF3" , "CLR"
           MOVE "EXIT" TO #STATUS
           RESET XPNISH0A XPNISH1L
           PERFORM STACK-FREE
           ESCAPE BOTTOM
           /* очистить за собой стеки
        VALUE "PF5"
           PERFORM CHECK-SCREEN
           IF  #RETURN-CODE NE 0
              ESCAPE TOP
           END-IF
           PERFORM SCREEN-TO-OBJECT
           IF  #RETURN-CODE NE 0
              ESCAPE TOP
           END-IF
           PERFORM STORE-OBJECT
           IF  #RETURN-CODE NE 0
              ESCAPE TOP
           ELSE
              IF #OBJECT = "NEW"
                 COMPRESS 'Объект ' XPNISH1L.NI-CODE ' сохранен в БД.' TO #TEXT-VIEW
              ELSE
                 COMPRESS 'Объект ' XPNISH1L.NI-CODE ' изменен в БД.' TO #TEXT-VIEW
              END-IF
           END-IF
           MOVE  "NI-CRITERY" TO #STATUS
           PERFORM STACK-FREE
           RESET XPNISH0A XPNISH1L
           ESCAPE ROUTINE
        VALUE "PF6"
           PERFORM VIEW-ARCHIV
        VALUE "ENTR"
           PERFORM CHECK-SCREEN
           IF  #RETURN-CODE NE 0
              ESCAPE TOP
           END-IF
        VALUE "PF11"
           PERFORM SELECT-OBJECT
           IF  #RETURN-CODE NE 0
              ESCAPE TOP
           END-IF
        NONE VALUE
           MOVE 2002 TO #RETURN-CODE
           MOVE *PF-KEY TO #ADDITION-ERROR
     END-DECIDE
  END-REPEAT
END-SUBROUTINE
/* отбор по критерию ниокр
DEFINE SUBROUTINE NI-CRITERY /* критерий дл  пердварительного отбора объектов
  SET WINDOW 'CRITERY-NIOKR'
  SET KEY NAMED OFF
  SET KEY ALL
  SET KEY ENTR NAMED 'Искат'
  SET KEY PF3 NAMED 'Выход'
  SET KEY CLR NAMED 'Выход'
  SET KEY PF2 NAMED 'Новый'
  REPEAT
     IF #RETURN-CODE NE 0 THEN
        INPUT WITH TEXT *#RETURN-CODE , #ADDITION-ERROR
        MARK CP-CURS-FIELD USING MAP 'XPNISC0M'
        RESET #RETURN-CODE #ADDITION-ERROR
     ELSE
        IF #TEXT-VIEW NE ' '
           INPUT WITH TEXT #TEXT-VIEW MARK CP-CURS-FIELD USING MAP 'XPNISC0M'
           RESET #TEXT-VIEW
        ELSE
           INPUT MARK CP-CURS-FIELD USING MAP 'XPNISC0M'
        END-IF
     END-IF
     DECIDE ON FIRST VALUE *PF-KEY
        VALUE "PF3" , "CLR"
           MOVE "EXIT" TO #STATUS
           ESCAPE BOTTOM
           /* очистить за собой стеки
        VALUE "PF2"
           MOVE "NEW-OBJECT" TO #STATUS
           ESCAPE BOTTOM
        VALUE "ENTR"
           PERFORM SEARCH-NI
           IF XPNISH0L.STACK-LEN > 0 THEN
              IF XPNISH0L.STACK-LEN = 1
                 RESET #NI-CODE
                 MOVE XPNISH0L.NI-CODE TO #NI-CODE
                 PERFORM STACK-FREE
                 MOVE "EDIT-OBJECT" TO #STATUS
              ELSE
                 MOVE "LIST-OBJECT" TO #STATUS
              END-IF
           ELSE
              MOVE 2001 TO #RETURN-CODE
           END-IF
           ESCAPE BOTTOM
        NONE VALUE
           MOVE 2002 TO #RETURN-CODE
           MOVE *PF-KEY TO #ADDITION-ERROR
     END-DECIDE
  END-REPEAT
SET WINDOW OFF
END-SUBROUTINE
/* подпрограмма проверки экрана
DEFINE SUBROUTINE CHECK-SCREEN
  IF XPNISH1L.NI-CODE = 0
     MOVE 2004 TO #RETURN-CODE
     CP-CURS-FIELD := POS(XPNISH1L.NI-CODE)
     ESCAPE ROUTINE
  END-IF
  /*
  IF #OBJECT = "NEW"
     FN1. FIND NUMBER AUNIOKR NI-CODE = XPNISH1L.NI-CODE
     IF *NUMBER(FN1.) > 0
        MOVE 2009 TO #RETURN-CODE
        MOVE XPNISH1L.NI-CODE TO #ADDITION-ERROR
        CP-CURS-FIELD := POS(XPNISH1L.NI-CODE)
        ESCAPE ROUTINE
     END-IF
  END-IF
  /*
  IF XPNISH1L.NI-NAME = ' '
     MOVE 2004 TO #RETURN-CODE
     CP-CURS-FIELD := POS(XPNISH1L.NI-NAME)
     ESCAPE ROUTINE
  END-IF
    /*
  IF XPNISH1L.NI-STAD-NIOKR = ' '
     MOVE 2004 TO #RETURN-CODE
     CP-CURS-FIELD := POS(XPNISH1L.NI-STAD-NIOKR)
     ESCAPE ROUTINE
  ELSE
     IF XPNISH1L.NI-STAD-NIOKR NE 'И' AND
        XPNISH1L.NI-STAD-NIOKR NE 'Р' THEN
           MOVE 2005 TO #RETURN-CODE
           CP-CURS-FIELD := POS(XPNISH1L.NI-STAD-NIOKR)
           ESCAPE ROUTINE
     ELSE
        IF XPNISH1L.NI-STAD-NIOKR = 'Р' THEN
           MOVE EDITED *DATX (EM=YYYYMMDD) TO XPNISH1L.NI-DATA-STAD-NIOKR-A
        END-IF
     END-IF
  END-IF
  /*
  IF (XPNISH1L.NI-LMA = FALSE AND
     XPNISH1L.NI-PMA = FALSE) OR
     (XPNISH1L.NI-LMA = TRUE AND
     XPNISH1L.NI-PMA = TRUE)
     MOVE 2004 TO #RETURN-CODE
     MOVE 'Введите один из способов амортизации' TO #ADDITION-ERROR
     CP-CURS-FIELD := POS(XPNISH1L.NI-LMA)
     ESCAPE ROUTINE
  END-IF
  /*
  IF XPNISH1L.NI-LMA = TRUE
     IF XPNISH1L.NI-SROK-ISPOL = 0
        MOVE 2004 TO #RETURN-CODE
       CP-CURS-FIELD := POS(XPNISH1L.NI-SROK-ISPOL)
     ELSE
        IF XPNISH1L.NI-EI-SROK-ISPOL = ' '
           MOVE 2004 TO #RETURN-CODE
           CP-CURS-FIELD := POS(XPNISH1L.NI-EI-SROK-ISPOL)
           ESCAPE ROUTINE
        ELSE
           IF XPNISH1L.NI-EI-SROK-ISPOL NE 'Д'
              AND XPNISH1L.NI-EI-SROK-ISPOL NE 'М'
                 MOVE 2005 TO #RETURN-CODE
                 CP-CURS-FIELD := POS(XPNISH1L.NI-EI-SROK-ISPOL)
                 ESCAPE ROUTINE
           END-IF
        END-IF
     END-IF
  ELSE
     RESET XPNISH1L.NI-SROK-ISPOL XPNISH1L.NI-EI-SROK-ISPOL
  END-IF
/*
  IF XPNISH1L.NI-PMA = TRUE
     IF XPNISH1L.NI-PLAN-PROD = 0
        MOVE 2004 TO #RETURN-CODE
        CP-CURS-FIELD := POS(XPNISH1L.NI-PLAN-PROD)
        ESCAPE ROUTINE
     END-IF
     /*
     IF XPNISH1L.NI-KOLVO-MONTH = 0
        MOVE 2004 TO #RETURN-CODE
        CP-CURS-FIELD := POS(XPNISH1L.NI-KOLVO-MONTH)
        ESCAPE ROUTINE
     END-IF
  ELSE
     RESET XPNISH1L.NI-PLAN-PROD XPNISH1L.NI-KOLVO-MONTH
  END-IF
  /*
  IF XPNISH1L.NI-FAKT-APV = TRUE
     IF FALSE AND XPNISH1L.NI-FAKT-APV-DATA-N EQ 0 THEN
        CP-CURS-FIELD := POS(XPNISH1L.NI-FAKT-APV-DATA-N)
        MOVE 2004 TO #RETURN-CODE
        ESCAPE ROUTINE
     END-IF
     IF XPNISH1L.NI-FAKT-APV-DATA-N NE 0
        IF XPNISH1L.NI-FAKT-APV-DATA-N NE MASK(YYYYMMDD) OR XPNISH1L.NI-FAKT-APV-DATA-N < 19000000 THEN
           CP-CURS-FIELD := POS(XPNISH1L.NI-FAKT-APV-DATA-N)
           MOVE 2008 TO #RETURN-CODE
           ESCAPE ROUTINE
        END-IF
     END-IF
  ELSE
     RESET XPNISH1L.NI-FAKT-APV-DATA-A
  END-IF
/*
  MOVE C*NI-AMORTIZAC TO #I
  IF #I NE 0
     IF XPNISH0A.NI-NAKOPLEN-AMORTIZ(#I) NE XPNISH1L.NI-NAKOPLEN-AMORTIZ-M
        MOVE EDITED *DATX (EM=YYYYMMDD) TO XPNISH1L.NI-NAKOPLEN-AMORTIZ-DATA-A
     END-IF
  ELSE
     IF XPNISH1L.NI-NAKOPLEN-AMORTIZ-M NE 0
        MOVE EDITED *DATX (EM=YYYYMMDD) TO XPNISH1L.NI-NAKOPLEN-AMORTIZ-DATA-A
     END-IF
  END-IF
/*
* ВСТАВКА
  INCLUDE XPXXSP0C 'XPNISH1L.NI-NAPRAVL-DEYITEL'
  'XPNISH1L.NI-NAPRAVL-DEYITEL-A' 'XPXXCO0L.CODE-VIDE-DEATEL'
/*
  INCLUDE XPXXSP0C 'XPNISH1L.NI-PRODUCT-PROG'
  'XPNISH1L.NI-PRODUCT-PROG-A' 'XPXXCO0L.CODE-PRODUCT-PROGRAM'
/*
  INCLUDE XPXXSP0C 'XPNISH1L.NI-ISTOCHNIK-FINANSIR'
  'XPNISH1L.NI-ISTOCHNIK-FINANSIR-A' 'XPXXCO0L.CODE-VIDE-FINANCE'
END-SUBROUTINE
/*
DEFINE SUBROUTINE OBJECT-TO-SCREEN
  MOVE BY NAME XPNISH0A TO XPNISH1L
  MOVE EDITED XPNISH0A.NI-FAKT-APV-DATA(EM=YYYYMMDD)
              TO XPNISH1L.NI-FAKT-APV-DATA-A
  MOVE EDITED XPNISH0A.NI-VVODA-DATA(EM=YYYYMMDD)
              TO XPNISH1L.NI-VVODA-DATA-A
  /*
  IF C*NI-AMORTIZAC NE 0
     MOVE C*NI-AMORTIZAC TO #I
     MOVE XPNISH0A.NI-NAKOPLEN-AMORTIZ(#I) TO XPNISH1L.NI-NAKOPLEN-AMORTIZ-M
     MOVE EDITED XPNISH0A.NI-NAKOPLEN-AMORTIZ-DATA(#I) (EM=YYYYMMDD)
           TO XPNISH1L.NI-NAKOPLEN-AMORTIZ-DATA-A
  END-IF
* ВСТАВКА
  INCLUDE XPXXSP1C 'XPNISH1L.NI-NAPRAVL-DEYITEL'
  'XPNISH1L.NI-NAPRAVL-DEYITEL-A' 'XPXXCO0L.CODE-VIDE-DEATEL'
/*
  INCLUDE XPXXSP1C 'XPNISH1L.NI-PRODUCT-PROG'
  'XPNISH1L.NI-PRODUCT-PROG-A' 'XPXXCO0L.CODE-PRODUCT-PROGRAM'
/*
  INCLUDE XPXXSP1C 'XPNISH1L.NI-ISTOCHNIK-FINANSIR'
  'XPNISH1L.NI-ISTOCHNIK-FINANSIR-A' 'XPXXCO0L.CODE-VIDE-FINANCE'
END-SUBROUTINE
/*
DEFINE SUBROUTINE SCREEN-TO-OBJECT
/* формирование архивов
IF XPNISH1L.NI-STATUS-OBREM NE FALSE OR C*NI-ARCHIV-OBREM NE 0
  IF XPNISH0A.NI-STATUS-OBREM NE XPNISH1L.NI-STATUS-OBREM
     #I := C*NI-ARCHIV-OBREM + 1
     IF #I > 10
        MOVE 2010 TO #RETURN-CODE
        ESCAPE ROUTINE
     END-IF
     /*
     MOVE XPNISH1L.NI-STATUS-OBREM TO XPNISH0A.NI-AR-STATUS(#I)
     MOVE *DATX TO XPNISH0A.NI-AR-ST-DATA(#I)
  END-IF
END-IF
/*
IF XPNISH1L.NI-SOST-ISPOLZ NE FALSE OR C*NI-ARCHIV-SOST NE 0
  IF XPNISH0A.NI-SOST-ISPOLZ NE XPNISH1L.NI-SOST-ISPOLZ
     #I := C*NI-ARCHIV-SOST + 1
     IF #I > 10
        MOVE 2010 TO #RETURN-CODE
        ESCAPE ROUTINE
     END-IF
     /*
     MOVE XPNISH1L.NI-SOST-ISPOLZ TO XPNISH0A.NI-AR-SOST(#I)
     MOVE *DATX TO XPNISH0A.NI-AR-SO-DATA(#I)
  END-IF
END-IF
/*
IF XPNISH1L.NI-PLAN-PROD NE 0 OR XPNISH1L.NI-KOLVO-MONTH NE 0 OR C*NI-ARCHIV-PLAN-PROD NE 0
  IF XPNISH0A.NI-PLAN-PROD NE XPNISH1L.NI-PLAN-PROD
     OR XPNISH0A.NI-KOLVO-MONTH NE XPNISH1L.NI-KOLVO-MONTH
     #I := C*NI-ARCHIV-PLAN-PROD + 1
     IF #I > 10
        MOVE 2010 TO #RETURN-CODE
        ESCAPE ROUTINE
     END-IF
     /*
     MOVE XPNISH1L.NI-PLAN-PROD TO XPNISH0A.NI-AR-PLAN-PROD(#I)
     MOVE XPNISH1L.NI-KOLVO-MONTH TO XPNISH0A.NI-AR-KOLVO-MONTH(#I)
     MOVE *DATX TO XPNISH0A.NI-AR-PLAN-DATA (#I)
  END-IF
END-IF
/*
  MOVE C*NI-AMORTIZAC TO #I
  IF #I NE 0
     IF XPNISH0A.NI-NAKOPLEN-AMORTIZ(#I) NE XPNISH1L.NI-NAKOPLEN-AMORTIZ-M
        #I := C*NI-AMORTIZAC + 1
        IF #I > 10
           MOVE 2010 TO #RETURN-CODE
           ESCAPE ROUTINE
        END-IF
        /*
        MOVE XPNISH1L.NI-NAKOPLEN-AMORTIZ-M TO XPNISH0A.NI-NAKOPLEN-AMORTIZ(#I)
        MOVE EDITED XPNISH1L.NI-NAKOPLEN-AMORTIZ-DATA-A
                 TO XPNISH0A.NI-NAKOPLEN-AMORTIZ-DATA(#I)(EM=YYYYMMDD)
     END-IF
  ELSE
     IF XPNISH1L.NI-NAKOPLEN-AMORTIZ-DATA-N NE 0
        #I := C*NI-AMORTIZAC + 1
        MOVE XPNISH1L.NI-NAKOPLEN-AMORTIZ-M TO XPNISH0A.NI-NAKOPLEN-AMORTIZ(#I)
        MOVE EDITED XPNISH1L.NI-NAKOPLEN-AMORTIZ-DATA-A
                 TO XPNISH0A.NI-NAKOPLEN-AMORTIZ-DATA(#I)(EM=YYYYMMDD)
     END-IF
  END-IF
/*
  MOVE BY NAME XPNISH1L TO XPNISH0A
  IF XPNISH1L.NI-FAKT-APV-DATA-A  NE ' '
     MOVE EDITED XPNISH1L.NI-FAKT-APV-DATA-A
                 TO XPNISH0A.NI-FAKT-APV-DATA (EM=YYYYMMDD)
  END-IF
/*
  IF XPNISH1L.NI-DATA-STAD-NIOKR-A  NE ' '
     MOVE EDITED XPNISH1L.NI-DATA-STAD-NIOKR-A
                 TO XPNISH0A.NI-DATA-STAD-NIOKR (EM=YYYYMMDD)
  END-IF
/*
END-SUBROUTINE
/*
DEFINE SUBROUTINE READ-RECORD
  IF #NI-CODE NE 0  THEN
     FIND AUNIOKR NI-CODE = #NI-CODE
        MOVE BY NAME AUNIOKR TO XPNISH0A
     END-FIND
  ELSE
     MOVE 2003 TO #RETURN-CODE
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE STORE-OBJECT
  DECIDE ON FIRST VALUE #STATUS
     VALUE "NEW-OBJECT"
        VIEWSTAT.OG-ID := XPXXCO0L.OSN-GROUP
        VIEWSTAT.ST-F := XPXXCO0L.CODE-NIOKR
        VIEWSTAT.CT-F := XPNISH0A.NI-CODE
        MOVE XPNISH0A.NI-NAME TO VIEWSTAT.NM-OG
        STORE VIEWSTAT
        MOVE BY NAME XPNISH0A TO AUNIOKR
        STORE AUNIOKR
     VALUE "EDIT-OBJECT"
        IF #NI-CODE NE 0  THEN
           FIND (1) AUNIOKR NI-CODE = #NI-CODE
              IF NO RECORDS
                 MOVE 2003 TO #RETURN-CODE
                 ESCAPE ROUTINE
              END-NOREC
              MOVE BY NAME XPNISH0A TO AUNIOKR
              UPDATE
           END-FIND
           /*
           OG1 := XPXXCO0L.OSN-GROUP
           ST1 := XPXXCO0L.CODE-NIOKR
           CD1 := #NI-CODE
           FIND VIEWSTAT OG-ST = KEYST1
              VIEWSTAT.CT-F := XPNISH0A.NI-CODE
              MOVE XPNISH0A.NI-NAME TO VIEWSTAT.NM-OG
              UPDATE
           END-FIND
        ELSE
           MOVE #NI-CODE TO #ADDITION-ERROR
           MOVE 2006 TO #RETURN-CODE
        END-IF
     ANY VALUE
        END OF TRANSACTION
     NONE VALUE IGNORE
  END-DECIDE
END-SUBROUTINE
/*
DEFINE SUBROUTINE SEARCH-NI
 /* RESET #COUNT #NUMBER
  DECIDE FOR FIRST CONDITION
     WHEN XPNISC0L.NI-CODE NE 0 AND XPNISC0L.NI-NAME EQ ' '
        FIND AUNIOKR NI-CODE = XPNISC0L.NI-CODE
           MOVE BY NAME AUNIOKR TO XPNISH0L
           PERFORM STACK-PUSH
        END-FIND
     WHEN XPNISC0L.NI-CODE NE 0 AND XPNISC0L.NI-NAME NE ' '
        FIND AUNIOKR NI-CODE = XPNISC0L.NI-CODE
           IF AUNIOKR.NI-NAME = SCAN XPNISC0L.NI-NAME
              MOVE BY NAME AUNIOKR TO XPNISH0L
              PERFORM STACK-PUSH
           END-IF
        END-FIND
     WHEN XPNISC0L.NI-CODE = 0 AND XPNISC0L.NI-NAME NE ' '
        FIND AUNIOKR NI-CODE NE 0
           IF AUNIOKR.NI-NAME = SCAN XPNISC0L.NI-NAME
              MOVE BY NAME AUNIOKR TO XPNISH0L
              PERFORM STACK-PUSH
           END-IF
        END-FIND
     WHEN NONE
        FIND AUNIOKR NI-CODE NE 0
           MOVE BY NAME AUNIOKR TO XPNISH0L
           PERFORM STACK-PUSH
        END-FIND
  END-DECIDE
END-SUBROUTINE
/*
DEFINE SUBROUTINE LIST-VIEW
  RESET #I XPNISR0L.STRING(*)
  MOVE (AD=PN) TO XPNISR0L.CMD-Z(*)
  FOR #L1 = #LS-START TO #LS-END
     IF XPNISH0L.STACK-LEN < #L1
        MOVE TRUE TO #LIST-END
        ESCAPE BOTTOM
     END-IF
     MOVE #L1 TO XPNISH0L.STACK-POS
     PERFORM STACK-READ
     ADD 1 TO #I
     MOVE BY NAME XPNISH0L TO STRING(#I)
     MOVE XPNISH0L.STACK-POS TO XPNISR0L.ELEM-STACK(#I)
     RESET XPNISR0L.CMD-Z(#I)
     IF XPNISH0L.STACK-LEN = #L1
        MOVE TRUE TO #LIST-END
        ESCAPE BOTTOM
     END-IF
  END-FOR
END-SUBROUTINE
/*
DEFINE SUBROUTINE SELECT-OBJECT
  RESET NMST
  DECIDE FOR FIRST CONDITION
*     INCLUDE XPXXSP5C 'XPNISH1L.NI-NAPRAVL-DEYITEL'
*     'XPNISH1L.NI-NAPRAVL-DEYITEL-A' 'XPXXCO0L.CODE-VIDE-DEATEL'
/* 1 - XPDGSH1L.DG-VALUTA
/* 2 - XPDGSH1L.DG-VALUTA-A
/* 3 - XPXXCO0L.CODE-valuta

  WHEN *CURS-FIELD = POS(XPNISH1L.NI-NAPRAVL-DEYITEL)
     HLPST.OGST := XPXXCO0L.OSN-GROUP  MOVE XPXXCO0L.CODE-VIDE-DEATEL TO SHST
     CDST := XPNISH1L.NI-NAPRAVL-DEYITEL
     CALLNAT 'SELSTAN' HLPST
     XPNISH1L.NI-NAPRAVL-DEYITEL := CDST
     XPNISH1L.NI-NAPRAVL-DEYITEL-A := NMST
  /*
     INCLUDE XPXXSP5C 'XPNISH1L.NI-PRODUCT-PROG'
     'XPNISH1L.NI-PRODUCT-PROG-A' 'XPXXCO0L.CODE-PRODUCT-PROGRAM'
  /*
     INCLUDE XPXXSP5C 'XPNISH1L.NI-ISTOCHNIK-FINANSIR'
     'XPNISH1L.NI-ISTOCHNIK-FINANSIR-A' 'XPXXCO0L.CODE-VIDE-FINANCE'  /*
     WHEN NONE IGNORE
  END-DECIDE
END-SUBROUTINE
/*
DEFINE SUBROUTINE VIEW-ARCHIV
  DECIDE FOR EVERY CONDITION
     WHEN *CURS-FIELD = POS(XPNISH1L.NI-STATUS-OBREM)
        IF C*NI-ARCHIV-OBREM = 0
           ESCAPE ROUTINE
        END-IF
        MOVE 'Наличие обременени  (в залоге или нет)' TO #TITLE-ARCHIV
        MOVE 'Дата       Наличие обременени ' TO XPNIP60L.P6-TITLE
        SET WINDOW "VIEW-ARCHIV"
        SET KEY NAMED OFF
        SET KEY ALL
        SET KEY PF3 NAMED 'Выход'
        SET KEY CLR NAMED 'Выход'
        FOR #I = 1 TO C*NI-ARCHIV-OBREM
           IF AUNIOKR.NI-AR-STATUS(#I) = TRUE
              MOVE 'В залоге' TO XPNIP60L.NI-NAME(#I)
           ELSE
              MOVE 'Не в залоге' TO XPNIP60L.NI-NAME(#I)
           END-IF
           MOVE EDITED AUNIOKR.NI-AR-ST-DATA(#I)(EM=YYYYMMDD)
                       TO XPNIP60L.NI-DATA-A(#I)
        END-FOR
        REPEAT
           INPUT USING MAP 'XPNIP60M'
           IF *PF-KEY = 'PF3' OR = 'CLR'

              ESCAPE BOTTOM
           END-IF
        END-REPEAT
        /*
        SET WINDOW OFF
                /*
        SET KEY NAMED OFF
        SET KEY ALL
        SET KEY ENTR NAMED 'Прове'
        IF #OBJECT = "NEW"
           SET KEY PF5 NAMED 'Cохр'
        ELSE
           SET KEY PF5 NAMED 'Измен'
           SET KEY PF6 NAMED 'Архив'
        END-IF
        SET KEY PF3 NAMED 'Выход'
        SET KEY CLR NAMED 'Выход'
     WHEN *CURS-FIELD = POS(XPNISH1L.NI-SOST-ISPOLZ)
        IF C*NI-ARCHIV-SOST = 0
           ESCAPE ROUTINE
        END-IF
        MOVE 'Состо ние использовани ' TO #TITLE-ARCHIV
        MOVE 'Дата       Статус использовани ' TO XPNIP60L.P6-TITLE
        SET WINDOW "VIEW-ARCHIV"
        SET KEY NAMED OFF
        SET KEY ALL
        SET KEY PF3 NAMED 'Выход'
        SET KEY CLR NAMED 'Выход'
        FOR #I = 1 TO C*NI-ARCHIV-SOST
           IF AUNIOKR.NI-AR-SOST(#I) = TRUE
              MOVE 'Используетс ' TO XPNIP60L.NI-NAME(#I)
           ELSE
              MOVE 'Активное использование прекращено' TO XPNIP60L.NI-NAME(#I)
           END-IF
           MOVE EDITED AUNIOKR.NI-AR-SO-DATA(#I)(EM=YYYYMMDD)
                       TO XPNIP60L.NI-DATA-A(#I)
        END-FOR
        REPEAT
           INPUT USING MAP 'XPNIP60M'
           IF *PF-KEY = 'PF3' OR = 'CLR'
              ESCAPE BOTTOM
           END-IF
        END-REPEAT
        /*
        SET WINDOW OFF
                /*
        SET KEY NAMED OFF
        SET KEY ALL
        SET KEY ENTR NAMED 'Прове'
        IF #OBJECT = "NEW"
           SET KEY PF5 NAMED 'Cохр'
        ELSE
           SET KEY PF5 NAMED 'Измен'
           SET KEY PF6 NAMED 'Архив'
        END-IF
        SET KEY PF3 NAMED 'Выход'
        SET KEY CLR NAMED 'Выход'

     WHEN *CURS-FIELD = POS(XPNISH1L.NI-PLAN-PROD) OR
          *CURS-FIELD = POS(XPNISH1L.NI-KOLVO-MONTH)
        IF C*NI-ARCHIV-PLAN-PROD = 0
           ESCAPE ROUTINE
        END-IF
        MOVE 'Планируемый объем выпуска продукции' TO #TITLE-ARCHIV
        MOVE 'Дата      Количество        Кол-во мес цев   '
                          TO XPNIP61L.P6-TITLE
        SET WINDOW "VIEW-ARCHIV"
        SET KEY NAMED OFF
        SET KEY ALL
        SET KEY PF3 NAMED 'Выход'
        SET KEY CLR NAMED 'Выход'
        FOR #I = 1 TO C*NI-ARCHIV-PLAN-PROD
           MOVE AUNIOKR.NI-AR-PLAN-PROD(#I) TO XPNIP61L.NI-NUMBERP87(#I)
           MOVE AUNIOKR.NI-AR-KOLVO-MONTH(#I) TO XPNIP61L.NI-NUMBERP7(#I)
           MOVE EDITED AUNIOKR.NI-AR-PLAN-DATA(#I)(EM=YYYYMMDD)
                       TO XPNIP61L.NI-DATA-A(#I)
        END-FOR
        REPEAT
           INPUT USING MAP 'XPNIP61M'
           IF *PF-KEY = 'PF3' OR = 'CLR'
              ESCAPE BOTTOM
           END-IF
        END-REPEAT
        /*
        SET WINDOW OFF
                /*
        SET KEY NAMED OFF
        SET KEY ALL
        SET KEY ENTR NAMED 'Прове'
        IF #OBJECT = "NEW"
           SET KEY PF5 NAMED 'Cохр'
        ELSE
           SET KEY PF5 NAMED 'Измен'
           SET KEY PF6 NAMED 'Архив'
        END-IF
        SET KEY PF3 NAMED 'Выход'
        SET KEY CLR NAMED 'Выход'

     WHEN *CURS-FIELD = POS(XPNISH1L.NI-NAKOPLEN-AMORTIZ-M)
        IF C*NI-AMORTIZAC = 0
           ESCAPE ROUTINE
        END-IF
        MOVE 'Накопление амортизации' TO #TITLE-ARCHIV
        MOVE 'Дата      Накоплена  амортизаци '
                          TO XPNIP61L.P6-TITLE
        SET WINDOW "VIEW-ARCHIV"
        SET KEY NAMED OFF
        SET KEY ALL
        SET KEY PF3 NAMED 'Выход'
        SET KEY CLR NAMED 'Выход'
        FOR #I = 1 TO C*NI-AMORTIZAC
           MOVE AUNIOKR.NI-NAKOPLEN-AMORTIZ(#I) TO XPNIP61L.NI-NUMBERP87(#I)
           MOVE EDITED AUNIOKR.NI-NAKOPLEN-AMORTIZ-DATA(#I)(EM=YYYYMMDD)
                       TO XPNIP61L.NI-DATA-A(#I)
        END-FOR
        REPEAT
           INPUT USING MAP 'XPNIP61M'
           IF *PF-KEY = 'PF3' OR = 'CLR'
              ESCAPE BOTTOM
           END-IF
        END-REPEAT
        /*
        SET WINDOW OFF
                /*
        SET KEY NAMED OFF
        SET KEY ALL
        SET KEY ENTR NAMED 'Прове'
        IF #OBJECT = "NEW"
           SET KEY PF5 NAMED 'Cохр'
        ELSE
           SET KEY PF5 NAMED 'Измен'
           SET KEY PF6 NAMED 'Архив'
        END-IF
        SET KEY PF3 NAMED 'Выход'
        SET KEY CLR NAMED 'Выход'

     WHEN NONE
        IGNORE
  END-DECIDE
END-SUBROUTINE
/*
INCLUDE XXSTMN0C "XPNISH0L" "XPNISH0LC"
        "STACK-INIT" "STACK-FREE" "STACK-REALLOC"
        "STACK-PUSH" "STACK-READ" "STACK-WRITE" "STACK-SORT"
END-SUBROUTINE
/*
END




