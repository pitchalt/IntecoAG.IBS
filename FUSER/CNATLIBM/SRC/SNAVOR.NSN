* >Natural Source Header 000000 /*<RO>>
* :NatName SNAVOR
* :UID MSA
* :Mode S
* :CP
* :Date 20080101
* :Time 1751330
* <Natural Source Header /*<<RO>
/**************************************
/*        ПОДРОГРАММА ВЕДЕНИЯ
/*        АТРИБУТОВ ОРГАНИЗАЦИЙ
/**************************************
DEFINE DATA
 PARAMETER USING PRMNAVI
 LOCAL USING LCLBNLP  /* КОДИФИКАТОР БАНКОВ
 LOCAL USING LCLNAOLP
 LOCAL USING LCLVAL  /* КОДИФИКАТОР ВАЛЮТ
 LOCAL USING LCLFROL4
 LOCAL USING PRMNAVBN
 LOCAL
1 OG_NM_G(A60)
1 SYS_NM_G(A60)
1 FUN_NM_G(A60)
1 REG_NM_G(A40)
/**************************************
1 KEYNAOR(B10)
1 REDEFINE KEYNAOR
  2 KEYOG(N5)
  2 KEYKD(N5)
1 KEYCB(B13)
1 REDEFINE KEYCB
  2 KEYOG(N5)
  2 KEYBN(N8)
1 KEYBC(A20)
1 REDEFINE KEYBC
  2 KEYOG(N5)
  2 KEYBIC(A15)
1 KEYVAL(A8)
1 REDEFINE KEYVAL
  2 KEYOG(N5)
  2 KEYVA(A3)
/**************************************
1 ORG_ISN(P11)
1 RECOR
  2 NN_ID(A15)
  2 KPP(A20)
  2 NM_OG(A80)
  2 AD_OG(A80)
  2 BANKI(MAX_BNK)
    3 BN_OG(N8)
    3 KR_OG(A20)
    3 BN_BIC(A15)
    3 RS_OG(A20/1:MAX_RS)
    3 RS_VA(A3/1:MAX_RS)
  2 NA_F_NAM(A60)
  2 NA_F_ADR(A60)
  2 NA_F_TEL(A30)
  2 NA_F_DEP(A30)
  2 VO_DI(A40/1:8)
  2 VID-DEYAT(A30)  2 FORMA-SOB(A30)
  2 RUKOVOD(A90)
  2 REDEFINE RUKOVOD
    3 #RUKOVOD(A30/3)
  2 GL-BUH(A90)
  2 REDEFINE GL-BUH
    3 #GL-BUH(A30/3)
/**************************************
1 SCREEN
 2 BN_OG(N8)
 2 KR_OG(A20)
 2 BN_BIC(A15)
 2 RS_OG(A20/1:MAX_RS)
 2 RS_VA(A3/1:MAX_RS)
 2 NAME_BN(A70)
 2 ADDR_BN(A70)
/**************************************
1 HELP
  2 HSYSTEM(A9)
  2 NUMHELP(N9)
/**************************************
1 G(N3)
1 R(N3)
1 V(N3)
1 I(N3)
1 K(N3)
1 MESSAGEFULL(A75)
1 POSIT(I4)
1 START_LINE(N3)
1 SEL(N3)
1 ERR(N5)
1 KODIF_OR_TMP
 2 OG_ID_G(N5)   /* КОД ОРГАНИЗАЦИИ / ВЫЗОВ
 2 OR_INN(A15)   /* ИНН ОРГАНИЗ. / ВОЗВРАТ
 2 OR_NAME(A70)  /* ИМЯ  ОРГАНИЗАЦИИ / ВОЗВР
 2 OR_ADDR(A70)  /* адрес  ОРГАНИЗАЦИИ / ВОЗ
 2 OR_BNK(N8)    /* КОД БАНКА / ВОЗВРАТ
 2 OR_BIK(A15)   /* БИК БАНКА / ВОЗВРАТ
 2 KORR_SCH(A20) /* КОРР. СЧЕТ БАНКА / ВОЗВРАТ
 2 NAME_BN(A70)  /* ИМЯ БАНКА / ВОЗВРАТ
 2 ADDR_BN(A70)  /* адрес БАНКА / ВОЗВРАТ
 2 OR_RASCH(A20) /* РАСЧЕТНЫЙ СЧЕТ /ВОЗВРАТ
 2 OR_VAL(A3)    /* ВАЛЮТА / ВОЗВРАТ
 2 RES_OR(A1)    /* РЕЗУЛЬТАТ / E - ОШИБКА
1 C-RW(C)  1 C-RWM1(C/8)  1 C-RWM(C/15)
1 #NB(A91)
1 REDEFINE #NB
  2 NBFI(A1)  2 NBNM(A90)
END-DEFINE
DEFINE WINDOW DOP_WIN
       SIZE 23*66
       BASE 1/7
       TITLE ' '
       CONTROL SCREEN
       FRAMED ON
SET KEY ALL
 PRMNAV.RES_OR := 'N'  #OPSYS := *OPSYS
  INCLUDE INPPC '"NAVVOM10"' '"MAPVOM10"'
 IF *PF-KEY = 'PF3'  ESCAPE ROUTINE  END-IF
 IF PRMNAV.OG_ID_G <= 0 THEN
  RESET KODIF_OR(*) PRMNAV.OR_BNK; PRMNAV.RES_OR := 'E' ESCAPE ROUTINE END-IF
 KEYNAOR.KEYOG := KEYNAOR.KEYKD := PRMNAV.OG_ID_G
L. FIND (1) IBS-NAOR-FILE OG-KD = KEYNAOR
    IF NO RECORDS FOUND
     RESET KODIF_OR(*) PRMNAV.OR_BNK; PRMNAV.RES_OR := 'E'
     ORG_ISN := 0
/*     ESCAPE ROUTINE
     PRMNAV.OG_ID_G := KEYNAOR.KEYKD
     ESCAPE BOTTOM
    END-NOREC
    ORG_ISN := *ISN(L.)
    OG_NM_G := IBS-NAOR-FILE.NM-OG
    RECOR.NN_ID := IBS-NAOR-FILE.NN-ID
    RECOR.KPP := IBS-NAOR-FILE.NM-PL
    RECOR.NM_OG := IBS-NAOR-FILE.NM-OG
    RECOR.AD_OG := IBS-NAOR-FILE.AD-OG
    G := C*IBS-NAOR-FILE.PR-ID
    FOR I = 1 TO G
     RECOR.BN_OG(I)  := IBS-NAOR-FILE.BN-OG(I)
     KEYCB.KEYOG := PRMNAV.OG_ID_G
     KEYCB.KEYBN := IBS-NAOR-FILE.BN-OG(I)
     FIND (1) IBS-KBN-FILE OG-BN EQ KEYCB
      IF NO RECORD FOUND
       RECOR.BN_BIC(I) := ' '
       RECOR.KR_OG(I)  := ' '
      END-NOREC
      RECOR.BN_BIC(I) := IBS-KBN-FILE.MF-ID
      RECOR.KR_OG(I)  := IBS-KBN-FILE.KR-OG(1)
     END-FIND
     R := C*IBS-NAOR-FILE.RS-OG(I)
     FOR K = 1 TO R
      RECOR.RS_OG(I,K) := IBS-NAOR-FILE.RS-OG(I,K)
     END-FOR
     V := C*IBS-NAOR-FILE.RS-VA(I)
     FOR K = 1 TO V
      RECOR.RS_VA(I,K) := IBS-NAOR-FILE.RS-VA(I,K)
     END-FOR
    END-FOR
    RECOR.NA_F_NAM := IBS-NAOR-FILE.NA-F-NAM
    RECOR.NA_F_ADR := IBS-NAOR-FILE.NA-F-ADR
    RECOR.NA_F_TEL := IBS-NAOR-FILE.NA-F-TEL
    RECOR.NA_F_DEP := IBS-NAOR-FILE.NA-F-DEP
    RECOR.VID-DEYAT := IBS-NAOR-FILE.NA-F-VID
    RECOR.FORMA-SOB := IBS-NAOR-FILE.NA-F-FORMA
    RECOR.RUKOVOD := SUBSTR(IBS-NAOR-FILE.NB-F(1),2,90)
    RECOR.GL-BUH := SUBSTR(IBS-NAOR-FILE.NB-F(2),2,90)
    RECOR.VO_DI(1:8) := IBS-NAOR-FILE.VO-DI(1:8)
   END-FIND
 CALLNAT 'SBCNTR60' OG_NM_G
 RESET MESSAGEFULL
 FUN_NM_G := '*** Ведение атрибутов организации ***'
 CALLNAT 'SBCNTR60' FUN_NM_G
 START_LINE := 1 ERR := 0
REPEAT
 RESET SCREEN
 IF RECOR.BN_OG(START_LINE) NE 0 OR
    RECOR.BN_BIC(START_LINE) NE ' ' THEN
 SCREEN.BN_OG  := RECOR.BN_OG(START_LINE)
 SCREEN.KR_OG  := RECOR.KR_OG(START_LINE)
 SCREEN.BN_BIC := RECOR.BN_BIC(START_LINE)
 IF RECOR.BN_OG(START_LINE) NE 0 THEN
  KEYCB.KEYOG := PRMNAV.OG_ID_G
  KEYCB.KEYBN := RECOR.BN_OG(START_LINE)
  FIND (1) IBS-KBN-FILE OG-BN EQ KEYCB
   SCREEN.BN_OG := IBS-KBN-FILE.BN-ID SCREEN.KR_OG := IBS-KBN-FILE.KR-OG(1)
   SCREEN.BN_BIC := IBS-KBN-FILE.MF-ID SCREEN.NAME_BN := IBS-KBN-FILE.NM-BN
   SCREEN.ADDR_BN := IBS-KBN-FILE.AD-BN
  END-FIND
                                 ELSE
  KEYBC.KEYOG  := PRMNAV.OG_ID_G
  KEYBC.KEYBIC := RECOR.BN_BIC(START_LINE)
  FIND (1) IBS-KBN-FILE OG-BIC EQ KEYBC
   SCREEN.BN_OG := IBS-KBN-FILE.BN-ID SCREEN.KR_OG := IBS-KBN-FILE.KR-OG(1)
   SCREEN.BN_BIC := IBS-KBN-FILE.MF-ID SCREEN.NAME_BN := IBS-KBN-FILE.NM-BN
   SCREEN.ADDR_BN := IBS-KBN-FILE.AD-BN
  END-FIND
                                 END-IF
 FOR I = 1 TO MAX_RS
  SCREEN.RS_OG(I) := RECOR.RS_OG(START_LINE,I)
  SCREEN.RS_VA(I) := RECOR.RS_VA(START_LINE,I)
 END-FOR                     ELSE
 SCREEN.BN_OG  := 0 SCREEN.KR_OG  := ' ' SCREEN.BN_BIC := ' '
 SCREEN.RS_OG(1:MAX_RS) := ' ' SCREEN.RS_VA(1:MAX_RS) := ' '
                             END-IF
 DECIDE ON FIRST VALUE ERR
  VALUE 1
   MESSAGEFULL := 'Введине название организации.'
  VALUE 2
   MESSAGEFULL := 'Введине адрес организации.'
  VALUE 3
   MESSAGEFULL := 'Введине ИНН организации.'
  VALUE 4
   MESSAGEFULL := 'Неизвестна  ошибка.'
  VALUE 5
   MESSAGEFULL := 'Банк с таким БИК и кодом не найден.'
  VALUE 6
   MESSAGEFULL := 'Банк с таким кодом не найден.'
  VALUE 7
   MESSAGEFULL := 'Банк с таким БИК не найден.'
  VALUE 8
   MESSAGEFULL := 'Надо ввести хоть один расчетный счет в этом банке.'
  VALUE 9
   MESSAGEFULL := 'Введите код валюты.'
  VALUE 10
   MESSAGEFULL := 'Код валюты не найден.'
  NONE VALUE RESET MESSAGEFULL
 END-DECIDE
 SEL := 0
 SET KEY ENTR PF1 PF2 PF3 PF4 PF5 PF6 PF7 PF8 PF9 PF10 PF11 PF12
 IF #RW = 'R'  SET KEY PF5=OFF
   C-RW := C-RWM(*) := C-RWM1(*) := (AD=PD)
 END-IF
 IF #OPSYS = 'W'
   INPUT WITH TEXT MESSAGEFULL(CD=RE) MARK POSIT USING MAP 'NAVVOM11'
   ELSE
   INPUT WITH TEXT MESSAGEFULL(CD=RE) MARK POSIT USING MAP 'MAPVORM1'
 END-IF
 RESET MESSAGEFULL ; ERR := 0
 POSIT := *CURS-FIELD
 SEL := 0
 FOR I = 1 TO MAX_RS
  IF POSIT EQ POS(SCREEN.RS_OG(I)) OR
     POSIT EQ POS(SCREEN.RS_VA(I)) THEN
     SEL := I ESCAPE BOTTOM END-IF
 END-FOR
 DECIDE ON FIRST VALUE *PF-KEY
  VALUE 'PF1'
   HELP.HSYSTEM := 'UFRO'
   HELP.NUMHELP := 58
   CALLNAT 'SBTHELP' HELP(AD=O)
   PERFORM CHECK_DATA
   IF ERR NE 0 THEN ESCAPE TOP END-IF
  VALUE 'PF2'
   PERFORM CHECK_DATA
   IF ERR NE 0 THEN ESCAPE TOP END-IF
   PERFORM EDIT_DOP
  VALUE 'PF3'
   IF KODIF_OR_TMP.RES_OR EQ 'Y' THEN
    PRMNAV.OG_ID_G  := KODIF_OR_TMP.OG_ID_G
    PRMNAV.OR_INN   := KODIF_OR_TMP.OR_INN
    PRMNAV.OR_NAME  := KODIF_OR_TMP.OR_NAME
    PRMNAV.OR_ADDR  := KODIF_OR_TMP.OR_ADDR
    PRMNAV.OR_BNK   := KODIF_OR_TMP.OR_BNK
    PRMNAV.OR_BIK   := KODIF_OR_TMP.OR_BIK
    PRMNAV.KORR_SCH := KODIF_OR_TMP.KORR_SCH
    PRMNAV.NAME_BN  := KODIF_OR_TMP.NAME_BN
    PRMNAV.ADDR_BN  := KODIF_OR_TMP.ADDR_BN
    PRMNAV.OR_RASCH := KODIF_OR_TMP.OR_RASCH
    PRMNAV.OR_VAL   := KODIF_OR_TMP.OR_VAL
    PRMNAV.RES_OR   := 'Y'
                                 ELSE
    PRMNAV.RES_OR := 'N'
                                 END-IF
   ESCAPE ROUTINE
  VALUE 'PF5'
   PERFORM CHECK_DATA
   IF ERR NE 0 THEN ESCAPE TOP END-IF
   PERFORM SAVE_ORG
  VALUE 'PF7'
   PERFORM CHECK_DATA
   IF ERR NE 0 THEN ESCAPE TOP END-IF
   ADD -1 TO START_LINE
   IF START_LINE < 1 THEN
    START_LINE := 1 END-IF
  VALUE 'PF8'
   PERFORM CHECK_DATA
   IF ERR NE 0 THEN ESCAPE TOP END-IF
   ADD 1 TO START_LINE
   IF START_LINE > MAX_BNK THEN
    START_LINE := MAX_BNK END-IF
  VALUE 'PF11'
   IF POSIT EQ POS(SCREEN.BN_OG) OR
      POSIT EQ POS(SCREEN.BN_BIC) THEN
    KODIF_BN.OG_ID_G := PRMNAV.OG_ID_G
    KODIF_BN.BN_ID   := SCREEN.BN_OG
    KODIF_BN.BN_BIC  := SCREEN.BN_BIC
    CALLNAT 'SNAVBNK' PRMNAV KODIF_BN ;
    IF KODIF_BN.RES_BN EQ 'Y' THEN
     SCREEN.BN_OG   := KODIF_BN.BN_ID
     SCREEN.BN_BIC  := KODIF_BN.BN_BIC
     SCREEN.KR_OG   := KODIF_BN.KORR_SCH
     SCREEN.NAME_BN := KODIF_BN.NAME_BN
     SCREEN.ADDR_BN := KODIF_BN.ADDR_BN
                              END-IF END-IF
   IF POSIT EQ POS(SCREEN.RS_VA(1))  OR EQ POS(SCREEN.RS_VA(2))  OR EQ
               POS(SCREEN.RS_VA(3))  OR EQ POS(SCREEN.RS_VA(4))  OR EQ
               POS(SCREEN.RS_VA(5))  OR EQ POS(SCREEN.RS_VA(6))  OR EQ
               POS(SCREEN.RS_VA(7))  OR
      POSIT EQ POS(SCREEN.RS_VA(8)) OR EQ
               POS(SCREEN.RS_VA(9))  OR EQ POS(SCREEN.RS_VA(10)) OR EQ
               POS(SCREEN.RS_VA(11)) OR EQ POS(SCREEN.RS_VA(12)) OR EQ
               POS(SCREEN.RS_VA(13)) OR EQ POS(SCREEN.RS_VA(14)) OR
      POSIT EQ POS(SCREEN.RS_VA(15)) THEN
    CALLNAT 'SNAVVA' PRMNAV
   END-IF
   PERFORM CHECK_DATA
   IF ERR NE 0 THEN ESCAPE TOP END-IF
  NONE VALUE
   PERFORM CHECK_DATA
 END-DECIDE
END-REPEAT
/**************************************
DEFINE SUBROUTINE CHECK_DATA
  RECOR.BN_OG(START_LINE)  := SCREEN.BN_OG
  RECOR.BN_BIC(START_LINE) := SCREEN.BN_BIC
 IF RECOR.NM_OG EQ ' ' THEN ERR := 1 POSIT := POS(RECOR.NM_OG) END-IF
 IF RECOR.AD_OG EQ ' ' THEN ERR := 2 POSIT := POS(RECOR.AD_OG) END-IF
 IF RECOR.NN_ID EQ ' ' THEN ERR := 3 POSIT := POS(RECOR.NN_ID) END-IF
 IF SCREEN.BN_OG NE 0 OR SCREEN.BN_BIC NE ' ' THEN
  DECIDE FOR FIRST CONDITION
   WHEN SCREEN.BN_OG NE 0 AND SCREEN.BN_BIC NE ' '
    KEYCB.KEYOG := KEYBC.KEYOG  := PRMNAV.OG_ID_G
    KEYCB.KEYBN := RECOR.BN_OG(START_LINE)
    KEYBC.KEYBIC := RECOR.BN_BIC(START_LINE)
    FIND (1) IBS-KBN-FILE OG-BN EQ KEYCB AND OG-BIC EQ KEYBC
     IF NO RECORD FOUND ERR := 5 POSIT := POS(RECOR.BN_BIC(START_LINE))
     ESCAPE ROUTINE END-NOREC
     SCREEN.BN_OG := IBS-KBN-FILE.BN-ID SCREEN.KR_OG := IBS-KBN-FILE.KR-OG(1)
     SCREEN.BN_BIC := IBS-KBN-FILE.MF-ID SCREEN.NAME_BN := IBS-KBN-FILE.NM-BN
     SCREEN.ADDR_BN := IBS-KBN-FILE.AD-BN
    END-FIND
   WHEN SCREEN.BN_OG NE 0 AND SCREEN.BN_BIC EQ ' '
    KEYCB.KEYOG := PRMNAV.OG_ID_G
    KEYCB.KEYBN := RECOR.BN_OG(START_LINE)
    FIND (1) IBS-KBN-FILE OG-BN EQ KEYCB
     IF NO RECORD FOUND ERR := 6 POSIT := POS(RECOR.BN_OG(START_LINE))
     ESCAPE ROUTINE END-NOREC
     SCREEN.BN_OG := IBS-KBN-FILE.BN-ID SCREEN.KR_OG := IBS-KBN-FILE.KR-OG(1)
     SCREEN.BN_BIC := IBS-KBN-FILE.MF-ID SCREEN.NAME_BN := IBS-KBN-FILE.NM-BN
     SCREEN.ADDR_BN := IBS-KBN-FILE.AD-BN
    END-FIND
   WHEN SCREEN.BN_OG EQ 0 AND SCREEN.BN_BIC NE ' '
    KEYBC.KEYOG  := PRMNAV.OG_ID_G
    KEYBC.KEYBIC := RECOR.BN_BIC(START_LINE)
    FIND (1) IBS-KBN-FILE OG-BIC EQ KEYBC
     IF NO RECORD FOUND ERR := 7 POSIT := POS(RECOR.BN_BIC(START_LINE))
     ESCAPE ROUTINE END-NOREC
     SCREEN.BN_OG := IBS-KBN-FILE.BN-ID SCREEN.KR_OG := IBS-KBN-FILE.KR-OG(1)
     SCREEN.BN_BIC := IBS-KBN-FILE.MF-ID SCREEN.NAME_BN := IBS-KBN-FILE.NM-BN
     SCREEN.ADDR_BN := IBS-KBN-FILE.AD-BN
    END-FIND
   WHEN NONE
    ERR := 4 POSIT := POS(RECOR.NM_OG) ESCAPE ROUTINE
  END-DECIDE
  RECOR.KR_OG(START_LINE)  := SCREEN.KR_OG
/*     СДВИГ РАСЧЕТНЫХ СЧЕТОВ
  FOR I = 1 TO MAX_RS
   IF SCREEN.RS_OG(I) EQ ' ' THEN
    R := I ;         V := I + 1 ;
    FOR K = V TO MAX_RS
     IF SCREEN.RS_OG(K) NE ' ' THEN
      SCREEN.RS_OG(R) := SCREEN.RS_OG(K)
      SCREEN.RS_VA(R) := SCREEN.RS_VA(K)
      SCREEN.RS_OG(K) := SCREEN.RS_VA(K) := ' '
      ADD 1 TO R               ELSE
      SCREEN.RS_OG(K) := SCREEN.RS_VA(K) := ' '
                               END-IF
    END-FOR
                             END-IF
  END-FOR
  RECOR.RS_OG(START_LINE,1:MAX_RS) := SCREEN.RS_OG(1:MAX_RS)
  RECOR.RS_VA(START_LINE,1:MAX_RS) := SCREEN.RS_VA(1:MAX_RS)
/* ПРОВЕРКА РАСЧЕТНЫХ СЧЕТОВ
  K := 0
  FOR I = 1 TO MAX_RS
   IF SCREEN.RS_OG(I) EQ ' ' THEN
      SCREEN.RS_VA(I) := ' ' ELSE
   K := 1
   IF SCREEN.RS_VA(I) EQ ' ' THEN ERR := 9 POSIT := POS(SCREEN.RS_VA(I))
   ESCAPE ROUTINE END-IF
   KEYVAL.KEYOG := PRMNAV.OG_ID_G
   KEYVAL.KEYVA := SCREEN.RS_VA(I)
   FIND IBS-KVA-FILE OG-VV = KEYVAL
    IF NO RECORD FOUND ERR := 10 POSIT := POS(SCREEN.RS_VA(I))
    ESCAPE ROUTINE END-NOREC
   END-FIND
      END-IF
  END-FOR
  IF K EQ 0 THEN ERR := 8 POSIT := POS(SCREEN.RS_OG(1))
  ESCAPE ROUTINE END-IF
                                              ELSE
  SCREEN.BN_OG := 0 ; SCREEN.BN_BIC := ' '
  SCREEN.RS_OG(1:MAX_RS) := ' ' SCREEN.RS_VA(1:MAX_RS) := ' '
                                              END-IF
  IF SEL EQ 1 THRU 15 THEN
   IF SCREEN.RS_OG(SEL) NE ' ' AND
      SCREEN.RS_VA(SEL) NE ' ' THEN
    KODIF_OR_TMP.OG_ID_G  := PRMNAV.OG_ID_G
    KODIF_OR_TMP.OR_INN   := RECOR.NN_ID
    KODIF_OR_TMP.OR_NAME  := RECOR.NM_OG
    KODIF_OR_TMP.OR_ADDR  := RECOR.AD_OG
    KODIF_OR_TMP.OR_BNK   := SCREEN.BN_OG
    KODIF_OR_TMP.OR_BIK   := SCREEN.BN_BIC
    KODIF_OR_TMP.KORR_SCH := SCREEN.KR_OG
    KODIF_OR_TMP.NAME_BN  := SCREEN.NAME_BN
    KODIF_OR_TMP.ADDR_BN  := SCREEN.ADDR_BN
    KODIF_OR_TMP.OR_RASCH := SCREEN.RS_OG(SEL)
    KODIF_OR_TMP.OR_VAL   := SCREEN.RS_VA(SEL)
    KODIF_OR_TMP.RES_OR  := 'Y'
                               END-IF
              END-IF
END-SUBROUTINE
/**************************************
DEFINE SUBROUTINE SAVE_ORG
 IF ORG_ISN NE 0 THEN
M. GET IBS-NAOR-FILE ORG_ISN
                 END-IF
    IBS-NAOR-FILE.OG-ID := PRMNAV.OG_ID_G
    IBS-NAOR-FILE.NM-OG := RECOR.NM_OG
    IBS-NAOR-FILE.AD-OG := RECOR.AD_OG
    FOR I = 1 TO MAX_BNK
     IF RECOR.BN_OG(I) NE 0 THEN
      IBS-NAOR-FILE.BN-OG(I)  := RECOR.BN_OG(I)
      FOR K = 1 TO MAX_RS
       IF RECOR.RS_OG(I,K) NE ' ' THEN
        IBS-NAOR-FILE.RS-OG(I,K) := RECOR.RS_OG(I,K)
        IBS-NAOR-FILE.RS-VA(I,K) := RECOR.RS_VA(I,K)
                                   ELSE
        IBS-NAOR-FILE.RS-OG(I,K) := ' '
        IBS-NAOR-FILE.RS-VA(I,K) := ' '
                                   END-IF
      END-FOR
                   ELSE
     IBS-NAOR-FILE.BN-OG(I)  := 0
     IBS-NAOR-FILE.RS-OG(I,1:MAX_RS) := ' '
     IBS-NAOR-FILE.RS-VA(I,1:MAX_RS) := ' '
                   END-IF
    END-FOR
    IBS-NAOR-FILE.KD-ID    := PRMNAV.OG_ID_G
    IBS-NAOR-FILE.NN-ID    := RECOR.NN_ID
    IBS-NAOR-FILE.NM-PL    := RECOR.KPP
    IBS-NAOR-FILE.NA-F-NAM := RECOR.NA_F_NAM
    IBS-NAOR-FILE.NA-F-ADR := RECOR.NA_F_ADR
    IBS-NAOR-FILE.NA-F-TEL := RECOR.NA_F_TEL
    IBS-NAOR-FILE.NA-F-DEP := RECOR.NA_F_DEP
    IBS-NAOR-FILE.VO-DI(1:8) := RECOR.VO_DI(1:8)
    IBS-NAOR-FILE.NA-F-VID := RECOR.VID-DEYAT
    IBS-NAOR-FILE.NA-F-FORMA := RECOR.FORMA-SOB
    NBFI := 'R'  NBNM := RECOR.RUKOVOD
    IBS-NAOR-FILE.NB-F(1) := #NB
    NBFI := 'G'  NBNM := RECOR.GL-BUH
    IBS-NAOR-FILE.NB-F(2) := #NB
    IBS-NAOR-FILE.UP-DT := *DATX
    IBS-NAOR-FILE.UP-PG := *PROGRAM
    IBS-NAOR-FILE.UP-ID := *INIT-ID
    IBS-NAOR-FILE.UP-US := *INIT-USER
 IF ORG_ISN NE 0 THEN
   UPDATE (M.)
                 ELSE
   STORE IBS-NAOR-FILE
                 END-IF
   END OF TRANSACTION
END-SUBROUTINE
/**************************************
DEFINE SUBROUTINE EDIT_DOP
 SET CONTROL 'N'
 INPUT USING MAP 'MAPMAND3' NO ERASE
 REPEAT
* SET WINDOW 'DOP_WIN'
  SET KEY ENTR PF1 PF2 PF3 PF4 PF5 PF6 PF7 PF8 PF9 PF10 PF11 PF12
  IF #RW = 'R'  SET KEY PF5=OFF
    C-RW := (AD=PD)
  END-IF
  INCLUDE INPPC '"NAVVOM12"' '"MAPVORM2"'
* SET WINDOW OFF
  POSIT := *CURS-FIELD
  FOR I = 1 TO 5
   IF RECOR.VO_DI(I) EQ ' ' THEN RECOR.VO_DI(I) := '-' END-IF
  END-FOR
  DECIDE ON FIRST VALUE *PF-KEY
   VALUE 'PF3'
    ESCAPE ROUTINE
   VALUE 'PF6'
    RECOR.NA_F_ADR := RECOR.NA_F_DEP := RECOR.NA_F_NAM := ' '
    RECOR.NA_F_TEL := RECOR.VO_DI(1:5) := '.'
   NONE VALUE IGNORE
  END-DECIDE
 END-REPEAT
END-SUBROUTINE
END

