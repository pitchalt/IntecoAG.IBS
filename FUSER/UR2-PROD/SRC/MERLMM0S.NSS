* >Natural Source Header 000000 /*<RO>>
* :NatName MERLMM0S
* :UID PAUL
* :Mode S
* :CP
* :Date 20071030
* :Time 1332000
* <Natural Source Header /*<<RO>
/***********************************************************************
/*
/* СИСТЕМА:
/* ПРОГРАММА:
/*
/* РАЗРАБОТЧИК:  УЗОРИН П.А.
/* ДАТА ВЫПУСКА:
/*
/* НАЗВАНИЕ:  УРОВЕНЬ БИЗНЕС РАБОТА С ЗАГОЛОВКОМ
/*
/* КОМАНДЫ:
/*   READ
/*   ADD
/*   UPDATE
/*   DELETE
/*
/* ИСПРАВЛЕНИЯ:
/*
/***********************************************************************
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING XXCTXX0A
PARAMETER USING MERLMM0A
PARAMETER USING UXCSXX0A
/*
LOCAL USING XXXXEC0L
LOCAL USING XBTXMN0A
/*
LOCAL USING MBRLHM0A
LOCAL USING MBRLMM0A
LOCAL USING MBRLPM0A
LOCAL USING MBRLPL0A
/*
LOCAL USING MBLKHM0A
LOCAL USING MBLKRM0A
LOCAL USING MBMTMN0A
LOCAL USING MBMZMN0A
LOCAL USING MBSAST0A
LOCAL USING MBMTSA1A
LOCAL USING MBSAST0L
LOCAL USING MBEIMN0A
LOCAL USING MBZKMN0A
LOCAL USING MBBSMN0A
LOCAL USING XXSTMN0L
/*
LOCAL USING UBODMN0A
/*
LOCAL
1 #OD-IS-NOT-USED   (L)
1 #I                (I4)
1 #DATA             (A8)
1 REDEFINE #DATA
2 #DATA-YYYY        (N4)
1 #BASE-COL         (P8.7)
END-DEFINE
DEFINE SUBROUTINE MERLMM0S
RESET XXERX00A
/*
DECIDE ON FIRST VALUE ME-COMMAND
  VALUE "INIT"
     PERFORM RECORD-INIT
  VALUE "READ"
     PERFORM RECORD-READ
  VALUE "CHECK-LIM"
     PERFORM CHECK-LIMIT
     PERFORM SALDO-STACK-FREE
     IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
     PERFORM RECORD-EXTEND
  VALUE "CHECK-COL"
     PERFORM CHECK-COL
     PERFORM RECORD-EXTEND
  VALUE "UPDATE"
     PERFORM RECORD-UPDATE
     PERFORM SALDO-STACK-FREE
  VALUE "ADD"
     PERFORM RECORD-ADD
     PERFORM SALDO-STACK-FREE
  VALUE "CONFIRM"
     PERFORM RECORD-CONFIRM
  VALUE "DELETE"
     PERFORM RECORD-DELETE
  NONE VALUE
     MOVE ME-COMMAND TO ERROR-ADDITION(1)
     *ERROR-NR := EC-UNKNOW-COMMAND
END-DECIDE
/*
DEFINE SUBROUTINE RECORD-EXTEND
  IF MERLMM0A.MT-ID NE 0 THEN
     MOVE MERLMM0A.MT-ID TO MBMTMN0A.MT-ID
     MOVE "READ" TO MBMTMN0A.BL-COMMAND
     PERFORM MBMTMN0S XXERX00A XXCTXX0A MBMTMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE MBMTMN0A.MT-CODE TO MERLMM0A.MT-CODE
     MOVE MBMTMN0A.MT-NAME TO MERLMM0A.MT-NAME
     MOVE MBMTMN0A.PLACE TO MERLMM0A.MT-PLACE
     MOVE MBMTMN0A.GM-ID TO MERLMM0A.GM-ID
     MOVE MBMTMN0A.EI-ID TO MERLMM0A.BASE-EI-ID
  END-IF
  IF MERLMM0A.LK-ID NE 0 THEN
     MOVE MERLMM0A.LK-ID TO MBLKHM0A.LK-ID
     MOVE "READ" TO MBLKHM0A.BL-COMMAND
     PERFORM MBLKHM0S XXERX00A XXCTXX0A MBLKHM0A UXCSXX0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE MBLKHM0A.LK-NUMBER TO MERLMM0A.LK-NUMBER
     MOVE MBLKHM0A.LK-DATE TO MERLMM0A.LK-DATE
     MOVE MBLKHM0A.LK-COL TO MERLMM0A.LK-COL
     /* Определим плановую единицу измерени
     MOVE MBLKHM0A.EI-ID TO MERLMM0A.PLAN-EI-ID
     /* Определим заказ
     MOVE MBLKHM0A.ZK-ID TO MBZKMN0A.ZK-ID
     MOVE "READ" TO MBZKMN0A.BL-COMMAND
     PERFORM MBZKMN0S XXERX00A XXCTXX0A MBZKMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE MBZKMN0A.ZK-ID TO MERLMM0A.ZK-ID
     MOVE MBZKMN0A.ZK-CODE TO MERLMM0A.ZK-CODE
     /* Определим счет
     MOVE MBZKMN0A.BS-ID TO MBBSMN0A.BS-ID
     MOVE "READ" TO MBBSMN0A.BL-COMMAND
     PERFORM MBBSMN0S XXERX00A XXCTXX0A MBBSMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE MBBSMN0A.BS-ID TO MERLMM0A.BS-ID
     MOVE MBBSMN0A.BS-CODE TO MERLMM0A.BS-CODE
     MOVE MBBSMN0A.BS-NAME TO MERLMM0A.BS-NAME
  ELSE
     RESET MERLMM0A.LK-NUMBER MERLMM0A.LK-DATE
           MERLMM0A.ZK-ID MERLMM0A.ZK-CODE
           MERLMM0A.BS-ID MERLMM0A.BS-CODE MERLMM0A.BS-NAME
  END-IF
/*  IF MERLMM0A .EI-ID NE 0 THEN
/*     MOVE MERLMM0A.EI-ID TO MBEIMN0A.EI-ID
/*     MOVE "READ" TO MBEIMN0A.BL-COMMAND
/*     PERFORM MBEIMN0S XXERX00A XXCTXX0A MBEIMN0A
/*     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
/*     MOVE MBEIMN0A.EI-CODE TO MERLMM0A.EI-CODE
/*     MOVE MBEIMN0A.EI-SHORT-NAME TO MERLMM0A.EI-SHORT-NAME
/*  END-IF
  IF MERLMM0A.MZ-ID NE 0 THEN
     /* Читаем заменитель
     MOVE MERLMM0A.MZ-ID TO MBMZMN0A.MZ-ID
     MOVE "READ" TO MBMZMN0A.BL-COMMAND
     PERFORM MBMZMN0S XXERX00A XXCTXX0A MBMZMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     /* Читаем материал
     MOVE MBMZMN0A.FROM-MT-ID TO MBMTMN0A.MT-ID
     MOVE "READ" TO MBMTMN0A.BL-COMMAND
     PERFORM MBMTMN0S XXERX00A XXCTXX0A MBMTMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE MBMTMN0A.MT-ID TO MERLMM0A.MZ-MT-ID
     MOVE MBMTMN0A.MT-CODE TO MERLMM0A.MZ-MT-CODE
     MOVE MBMTMN0A.MT-NAME TO MERLMM0A.MZ-MT-NAME
     MOVE MBMZMN0A.COL TO MERLMM0A.MZ-COL
  ELSE
     RESET MERLMM0A.MZ-MT-ID MERLMM0A.MZ-MT-CODE
           MERLMM0A.MZ-MT-NAME MERLMM0A.MZ-COL
  END-IF
  IF MERLMM0A.BASE-EI-ID NE 0 THEN
     MOVE MERLMM0A.BASE-EI-ID TO MBEIMN0A.EI-ID
     MOVE "READ" TO MBEIMN0A.BL-COMMAND
     PERFORM MBEIMN0S XXERX00A XXCTXX0A MBEIMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE MBEIMN0A.EI-CODE TO MERLMM0A.BASE-EI-CODE
     MOVE MBEIMN0A.EI-SHORT-NAME TO MERLMM0A.BASE-EI-SHORT-NAME
  END-IF
  IF MERLMM0A.PLAN-EI-ID NE 0 THEN
     MOVE MERLMM0A.PLAN-EI-ID TO MBEIMN0A.EI-ID
     MOVE "READ" TO MBEIMN0A.BL-COMMAND
     PERFORM MBEIMN0S XXERX00A XXCTXX0A MBEIMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE MBEIMN0A.EI-CODE TO MERLMM0A.PLAN-EI-CODE
     MOVE MBEIMN0A.EI-SHORT-NAME TO MERLMM0A.PLAN-EI-SHORT-NAME
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-INIT
  IGNORE
END-SUBROUTINE
/*
DEFINE SUBROUTINE CHECK-LIMIT
  IF MERLMM0A.RL-ID EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ATTRIBUTE-REQUIRED
  END-IF
  IF MERLMM0A.MT-ID EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ATTRIBUTE-REQUIRED
  END-IF
  /* читаем заголовок
  MOVE MERLMM0A.RL-ID TO MBRLHM0A.RL-ID
  MOVE "READ" TO MBRLHM0A.BL-COMMAND
  PERFORM MBRLHM0S XXERX00A XXCTXX0A MBRLHM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /* читаем материал определ ем метод LIFO FIFO
  MOVE MERLMM0A.MT-ID  TO MBMTMN0A.MT-ID
  MOVE "READHOLD" TO MBMTMN0A.BL-COMMAND
  PERFORM MBMTMN0S XXERX00A XXCTXX0A MBMTMN0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  MOVE MBMTMN0A.EI-ID TO MERLMM0A.BASE-EI-ID
  /* читаем операцию
  MOVE XXCTXX0A.OD-ID TO UBODMN0A.OD-ID
  MOVE "READ" TO UBODMN0A.BL-COMMAND
  PERFORM UBODMN0S XXERX00A XXCTXX0A UBODMN0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /*
  RESET MERLMM0A.BASE-COL-LIMIT MERLMM0A.PLAN-COL-LIMIT
        MERLMM0A.CENA-SUMMA-LIMIT
  /* читаем лимит ЛЗК
  PERFORM SALDO-STACK-INIT
  MOVE UBODMN0A.OD-IT-ID(2) TO MBMTSA1A.IT-ID(1)
  MOVE MERLMM0A.RLM-ID TO MBMTSA1A.DR-EXCLUDE
  MOVE MERLMM0A.LK-ID TO MBMTSA1A.LK-ID
  MOVE "LIFO" TO MBMTSA1A.BL-COMMAND
  PERFORM MBMTSA1S XXERX00A XXCTXX0A MBSAST0A MBMTSA1A UXCSXX0A
  /*  WRITE 'limit lzk' RETURN-CODE XXERX00A.ERROR-NUMBER
  /*MBMTSA1A.PR-ID MBMTSA1A.PRIH-COL MBMTSA1A.PRIH-EI-ID MBMTSA1A.BASE-COL MBMTSA1A.BASE-EI-ID MBMTSA1A.BALC-SUMMA
  IF RETURN-CODE EQ EC-OBJECT-NOT-FOUND THEN
     RETURN-CODE := 2416
     ESCAPE ROUTINE
  ELSE
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  END-IF
  FOR #I = 1 TO MBSAST0A.STACK-LEN
     MOVE #I TO MBSAST0L.STACK-POS PERFORM SALDO-READ
     IF RETURN-CODE NE 0 THEN *ERROR-NR := RETURN-CODE END-IF
     ADD MBSAST0L.PLAN-COL TO MERLMM0A.PLAN-COL-LIMIT
/*     MOVE MBSAST0L.PLAN-EI-ID TO MERLMM0A.PLAN-EI-ID
  END-FOR
  IF MERLMM0A.PLAN-COL-LIMIT LE 0 THEN
     RETURN-CODE := 2416
     ESCAPE ROUTINE
  END-IF
  PERFORM SALDO-STACK-INIT
  /* читаем лимит остатков
  RESET MBMTSA1A
  MOVE UBODMN0A.OD-IT-ID(1) TO MBMTSA1A.IT-ID(1)
  MOVE MERLMM0A.RLM-ID TO MBMTSA1A.DR-EXCLUDE
  MOVE MBRLHM0A.IN-MO-ID TO MBMTSA1A.MO-ID
  MOVE MERLMM0A.MT-ID  TO MBMTSA1A.MT-ID
/*  MOVE MERLMM0A.EI-ID TO MBMTSA1A.PRIH-EI-ID
  MOVE MERLMM0A.BASE-EI-ID TO MBMTSA1A.BASE-EI-ID
  MOVE "LIFO" TO MBMTSA1A.BL-COMMAND
  PERFORM MBMTSA1S XXERX00A XXCTXX0A MBSAST0A MBMTSA1A UXCSXX0A
/*  WRITE 'limit' RETURN-CODE MBMTSA1A.PR-ID MBMTSA1A.PRIH-COL MBMTSA1A.PRIH-EI-ID MBMTSA1A.BASE-COL MBMTSA1A.BASE-EI-ID MBMTSA1A.BALC-SUMMA
  IF RETURN-CODE EQ EC-OBJECT-NOT-FOUND THEN
     RETURN-CODE := 2412
     ESCAPE ROUTINE
  ELSE
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  END-IF
  FOR #I = 1 TO MBSAST0A.STACK-LEN
     MOVE #I TO MBSAST0L.STACK-POS PERFORM SALDO-READ
     IF RETURN-CODE NE 0 THEN *ERROR-NR := RETURN-CODE END-IF
/*     IF MBSAST0L.BASE-COL LE 0 THEN ESCAPE TOP END-IF
     ADD MBSAST0L.BASE-COL TO MERLMM0A.BASE-COL-LIMIT
     ADD MBSAST0L.BALC-SUMMA TO MERLMM0A.CENA-SUMMA-LIMIT
  END-FOR
  IF MERLMM0A.BASE-COL-LIMIT LE 0 THEN
     RETURN-CODE := 2412
     ESCAPE ROUTINE
  END-IF
/*  WRITE 'limit' MERLMM0A.BASE-COL-LIMIT MERLMM0A.PLAN-COL-LIMIT
  /*
END-SUBROUTINE
/*
DEFINE SUBROUTINE CHECK-COL
  IF MERLMM0A.BASE-COL GT MERLMM0A.BASE-COL-LIMIT THEN
     MERLMM0A.BASE-COL := MERLMM0A.BASE-COL-LIMIT
  END-IF
  IF MERLMM0A.BASE-COL EQ MERLMM0A.BASE-COL-LIMIT THEN
     MERLMM0A.CENA-SUMMA := MERLMM0A.CENA-SUMMA-LIMIT
  END-IF
  COMPUTE ROUNDED MERLMM0A.CENA-SUMMA = MERLMM0A.CENA-SUMMA-LIMIT *
        MERLMM0A.BASE-COL  / MERLMM0A.BASE-COL-LIMIT
/*
  MOVE MERLMM0A.LK-ID TO MBLKHM0A.LK-ID
  MOVE "READ" TO MBLKHM0A.BL-COMMAND
  PERFORM MBLKHM0S XXERX00A XXCTXX0A MBLKHM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
/*
/*  WRITE 'mt' MERLMM0A.MT-ID MBLKHM0A.MT-ID
  IF MERLMM0A.MT-ID EQ MBLKHM0A.MT-ID THEN
     MERLMM0A.PLAN-COL := MERLMM0A.BASE-COL
  ELSE
     MOVE MERLMM0A.MZ-ID TO MBMZMN0A.MZ-ID
     MOVE "READ" TO MBMZMN0A.BL-COMMAND
     PERFORM MBMZMN0S XXERX00A XXCTXX0A MBMZMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MERLMM0A.PLAN-COL := MERLMM0A.BASE-COL / MBMZMN0A.COL
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-READ
  /* Читаем саму запись
  MOVE MERLMM0A.RLM-ID TO MBRLMM0A.RLM-ID
  MOVE "READ" TO MBRLMM0A.BL-COMMAND
  PERFORM MBRLMM0S XXERX00A XXCTXX0A MBRLMM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /* Читаем техническую запись контейнера партий
  MOVE MERLMM0A.RLM-ID TO MBRLPM0A.RLP-ID
  MOVE "READ-TR" TO MBRLPM0A.BL-COMMAND
  PERFORM MBRLPM0S XXERX00A XXCTXX0A MBRLPM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /* Расшифровываем аналитики
  MOVE BY NAME MBRLPM0A TO MERLMM0A
  MOVE BY NAME MBRLMM0A TO MERLMM0A
  PERFORM RECORD-EXTEND
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-PREPARE
  IF MERLMM0A.MT-ID EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ATTRIBUTE-REQUIRED
  END-IF
  IF MERLMM0A.BASE-COL EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ATTRIBUTE-REQUIRED
  END-IF
  IF MERLMM0A.LK-ID EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ATTRIBUTE-REQUIRED
  END-IF
  PERFORM CHECK-LIMIT
  IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
  PERFORM CHECK-COL
  PERFORM RECORD-EXTEND
END-SUBROUTINE
/*
DEFINE SUBROUTINE PARTY-CONTAINER-ADD
  /* блокируем ЛЗК
  MOVE MBRLMM0A.LK-ID TO MBLKHM0A.LK-ID
  MOVE "LOCK" TO MBLKHM0A.BL-COMMAND
  PERFORM MBLKHM0S XXERX00A XXCTXX0A MBLKHM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /*
  MOVE "READ" TO MBLKHM0A.BL-COMMAND
  PERFORM MBLKHM0S XXERX00A XXCTXX0A MBLKHM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /*
  MOVE MBRLMM0A.BASE-COL TO #BASE-COL
  FOR #I = 1 TO MBSAST0A.STACK-LEN
     IF #BASE-COL LE 0 THEN ESCAPE BOTTOM END-IF
     MOVE #I TO MBSAST0L.STACK-POS PERFORM SALDO-READ
     IF RETURN-CODE NE 0 THEN *ERROR-NR := RETURN-CODE END-IF
     IF MBSAST0L.BASE-COL LE 0 THEN ESCAPE TOP END-IF
     IF MBSAST0L.BASE-EI-ID NE MERLMM0A.BASE-EI-ID THEN
        ESCAPE TOP
     END-IF
/*     WRITE 'do' #BASE-COL MBSAST0L.BASE-COL MBSAST0L.PRIH-COL MBSAST0L.BALC-SUMMA
     IF MBSAST0L.BASE-COL GT #BASE-COL THEN
/*        COMPUTE ROUNDED MBSAST0L.PLAN-COL = MBSAST0L.PLAN-COL *
/*              #BASE-COL / MBSAST0L.BASE-COL
        COMPUTE ROUNDED MBSAST0L.PRIH-COL = MBSAST0L.PRIH-COL *
              #BASE-COL / MBSAST0L.BASE-COL
        COMPUTE ROUNDED MBSAST0L.BALC-SUMMA = MBSAST0L.BALC-SUMMA *
              #BASE-COL / MBSAST0L.BASE-COL
        MBSAST0L.BASE-COL := #BASE-COL
     END-IF
/*     WRITE 'po' #BASE-COL MBSAST0L.BASE-COL MBSAST0L.PRIH-COL MBSAST0L.BALC-SUMMA
     /* Заполним плановые единицы
     MOVE MERLMM0A.PLAN-EI-ID TO MBSAST0L.PLAN-EI-ID
     COMPUTE ROUNDED MBSAST0L.PLAN-COL = MBSAST0L.BASE-COL *
              MERLMM0A.PLAN-COL / MERLMM0A.BASE-COL
     /* Модифицируем ЛЗК
     RESET MBLKRM0A
     MOVE MBRLMM0A.LK-ID TO MBLKRM0A.LKH-ID
     MOVE MBRLMM0A.RL-ID TO MBLKRM0A.RL-ID
     MOVE MBRLMM0A.MT-ID TO MBLKRM0A.MT-ID
     MOVE MBSAST0L.PR-ID TO MBLKRM0A.PR-ID
/*     MBlkrM0A.CENA
     MOVE MBSAST0L.BALC-SUMMA TO MBLKRM0A.CENA-SUMMA
     MOVE MBSAST0L.PLAN-COL TO MBLKRM0A.PLAN-COL
     MOVE MERLMM0A.PLAN-EI-ID TO MBLKRM0A.PLAN-EI-ID
     MOVE MBSAST0L.BASE-COL TO MBLKRM0A.BASE-COL
     MOVE MBSAST0L.BASE-EI-ID TO MBLKRM0A.BASE-EI-ID
/*
     MOVE "ADD" TO MBLKRM0A.BL-COMMAND
     PERFORM MBLKRM0S XXERX00A XXCTXX0A MBLKRM0A UXCSXX0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     /*
     RESET MBRLPM0A
     MOVE MBSAST0L.PR-ID TO MBRLPM0A.PR-ID
     MOVE MBRLMM0A.RLM-ID TO MBRLPM0A.RLM-ID
     MOVE MBLKRM0A.LKR-ID TO MBRLPM0A.LKR-ID
     MOVE MBSAST0L.DT-ID TO MBRLPM0A.DT-ID
     MOVE MBSAST0L.BALC-SUMMA TO MBRLPM0A.CENA-SUMMA
     MOVE MBSAST0L.PRIH-COL TO MBRLPM0A.COL
     MOVE MBSAST0L.PRIH-EI-ID TO MBRLPM0A.EI-ID
     MOVE MBSAST0L.BASE-COL TO MBRLPM0A.BASE-COL
     MOVE MBSAST0L.BASE-EI-ID TO MBRLPM0A.BASE-EI-ID
     MOVE MBSAST0L.PLAN-COL TO MBRLPM0A.PLAN-COL
     MOVE MBSAST0L.PLAN-EI-ID TO MBRLPM0A.PLAN-EI-ID
     COMPUTE ROUNDED MBRLPM0A.CENA = MBRLPM0A.CENA-SUMMA / MBRLPM0A.BASE-COL
     MOVE "ADD" TO MBRLPM0A.BL-COMMAND
     PERFORM MBRLPM0S XXERX00A XXCTXX0A MBRLPM0A UXCSXX0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     SUBTRACT MBSAST0L.BASE-COL FROM #BASE-COL
  END-FOR
END-SUBROUTINE
/*
DEFINE SUBROUTINE PARTY-CONTAINER-DEL
  /* блокируем ЛЗК
  MOVE MBRLMM0A.LK-ID TO MBLKHM0A.LK-ID
  MOVE "LOCK" TO MBLKHM0A.BL-COMMAND
  PERFORM MBLKHM0S XXERX00A XXCTXX0A MBLKHM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /*
  MOVE MBRLMM0A.RLM-ID TO MBRLPL0A.RLM-ID
  MOVE "BOTTOM" TO MBRLPL0A.BL-COMMAND
  MOVE 20 TO MBRLPL0A.DR-LIST-READ
  REPEAT
     PERFORM MBRLPL0S XXERX00A XXCTXX0A MBRLPL0A UXCSXX0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE "PREV" TO MBRLPL0A.BL-COMMAND
     FOR #I = 1 TO MBRLPL0A.DR-LIST-C
        MOVE MBRLPL0A.RLP-ID(21 - #I) TO MBRLPM0A.RLP-ID
        MOVE "READ" TO MBRLPM0A.BL-COMMAND
        PERFORM MBRLPM0S XXERX00A XXCTXX0A MBRLPM0A UXCSXX0A
        IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
        /*
        MOVE MBRLPM0A.LKR-ID TO MBLKRM0A.LKR-ID
        MOVE "READ" TO MBLKRM0A.BL-COMMAND
        PERFORM MBLKRM0S XXERX00A XXCTXX0A MBLKRM0A UXCSXX0A
        IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
        /*
        MOVE "DELETE" TO MBLKRM0A.BL-COMMAND
        PERFORM MBLKRM0S XXERX00A XXCTXX0A MBLKRM0A UXCSXX0A
        IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
        /*
        MOVE "DELETE" TO MBRLPM0A.BL-COMMAND
        PERFORM MBRLPM0S XXERX00A XXCTXX0A MBRLPM0A UXCSXX0A
        IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     END-FOR
     UNTIL MBRLPL0A.IS-TOP
  END-REPEAT
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-ADD
  IF MERLMM0A.RL-ID EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ATTRIBUTE-REQUIRED
  END-IF
  RESET MERLMM0A.RLM-ID MERLMM0A.IS-DR-CONFIRMED
  /* подготовим обновление
  PERFORM RECORD-PREPARE
  IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
  /* сохран ем запись
  MOVE BY NAME MERLMM0A TO MBRLMM0A
  MOVE "ADD" TO MBRLMM0A.BL-COMMAND
  PERFORM MBRLMM0S XXERX00A XXCTXX0A MBRLMM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  MOVE MBRLMM0A.RLM-ID TO MERLMM0A.RLM-ID
  PERFORM PARTY-CONTAINER-ADD
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-UPDATE
  IF MERLMM0A.RL-ID EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ID-REQUIRED
  END-IF
  IF MERLMM0A.RLM-ID EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ID-REQUIRED
  END-IF
  /* читаем запись
  MOVE MERLMM0A.RLM-ID TO MBRLMM0A.RLM-ID
  MOVE "READ" TO MBRLMM0A.BL-COMMAND
  PERFORM MBRLMM0S XXERX00A XXCTXX0A MBRLMM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  MOVE MBRLMM0A.RL-ID TO MERLMM0A.RL-ID
  MOVE MBRLMM0A.IS-DR-CONFIRMED TO MERLMM0A.IS-DR-CONFIRMED
  /* проводим обновление
  PERFORM RECORD-PREPARE
  IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
  /* сохран ем запись
  MOVE BY NAME MERLMM0A TO MBRLMM0A
  /*
  PERFORM PARTY-CONTAINER-DEL
/*  MOVE MERLMM0A.RLM-ID TO MBRLMM0A.RLM-ID
  MOVE "UPDATE" TO MBRLMM0A.BL-COMMAND
  PERFORM MBRLMM0S XXERX00A XXCTXX0A MBRLMM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  PERFORM PARTY-CONTAINER-ADD
END-SUBROUTINE
/*
/*
DEFINE SUBROUTINE RECORD-CONFIRM
  /* читаем запись
  MOVE MERLMM0A.RLM-ID TO MBRLMM0A.RLM-ID
  MOVE "READ" TO MBRLMM0A.BL-COMMAND
  PERFORM MBRLMM0S XXERX00A XXCTXX0A MBRLMM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /*
  MOVE MERLMM0A.CONF-COL TO MBRLMM0A.CONF-COL
  MOVE MERLMM0A.RLM-ID TO MBRLPM0A.RLP-ID
  MOVE "READ-TR" TO MBRLPM0A.BL-COMMAND
  PERFORM MBRLPM0S XXERX00A XXCTXX0A MBRLPM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /*
/*  WRITE MERLMM0A.CONF-COL MBRLPM0A.BASE-COL
  IF MERLMM0A.CONF-COL EQ MBRLPM0A.BASE-COL THEN
     MOVE TRUE TO MBRLMM0A.IS-DR-CONFIRMED
  ELSE
     MOVE FALSE TO MBRLMM0A.IS-DR-CONFIRMED
  END-IF
  /* Не производим пересчет проводок
  #OD-IS-NOT-USED := XXCTXX0A.OD-IS-NOT-USED
  XXCTXX0A.OD-IS-NOT-USED := TRUE
  /*
  MOVE "UPDATE" TO MBRLMM0A.BL-COMMAND
  PERFORM MBRLMM0S XXERX00A XXCTXX0A MBRLMM0A UXCSXX0A
  /* востановим обработку проводок до возможного исключени
  XXCTXX0A.OD-IS-NOT-USED := #OD-IS-NOT-USED
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /*
  MOVE BY NAME MBRLMM0A TO MERLMM0A
  PERFORM RECORD-EXTEND
  /*
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-DELETE
  IF MERLMM0A.RL-ID EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ID-REQUIRED
  END-IF
  IF MERLMM0A.RLM-ID EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ID-REQUIRED
  END-IF
  MOVE MERLMM0A.RLM-ID TO MBRLMM0A.RLM-ID
  MOVE "READ" TO MBRLMM0A.BL-COMMAND
  PERFORM MBRLMM0S XXERX00A XXCTXX0A MBRLMM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /*
  MOVE MERLMM0A.RL-ID TO MBRLHM0A.RL-ID
  MOVE "READ" TO MBRLHM0A.BL-COMMAND
  PERFORM MBRLHM0S XXERX00A XXCTXX0A MBRLHM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /*
  IF MBRLHM0A.RL-ID NE MBRLMM0A.RL-ID THEN
     *ERROR-NR := EC-RECORD-MISMATCH
  END-IF
  PERFORM PARTY-CONTAINER-DEL
  MOVE MERLMM0A.RLM-ID TO MBRLMM0A.RLM-ID
  MOVE MERLMM0A.RL-ID TO MBRLMM0A.RL-ID
  MOVE "DELETE" TO MBRLMM0A.BL-COMMAND
  PERFORM MBRLMM0S XXERX00A XXCTXX0A MBRLMM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
END-SUBROUTINE
/*
INCLUDE XXSTMN4C "MBSAST0A" "MBSAST0L-CONST" "MBSAST0L"
        "SALDO-STACK-INIT" "SALDO-STACK-FREE" "SALDO-STACK-REALLOC"
        "SALDO-PUSH" "SALDO-READ" "SALDO-WRITE" "SALDO-LOCATE"
/*
INCLUDE XXERSY1C
END-SUBROUTINE
END
