* >Natural Source Header 000000 /*<RO>>
* :NatName XPMOSH0S
* :UID INTECO
* :Mode S
* :CP
* :Date 20060629
* :Time 1235000
* <Natural Source Header /*<<RO>
/***********************************************************************
/*
/* яхярелю: ARM-K
/* опнцпюллю: онхяй б яопюбнвмхйе
/*
/* пюгпюанрвхй:
/* дюрю бшосяйю:
/*
/* мюгбюмхе: онхяй б яопюбнвмхйе люрепхюкнб
/* йнлюмдш:
/*  - LOCATE
/*  - SELECT
/*
/* хяопюбкемхъ:
/*
/***********************************************************************
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING XXCTXX0A
PARAMETER USING XPMOSH0A
/*
LOCAL USING XXXXEC0L
LOCAL USING XPMOSC0L
LOCAL USING XPMOSR0L
LOCAL USING STEKL
LOCAL USING IBS-MOL
LOCAL
1 #MO-ID      (N15)
1 REDEFINE #MO-ID
2 BLANK       (N5)
2 OG-ID       (N5)
2 MO-ID       (N5)
/*
1 #COUNT      (I4)
1 #FLAG       (L)
1 #POSITION   (I4)
1 #SELECTED   (P13)
1 #MO-CODE    (N5)
/*
1 CNTST(N5) INIT < 200 >
1 LEN-ST-MO(B4) INIT < 90 >
1 STEKMO
2 MO-CODE  (N5)
2 MO-PO(N5)
2 MO-NAME  (A80)
1 KEYMO1(A10)
1 REDEFINE KEYMO1
  2 KEYMO1OG(N5)  2 KEYMO1MO(N5)
1 KEYMO2(A10)
1 REDEFINE KEYMO2
  2 KEYMO2OG(N5)  2 KEYMO2MO(N5)
1 C-Z(C/7)
1 #SRT1  (B4)
1 #SRT2  (B4)
END-DEFINE
DEFINE SUBROUTINE XPMOSH0S
/*
DEFINE WINDOW WINDOW-RESULT
  SIZE 20*80
  BASE 5/1
  TITLE 'мюидеммше л/н кхжю'
  FRAMED ON
/*
DEFINE WINDOW WINDOW-CRITERY
  SIZE 18*80
  BASE 7/1
  TITLE 'оюпюлерпш нранпю л/н кхж'
  FRAMED ON
/*
SET KEY ALL
SET CONTROL 'MT'
RESET RETURN-CODE XPMOSH0A.MO-RESULT
/*MOVE BY NAME XPMOSH0A TO XPMOSC0L
IF MO-SEARCH IS (N5) THEN
  XPMOSC0L.MO-CODE := VAL(MO-SEARCH )
ELSE
  MOVE MO-SEARCH TO XPMOSC0L.MO-NAME
END-IF
/*
DECIDE ON FIRST VALUE SH-COMMAND
  VALUE 'LOCATE'
     PERFORM MO-LOCATE
  VALUE 'SELECT'
     PERFORM MO-SELECT
  NONE VALUE
     INCLUDE XXERUS1C '2201'
END-DECIDE
/*
IF XPMOSH0A.MO-ID NE 0 THEN
  MOVE XPMOSH0A.MO-ID TO #MO-ID.MO-ID
  #MO-ID.OG-ID := MO-OG-ID
  MOVE #MO-ID TO XPMOSH0A.MO-ID
  MOVE XPMOSH0A.MO-PO TO #MO-ID.MO-ID
  MOVE #MO-ID TO XPMOSH0A.DP-ID
END-IF
/*
SET WINDOW OFF
/*
DEFINE SUBROUTINE MO-LOCATE
  PERFORM MO-SEARCH
  IF #COUNT EQ 0 THEN
     INCLUDE XXERUS1C '2406'
  ELSE
     IF #COUNT EQ 1 THEN
        MOVE BY NAME STEKMO TO XPMOSH0A
        MOVE STEKMO.MO-CODE TO XPMOSH0A.MO-ID
        ESCAPE ROUTINE
     END-IF
     PERFORM MO-SHOW
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE MO-SELECT
  PERFORM MO-CRITERY
  IF *PF-KEY NE 'PF3' THEN
     PERFORM MO-SHOW
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE MO-SHOW
  SET WINDOW 'WINDOW-RESULT'
  SET KEY NAMED OFF
  SET KEY ENTR NAMED 'бшапр'
  SET KEY PF3 NAMED 'бшунд'
  SET KEY PF7 NAMED 'мюгюд'
  SET KEY PF8 NAMED 'боепед'
  SET KEY PF6 NAMED 'оюпюл'
  RESET #SELECTED
  #N := 1
  REPEAT
     PERFORM MO-LIST
     INPUT WINDOW ='WINDOW-RESULT' USING MAP 'XPMOSR0M'
     IF *PF-KEY EQ 'PF6' THEN
        PERFORM MO-CRITERY
        SET WINDOW 'WINDOW-RESULT'
        SET KEY NAMED OFF
        SET KEY ENTR NAMED 'бшапр'
        SET KEY PF3 NAMED 'бшунд'
        SET KEY PF7 NAMED 'боепд'
        SET KEY PF8 NAMED 'мюгюд'
        SET KEY PF6 NAMED 'оюпюл'
        RESET #SELECTED
     END-IF
     IF *PF-KEY EQ 'PF3' THEN
        RESET #SELECTED
        ESCAPE BOTTOM
     END-IF
     IF *PF-KEY EQ 'PF7' AND #N > 7
        ADD -7 TO #N
     END-IF
     IF *PF-KEY EQ 'PF8' AND #K < #COUNT
        ADD 7 TO #N
     END-IF
     IF *PF-KEY EQ 'ENTR' THEN
        FOR #I = 1 TO 7
           IF *CURS-FIELD EQ POS(CP-CMD(#I)) THEN
              #SELECTED := XPMOSR0L.MO-CODE(#I)
              XPMOSH0A.MO-CODE := XPMOSR0L.MO-CODE(#I)
              XI := #N + #I - 1  CALL 'RWSX' XI STEKMO.MO-CODE XR XN1
              XPMOSH0A.MO-ID := XPMOSH0A.MO-CODE
              XPMOSH0A.MO-NAME := STEKMO.MO-NAME
              XPMOSH0A.MO-PO   := STEKMO.MO-PO
              ESCAPE ROUTINE
           END-IF
        END-FOR
     END-IF
  END-REPEAT
END-SUBROUTINE
/*
DEFINE SUBROUTINE MO-CRITERY
  SET WINDOW 'WINDOW-CRITERY'
  SET KEY NAMED OFF
  SET KEY ENTR NAMED 'хяйюр'
  SET KEY PF3 NAMED 'бшунд'
  REPEAT
     INPUT USING MAP 'XPMOSC0M'
     IF *PF-KEY EQ 'PF3' THEN
        RESET #SELECTED
        ESCAPE BOTTOM
     END-IF
     IF *PF-KEY EQ 'ENTR'
        PERFORM MO-SEARCH
        ESCAPE ROUTINE
     END-IF
  END-REPEAT
END-SUBROUTINE
/*
DEFINE SUBROUTINE MO-LIST
  RESET XPMOSR0L.MO-LIST(*)
  #K := #N + 6  #L := 0  C-Z(*) := (AD=PN)
  FOR #I #N #K
    IF #I <= #COUNT  XI := #I  CALL 'RWSX' XI STEKMO.MO-CODE XR XN1
      #SELECTED := STEKMO.MO-CODE
      ADD 1 TO #L  RESET C-Z(#L)
      MOVE BY NAME STEKMO TO XPMOSR0L.MO-LIST(#L)
    END-IF
  END-FOR
END-SUBROUTINE
/*
DEFINE SUBROUTINE MO-SEARCH
  XI := CNTST  CALL 'GTSX' LEN-ST-MO XI XN1
  XW := #N := 1  KEYMO1OG := KEYMO2OG := MO-OG-ID  RESET #COUNT
  DECIDE FOR FIRST CONDITION
    WHEN XPMOSC0L.MO-CODE NE 0
     KEYMO1MO := XPMOSC0L.MO-CODE
     FIND IBS-KMO-FILE OG-MO = KEYMO1
       PERFORM MO2STEK
     END-FIND
    WHEN XPMOSC0L.MO-PO NE 0 AND XPMOSC0L.MO-NAME = ' '
     KEYMO1MO := 1  KEYMO2MO := 99999
     FIND IBS-KMO-FILE OG-MO = KEYMO1 THRU KEYMO2
       ACCEPT IF PM-ID = XPMOSC0L.MO-PO
       PERFORM MO2STEK
     END-FIND
    WHEN  XPMOSC0L.MO-NAME NE ' '
     KEYMO1MO := 1  KEYMO2MO := 99999
     FIND IBS-KMO-FILE OG-MO = KEYMO1 THRU KEYMO2
       EXAMINE NO-ID XPMOSC0L.MO-NAME GIVING POSITION #I
       IF #I NE 0  PERFORM MO2STEK  END-IF
     END-FIND
    WHEN NONE
     KEYMO1MO := 1  KEYMO2MO := 99999
     FIND IBS-KMO-FILE OG-MO = KEYMO1 THRU KEYMO2
       PERFORM MO2STEK
     END-FIND
   END-DECIDE
   MOVE 1 TO #SRT1
   MOVE 5 TO #SRT2
   CALL "SRTX" #SRT1 #SRT2 XN1
END-SUBROUTINE
/*
DEFINE SUBROUTINE MO2STEK
  STEKMO.MO-CODE := IBS-KMO-FILE.MO-ID
  STEKMO.MO-PO   := IBS-KMO-FILE.PM-ID
  STEKMO.MO-NAME := IBS-KMO-FILE.NO-ID
  ADD 1 TO #COUNT
  IF #COUNT > CNTST  #K := XI := CNTST  CALL 'GTSX' LEN-ST-MO XI XN2
    FOR #I 1 CNTST  XI := #I  CALL 'RWSX' XI STEKMO.MO-CODE XR XN1
      CALL 'RWSX' XI STEKMO.MO-CODE XW XN2
    END-FOR
    CALL 'FRSX' XN1
    ADD 200 TO CNTST  XI := CNTST  CALL 'GTSX' LEN-ST-MO XI XN1
    FOR #I 1 #K  XI := #I  CALL 'RWSX' XI STEKMO.MO-CODE XR XN2
      CALL 'RWSX' XI STEKMO.MO-CODE XW XN1
    END-FOR
    CALL 'FRSX' XN2
  END-IF
  XI := #COUNT  CALL 'RWSX' XI STEKMO.MO-CODE XW XN1
END-SUBROUTINE
/*
INCLUDE XXERSY1C
END-SUBROUTINE
END

