* >Natural Source Header 000000 /*<RO>>
* :NatName UBDRMN0S
* :UID PAUL
* :Mode S
* :CP
* :Date 20000102
* :Time 0000000
* <Natural Source Header /*<<RO>
/***********************************************************************
/*
/* —»—“≈Ã¿:
/* œ–Œ√–¿ÃÃ¿:
/*
/* –¿«–¿¡Œ“◊» :  ”«Œ–»Õ œ.¿.
/* ƒ¿“¿ ¬€œ”— ¿:
/*
/* Õ¿«¬¿Õ»≈:  ”–Œ¬≈Õ‹ ¡»«Õ≈— –¿¡Œ“¿ — «¿œ»—‹ﬁ ƒŒ ”Ã≈Õ“¿
/*
/*  ŒÃ¿Õƒ€:
/*   READ
/*   ADD
/*   UPDATE
/*   DELETE
/*   LOCATE
/*
/* »—œ–¿¬À≈Õ»ﬂ:
/*
/***********************************************************************
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING XXCTXX0A
PARAMETER USING UBDRMN0A
PARAMETER USING UXCSXX0A
/*
LOCAL USING XXXXEC0L
LOCAL USING UBDDMN0A      /* Œœ»—¿“≈À‹ «¿œ»—»
LOCAL USING UDDCMN0A      /* «¿œ»—‹  ŒÕ“≈…Õ≈–¿
LOCAL USING UDDRMN0A      /* «¿œ»—‹ ƒŒ ”Ã≈Õ“¿
/*
LOCAL USING UBDRCO0A
LOCAL USING UBOPDL0A
/*
LOCAL
1 #IS-ADD     (L)
1 #IS-SUB     (L)
1 #IS-FOUND   (L)
1 #I          (I4)
1 #J          (I4)
1 #K          (I4)
1 #LEVEL      (I4)
/*
END-DEFINE
DEFINE SUBROUTINE UBDRMN0S
RESET XXERX00A
/*
IF UBDRMN0A.TX-ID EQ 0 AND XXCTXX0A.TX-ID NE 0 THEN
  MOVE XXCTXX0A.TX-ID TO UBDRMN0A.TX-ID
END-IF
/*WRITE 'ENTER' UBDRMN0A.BL-COMMAND UBDRMN0A.DR-TYPE-ID UBDRMN0A.DR-ID UBDRMN0A.DR-UP-ID
IF IS-DR-DEBUG THEN
  WRITE UBDRMN0A.BL-COMMAND UBDRMN0A.DR-TYPE-ID UBDRMN0A.DR-ID
        XXCTXX0A.OD-ID UBDRMN0A.OD-ID
END-IF
DECIDE ON FIRST VALUE UBDRMN0A.BL-COMMAND
VALUE "READ"
  PERFORM RECORD-READ
VALUE "READ-TR"
  PERFORM RECORD-READ
VALUE "HOLD"
  PERFORM RECORD-HOLD
VALUE 'ADD'
  RESET UBDRMN0A.DR-ID
  IF OD-IS-NOT-USED THEN
     RESET UBDRMN0A.OD-ID
  ELSE
     MOVE XXCTXX0A.OD-ID TO UBDRMN0A.OD-ID
  END-IF
  PERFORM RECORD-PROCESS
  IF NOT OD-IS-NOT-USED THEN
     PERFORM RECORD-EVALUATE
  END-IF
VALUE 'UPDATE'
  IF NOT OD-IS-NOT-USED THEN
     MOVE XXCTXX0A.OD-ID TO UBDRMN0A.OD-ID
  END-IF
  PERFORM RECORD-PROCESS
  IF NOT OD-IS-NOT-USED THEN
     PERFORM RECORD-CLEAN
     PERFORM RECORD-EVALUATE
  END-IF
VALUE 'DELETE'
  PERFORM RECORD-PROCESS
  IF NOT OD-IS-NOT-USED THEN
     PERFORM RECORD-CLEAN
  END-IF
VALUE 'LOCATE'
  PERFORM RECORD-LOCATE
NONE VALUE
  MOVE UBDRMN0A.BL-COMMAND TO ERROR-ADDITION(1)
  *ERROR-NR := EC-UNKNOW-COMMAND
END-DECIDE
/*WRITE '      EXIT      ' UBDRMN0A.DR-TYPE-ID UBDRMN0A.DR-ID UBDRMN0A.DR-UP-ID
/*
DEFINE SUBROUTINE RECORD-HOLD
  MOVE UBDRMN0A.DR-TYPE-ID TO UBDDMN0A.DD-ID
  MOVE 'READ' TO UBDDMN0A.BL-COMMAND
  PERFORM UBDDMN0S XXERX00A UBDDMN0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  MOVE UBDDMN0A.DD-TX-IS-REQUIRED TO UDDRMN0A.DD-TX-IS-REQUIRED
  PERFORM RECORD-READ
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-READ
  MOVE BY NAME UBDRMN0A TO UDDRMN0A
  MOVE UBDRMN0A.BL-COMMAND TO UDDRMN0A.DL-COMMAND
  PERFORM UDDRMN0S XXERX00A UDDRMN0A
  IF RETURN-CODE < 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  MOVE BY NAME UDDRMN0A TO UBDRMN0A
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-LOCATE
/* —◊»“€¬¿≈Ã Œœ»—¿“≈À‹
  MOVE UBDRMN0A.DR-TYPE-ID TO UBDDMN0A.DD-ID
  MOVE 'READ' TO UBDDMN0A.BL-COMMAND
  PERFORM UBDDMN0S XXERX00A UBDDMN0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
/*
/*  MOVE BY NAME UBDRMN0A TO UDDRMN0A
  PERFORM RECORD-ATTR-SET
  MOVE UBDRMN0A.DR-TYPE-ID TO UDDRMN0A.DR-TYPE-ID
  MOVE UBDRMN0A.TX-ID TO UDDRMN0A.TX-ID
  MOVE 'LOCATE' TO UDDRMN0A.DL-COMMAND
  PERFORM UDDRMN0S XXERX00A UDDRMN0A
/*IF RETURN-CODE EQ EC-OBJECT-NOT-FOUND THEN ESCAPE ROUTINE END-IF
  IF RETURN-CODE < 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  MOVE BY NAME UDDRMN0A TO UBDRMN0A
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-PROCESS
/*  WRITE 'RECORD-PROCESS'
/* —◊»“¿¬¿≈Ã Œœ»—¿“≈À‹
  MOVE UBDRMN0A.DR-TYPE-ID TO UBDDMN0A.DD-ID
  MOVE 'READ' TO UBDDMN0A.BL-COMMAND
  PERFORM UBDDMN0S XXERX00A UBDDMN0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  MOVE UBDRMN0A.TX-ID TO UDDCMN0A.TX-ID
  MOVE UBDRMN0A.TX-ID TO UDDRMN0A.TX-ID
  IF UBDDMN0A.DD-LEVEL GT 1
/* œ€“¿≈Ã—ﬂ Õ¿…“»  ŒÕ“≈…Õ≈–
     IF UBDRMN0A.DR-UP-ID EQ 0 THEN
        *ERROR-NR := EC-OBJECT-ID-REQUIRED
     END-IF
     MOVE UBDRMN0A.DR-UP-ID TO UDDCMN0A.DR-ID
     MOVE UBDRMN0A.DR-TYPE-ID  TO UDDCMN0A.DR-TYPE-ID
     MOVE UBDDMN0A.DD-TX-IS-REQUIRED TO UDDCMN0A.DD-TX-IS-REQUIRED
     MOVE 'HOLD' TO UDDCMN0A.DL-COMMAND
     PERFORM UDDCMN0S XXERX00A UDDCMN0A
     IF RETURN-CODE NE 0 THEN
        IF UBDRMN0A.BL-COMMAND EQ 'ADD' THEN
           IF RETURN-CODE NE -1 OR
              ERROR-NUMBER NE EC-OBJECT-NOT-FOUND THEN
              *ERROR-NR := EC-QUIT-STACK-TRACE
           END-IF
/* ≈—À» «¿œ»—» Õ≈“ ≈≈ Õ¿ƒŒ —Œ«ƒ¿“‹
           MOVE UBDRMN0A.DR-UP-ID TO UDDRMN0A.DR-ID
           MOVE UBDDMN0A.DD-UP-ID TO UDDRMN0A.DR-TYPE-ID
           MOVE UBDDMN0A.DD-TX-IS-REQUIRED TO UDDRMN0A.DD-TX-IS-REQUIRED
           MOVE 'HOLD' TO UDDRMN0A.DL-COMMAND
           PERFORM UDDRMN0S XXERX00A UDDRMN0A
           IF RETURN-CODE NE 0 THEN
                 *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
           MOVE UBDRMN0A.DR-UP-ID TO UDDCMN0A.DR-ID
           MOVE UBDRMN0A.DR-TYPE-ID TO UDDCMN0A.DR-TYPE-ID
           MOVE UBDDMN0A.DD-LEVEL TO UDDCMN0A.DR-LEVEL
           MOVE UDDRMN0A.DR-ID TO UDDCMN0A.DR-UP-ID
           MOVE UDDRMN0A.DR-UP-LEVEL-IDS(*) TO
                 UDDCMN0A.DR-UP-LEVEL-IDS(*)
           #LEVEL := UDDCMN0A.DR-LEVEL - 1
           MOVE UDDCMN0A.DR-UP-ID TO
                 UDDCMN0A.DR-UP-LEVEL-IDS(#LEVEL)
           RESET UDDCMN0A.DR-SORT UDDCMN0A.DR-COL-RECORD
                 UDDCMN0A.DR-COL-SORT
                 UDDCMN0A.DR-AP-C UDDCMN0A.DR-AP-G(*)
           MOVE 'ADD' TO UDDCMN0A.DL-COMMAND
        ELSE
           *ERROR-NR := EC-QUIT-STACK-TRACE
        END-IF
     ELSE
        MOVE 'UPDATE' TO UDDCMN0A.DL-COMMAND
     END-IF
     IF UBDRMN0A.BL-COMMAND EQ 'UPDATE' OR EQ 'DELETE' THEN
/* —◊»“€¬¿≈Ã Œ¡ÕŒ¬Àﬂ≈Ã”ﬁ «¿œ»—‹
        MOVE UBDRMN0A.DR-ID TO UDDRMN0A.DR-ID
        MOVE UBDRMN0A.DR-TYPE-ID TO UDDRMN0A.DR-TYPE-ID
        MOVE UBDDMN0A.DD-TX-IS-REQUIRED TO UDDRMN0A.DD-TX-IS-REQUIRED
        MOVE 'HOLD' TO UDDRMN0A.DL-COMMAND
        PERFORM UDDRMN0S XXERX00A UDDRMN0A
        IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
/* ¬€◊»“¿≈Ã œŒ ¿«¿“≈À» «¿œ»—» »«  ŒÕ“≈…Õ≈–¿
        #IS-SUB := TRUE #IS-ADD := FALSE
        PERFORM CONTAINER-RECALCULATE
     END-IF
     IF UBDRMN0A.BL-COMMAND EQ 'DELETE' THEN
        SUBTRACT 1 FROM UDDCMN0A.DR-COL-RECORD
     END-IF
     IF UBDRMN0A.BL-COMMAND EQ 'ADD' THEN
        ADD 1 TO UDDCMN0A.DR-COL-RECORD
        ADD 1 TO UDDCMN0A.DR-COL-SORT
/* œ–≈œﬂ“—“¬”≈Ã Œ¡ÕŒ¬À≈Õ»ﬁ Õ≈ Œ“Œ–€’ œŒÀ≈… «¿œ»—»
        RESET UDDRMN0A.DR-AP-C UDDRMN0A.DR-AP-G(*)
              UDDRMN0A.DR-AS-C UDDRMN0A.DR-AS-G(*)
        MOVE UDDCMN0A.DR-COL-SORT TO UDDRMN0A.DR-SORT
     END-IF
  ELSE
     RESET UDDCMN0A.DR-UP-ID UDDCMN0A.DR-UP-LEVEL-IDS(*)
     MOVE 1 TO UDDCMN0A.DR-LEVEL
     IF UBDRMN0A.BL-COMMAND EQ 'UPDATE' THEN
/* —◊»“€¬¿≈Ã Œ¡ÕŒ¬Àﬂ≈Ã”ﬁ «¿œ»—‹
        MOVE UBDRMN0A.DR-ID TO UDDRMN0A.DR-ID
        MOVE UBDRMN0A.DR-TYPE-ID TO UDDRMN0A.DR-TYPE-ID
        MOVE UBDDMN0A.DD-TX-IS-REQUIRED TO UDDRMN0A.DD-TX-IS-REQUIRED
        MOVE 'HOLD' TO UDDRMN0A.DL-COMMAND
        PERFORM UDDRMN0S XXERX00A UDDRMN0A
        IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     END-IF
     IF UBDRMN0A.BL-COMMAND EQ 'ADD' THEN
        RESET UDDRMN0A.DR-AP-C UDDRMN0A.DR-AP-G(*)
              UDDRMN0A.DR-AS-C UDDRMN0A.DR-AS-G(*)
        MOVE 1 TO UDDRMN0A.DR-SORT
     END-IF
  END-IF
  MOVE UBDRMN0A.OD-ID TO UDDRMN0A.OD-ID
  MOVE UBDRMN0A.DR-ID TO UDDRMN0A.DR-ID
  MOVE UBDRMN0A.DR-TYPE-ID TO UDDRMN0A.DR-TYPE-ID
  MOVE UDDCMN0A.DR-LEVEL TO UDDRMN0A.DR-LEVEL
  MOVE UDDCMN0A.DR-UP-ID TO UDDRMN0A.DR-UP-ID
  MOVE UDDCMN0A.DR-UP-LEVEL-IDS(*) TO UDDRMN0A.DR-UP-LEVEL-IDS(*)
  IF UBDRMN0A.BL-COMMAND EQ 'ADD' THEN
     RESET UDDRMN0A.DR-ID
  END-IF
  IF UBDRMN0A.BL-COMMAND EQ 'UPDATE' OR EQ 'ADD' THEN
     PERFORM RECORD-ATTR-SET
  END-IF
  MOVE UBDRMN0A.BL-COMMAND TO UDDRMN0A.DL-COMMAND
  MOVE UBDDMN0A.DD-TX-IS-REQUIRED TO UDDRMN0A.DD-TX-IS-REQUIRED
  PERFORM UDDRMN0S XXERX00A UDDRMN0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  MOVE BY NAME UDDRMN0A TO UBDRMN0A
  IF UBDDMN0A.DD-LEVEL GT 1
     IF UBDRMN0A.BL-COMMAND EQ 'ADD' OR EQ 'UPDATE' THEN
/*  œ–»¡¿¬Àﬂ≈Ã œŒ ¿«¿“≈À» «¿œ»—»    ŒÕ“≈…Õ≈–”
        #IS-ADD := TRUE #IS-SUB := FALSE
        PERFORM CONTAINER-RECALCULATE
     END-IF
/* ”—“¿Õ¿¬À»¬¿≈Ã «Õ¿◊≈Õ»ﬂ ¬  ŒÕ“≈…Õ≈–≈
     MOVE UBDDMN0A.DD-TX-IS-REQUIRED TO UDDCMN0A.DD-TX-IS-REQUIRED
     PERFORM UDDCMN0S XXERX00A UDDCMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-ATTR-SET
  FOR #I = 1 TO 30
     IF UBDRMN0A.DR-AP-ATTR-ID(#I) NE 0 THEN
        #IS-FOUND := FALSE
        /* »˘ÂÏ ‡ÚË·ÛÚ ËÁ ·ËÁÌÂÒ Á‡ÔËÒË ‚ ‡ÚË·ÛÚ‡ı Á‡ÔËÒË ‰‡ÌÌ˚ı
        FOR #J = 1 TO UDDRMN0A.DR-AP-C
           IF UBDRMN0A.DR-AP-ATTR-ID(#I) EQ
              UDDRMN0A.DR-AP-ATTR-ID(#J) THEN
              #IS-FOUND := TRUE
              ESCAPE BOTTOM
           END-IF
        END-FOR
/*        IF NOT #IS-FOUND THEN
/*           ADD 1 TO UDDRMN0A.DR-AP-C
/*           #J := UDDRMN0A.DR-AP-C
/*           UDDRMN0A.DR-AP-ATTR-ID(#J) := UBDRMN0A.DR-AP-ATTR-ID(#I)
/*        END-IF
        /* ≈ÒÎË ÌÂ Ì‡¯‰Ë Ë˘ÂÏ Ò‚Ó·Ó‰Ì˚È ‡ÚË·ÛÚ ‚ Á‡ÔËÒË ‰‡ÌÌ˚ı
        IF NOT #IS-FOUND THEN
           FOR #J = 1 TO 30
              IF UDDRMN0A.DR-AP-ATTR-ID(#J) EQ 0 THEN
                 ESCAPE BOTTOM
              END-IF
           END-FOR
        END-IF
/*        WRITE #I #IS-FOUND #J UBDRMN0A.DR-AP-ATTR-ID(#I) UDDRMN0A.DR-AP-ATTR-ID(#J)
        IF UDDRMN0A.DR-AP-C < #J THEN
           UDDRMN0A.DR-AP-C := #J
        END-IF
        UDDRMN0A.DR-AP-ATTR-ID(#J) := UBDRMN0A.DR-AP-ATTR-ID(#I)
        UDDRMN0A.DR-AP-VALUE(#J) := UBDRMN0A.DR-AP-VALUE(#I)
        UDDRMN0A.DR-AP-VALUE-E(#J) := UBDRMN0A.DR-AP-VALUE-E(#I)
        /* »˘ÂÏ ÓÔËÒ‡ÌËÂ ‡ÚË·ÛÚ‡, ÂÒÎË ÌÂÚ, ÚÓ ÒÚË‡ÂÏ ‡ÚË·ÛÚ
        #IS-FOUND := FALSE
        FOR #K = 1 TO UBDDMN0A.DD-MA-C
           IF UDDRMN0A.DR-AP-ATTR-ID(#J) EQ UBDDMN0A.DD-MA-ATTR-ID(#K) AND
              UBDDMN0A.DD-MA-ATTR-TYPE(#K) EQ 'P' THEN
              #IS-FOUND := TRUE
              UDDRMN0A.DR-AP-TYPE-ID(#J) := UBDDMN0A.DD-MA-TYPE-ID(#K)
              UDDRMN0A.DR-AP-IS-INDEX(#J) := UBDDMN0A.DD-MA-IS-INDEX(#K)
              ESCAPE BOTTOM
           END-IF
        END-FOR
        IF NOT #IS-FOUND THEN
           RESET UDDRMN0A.DR-AP-G(#J)
        END-IF
     END-IF
  END-FOR
  FOR #I = 1 TO 10
     IF UBDRMN0A.DR-AS-ATTR-ID(#I) NE 0 THEN
        #IS-FOUND := FALSE
        FOR #J = 1 TO UDDRMN0A.DR-AS-C
           IF UBDRMN0A.DR-AS-ATTR-ID(#I) EQ
              UDDRMN0A.DR-AS-ATTR-ID(#J) THEN
              #IS-FOUND := TRUE
              ESCAPE BOTTOM
           END-IF
        END-FOR
        IF NOT #IS-FOUND THEN
           ADD 1 TO UDDRMN0A.DR-AS-C
           #J := UDDRMN0A.DR-AS-C
           UDDRMN0A.DR-AS-ATTR-ID(#J) := UBDRMN0A.DR-AS-ATTR-ID(#I)
        END-IF
        UDDRMN0A.DR-AS-VALUE(#J) := UBDRMN0A.DR-AS-VALUE(#I)
        #IS-FOUND := FALSE
        FOR #K = 1 TO UBDDMN0A.DD-MA-C
           IF UDDRMN0A.DR-AS-ATTR-ID(#J) EQ UBDDMN0A.DD-MA-ATTR-ID(#K) AND
              UBDDMN0A.DD-MA-ATTR-TYPE(#K) EQ 'A' THEN
              #IS-FOUND := TRUE
              UDDRMN0A.DR-AS-TYPE-ID(#J) := UBDDMN0A.DD-MA-TYPE-ID(#K)
              UDDRMN0A.DR-AS-IS-INDEX(#J) := UBDDMN0A.DD-MA-IS-INDEX(#K)
              ESCAPE BOTTOM
           END-IF
        END-FOR
        IF NOT #IS-FOUND THEN
           RESET UDDRMN0A.DR-AS-G(#J)
        END-IF
     END-IF
  END-FOR
END-SUBROUTINE
/*
DEFINE SUBROUTINE CONTAINER-RECALCULATE
/*  WRITE "RECALCULATE" #IS-ADD #IS-SUB "TEST"
  FOR #I = 1 TO UBDDMN0A.DD-MA-C
     IF UBDDMN0A.DD-MA-ATTR-TYPE(#I) EQ 'P' AND
        UBDDMN0A.DD-MA-IS-AGGREGATE(#I) THEN
        FOR #J = 1 TO 30
           IF UBDDMN0A.DD-MA-ATTR-ID(#I) EQ UDDRMN0A.DR-AP-ATTR-ID(#J) THEN
              #IS-FOUND := FALSE
              FOR #K = 1 TO UDDCMN0A.DR-AP-C
                 IF UBDDMN0A.DD-MA-ATTR-ID(#I) EQ
                    UDDCMN0A.DR-AP-ATTR-ID(#K) THEN
                    #IS-FOUND := TRUE
                    ESCAPE BOTTOM
                 END-IF
              END-FOR
/*              WRITE #I #J #K UDDCMN0A.DR-AP-ATTR-ID(#K) UDDCMN0A.DR-AP-VALUE(#K)
              IF NOT #IS-FOUND THEN
                 ADD 1 TO UDDCMN0A.DR-AP-C
                 #K := UDDCMN0A.DR-AP-C
                 UDDCMN0A.DR-AP-TYPE-ID(#K) := UBDDMN0A.DD-MA-TYPE-ID(#I)
                 UDDCMN0A.DR-AP-ATTR-ID(#K) := UBDDMN0A.DD-MA-ATTR-ID(#I)
                 RESET UDDCMN0A.DR-AP-VALUE(#K) UDDCMN0A.DR-AP-VALUE-E(#K)
              END-IF
              IF #IS-ADD THEN
                 ADD UDDRMN0A.DR-AP-VALUE(#J) TO UDDCMN0A.DR-AP-VALUE(#K)
              END-IF
              IF #IS-SUB THEN
                 SUBTRACT UDDRMN0A.DR-AP-VALUE(#J) FROM UDDCMN0A.DR-AP-VALUE(#K)
              END-IF
           END-IF
        END-FOR
     END-IF
  END-FOR
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-EVALUATE
/*  WRITE 'RECORD-EVAL'
  MOVE UBDRMN0A.OD-ID TO UBDRCO0A.OD-ID
  MOVE UBDRMN0A.DR-ID TO UBDRCO0A.DR-ID
  MOVE UBDRMN0A.DR-TYPE-ID TO UBDRCO0A.DD-ID
  MOVE 'CALC' TO UBDRCO0A.BL-COMMAND
  PERFORM UBDRCO0S XXERX00A XXCTXX0A UBDRCO0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-CLEAN
/*  WRITE 'RECORD-CLEAN'
  MOVE UBDRMN0A.DR-ID TO UBOPDL0A.DEL-DC-ID
  PERFORM UBOPDL0S XXERX00A XXCTXX0A UBOPDL0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
END-SUBROUTINE
/*
INCLUDE XXERSY1C
END-SUBROUTINE
END
