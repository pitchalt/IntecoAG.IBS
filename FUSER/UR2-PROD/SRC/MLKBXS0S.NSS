* >Natural Source Header 000000 /*<RO>>
* :NatName MLKBXS0S
* :UID PAUL
* :Mode S
* :CP
* :Date 20070821
* :Time 2350000
* <Natural Source Header /*<<RO>
/***********************************************************************
/*
/* —»—“≈Ã¿:
/* œ–Œ√–¿ÃÃ¿:
/*
/* –¿«–¿¡Œ“◊» :  ”«Œ–»Õ œ.¿.
/* ƒ¿“¿ ¬€œ”— ¿:
/*
/* Õ¿«¬¿Õ»≈:  ÔÓËÒÍ Ò‡Î¸‰Ó Ë Á‡ÔÓÎÌÂÌËÂ ÒÚÂÍ‡
/*
/*  ŒÃ¿Õƒ€:
/*   ADD
/*
/* »—œ–¿¬À≈Õ»ﬂ:
/*
/***********************************************************************
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING XXCTXX0A
PARAMETER USING UXCSXX0A
PARAMETER USING MLKXCS0A
/*
LOCAL USING XXXXEC0L
LOCAL USING UXXXEC0L
LOCAL USING XXSTMN0L
LOCAL USING MLKBHS0L
/*
LOCAL USING MXDRAT0L
LOCAL USING XBDRSX0L
/*
LOCAL USING MELKHM0A
LOCAL USING UETXMN0A
/*
LOCAL USING XPPBXX0A
/*
LOCAL USING UBDRMN0A
LOCAL USING UDDRMN0L
LOCAL USING UDDRSH0A
/*LOCAL USING UDSASH0L
/*
LOCAL USING MBLKRM0A
LOCAL
1 #I          (I4)
1 #CRITERY    (I4)
1 #COUNT      (I4)
1 #TX-INFO
2 TX-CREATE      (A8)
2 TX-CREATE-DT   (D)
2 TX-UPDATE      (A8)
2 TX-UPDATE-DT   (D)
END-DEFINE
DEFINE SUBROUTINE MLKBXS0S
RESET XXERX00A
/*
DECIDE ON FIRST VALUE MLKXCS0A.BL-COMMAND
VALUE "SEARCH"
  PERFORM LK-STACK-INIT
  PERFORM RECORD-SEARCH
VALUE "EXPORT"
  PERFORM RECORD-EXPORT
NONE VALUE
  MOVE MLKXCS0A.BL-COMMAND TO ERROR-ADDITION(1)
  *ERROR-NR := EC-UNKNOW-COMMAND
END-DECIDE
/*
INCLUDE UDDRSH0C "PROCESS-RESULT" "RECORD-PROCESS"
/*
DEFINE SUBROUTINE RECORD-EXPORT
  INCLUDE XPPBIN0C "MLKXCS0A.STACK-LEN" '"›ÍÒÔÓÚ À« "'
  FOR #I = 1 TO MLKXCS0A.STACK-LEN
     MOVE #I TO MLKBHS0L.STACK-POS
     INCLUDE XPPBST0C "#I"
     PERFORM LK-READ
     MOVE MLKBHS0L.LK-ID TO MELKHM0A.LK-ID
     MOVE "READ" TO MELKHM0A.ME-COMMAND
     PERFORM MELKHM0S XXERX00A XXCTXX0A MELKHM0A UXCSXX0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     RESET #TX-INFO
/*   WRITE MLKBHS0L.TX-CREATE-ID MLKBHS0L.TX-UPDATE-ID
     IF MLKBHS0L.TX-CREATE-ID NE UETXMN0A.TX-ID THEN
        MOVE MLKBHS0L.TX-CREATE-ID TO UETXMN0A.TX-ID
        MOVE "READ" TO UETXMN0A.ME-COMMAND
        PERFORM UETXMN0S XXERX00A XXCTXX0A UETXMN0A
        IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
        IF RETURN-CODE EQ 0 THEN
           MOVE UETXMN0A.TX-USER TO #TX-INFO.TX-CREATE
           MOVE UETXMN0A.TX-TIME-OPEN TO #TX-INFO.TX-CREATE-DT
        ELSE
           RESET XXERX00A
        END-IF
     END-IF
     IF MLKBHS0L.TX-UPDATE-ID NE MLKBHS0L.TX-CREATE-ID THEN
        MOVE MLKBHS0L.TX-UPDATE-ID TO UETXMN0A.TX-ID
        MOVE "READ" TO UETXMN0A.ME-COMMAND
        PERFORM UETXMN0S XXERX00A XXCTXX0A UETXMN0A
        IF RETURN-CODE EQ 0 THEN
           MOVE UETXMN0A.TX-USER TO #TX-INFO.TX-UPDATE
           MOVE UETXMN0A.TX-TIME-OPEN TO #TX-INFO.TX-UPDATE-DT
        ELSE
           RESET XXERX00A
        END-IF
     END-IF
     WRITE WORK FILE 7 MELKHM0A #TX-INFO
  END-FOR
CLOSE WORK FILE 7
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-SEARCH
  IF MLKXCS0A.STACK-COUNT EQ 0 THEN
     PERFORM LK-STACK-INIT
     IF RETURN-CODE NE 0 THEN *ERROR-NR := RETURN-CODE END-IF
  END-IF
/*  PERFORM LK-STACK-INIT
/*IF *USER EQ "ARMK01" THEN
/*   WRITE MLKXCS0A.LK-NUMBER MLKXCS0A.LK-NUMBER LK-DT-WORK
/*         MLKXCS0A.MT-ID MLKXCS0A.ZK-ID MLKXCS0A.DP-ID MLKXCS0A.MO-ID
/*END-IF
  RESET UDDRSH0A #CRITERY
  IF MLKXCS0A.LK-NUMBER NE " " THEN
     ADD 1 TO #CRITERY
     MOVE "SE" TO SH-OPER(#CRITERY)
     MOVE DC-NUMBER-ATTR-ID TO SH-AT-ID(#CRITERY,1)
     MOVE MLKXCS0A.LK-NUMBER TO SH-VALUE-A(#CRITERY)
  END-IF
  IF MLKXCS0A.LK-DT-START NE 0 THEN
     ADD 1 TO #CRITERY
     MOVE "TH" TO SH-OPER(#CRITERY)
     MOVE DC-DATE-ATTR-ID TO SH-AT-ID(#CRITERY,1)
     MOVE EDITED MLKXCS0A.LK-DT-START (EM=YYYYMMDD) TO SX-DATE-VALUE
     MOVE SX-DATE-NUMBER TO SH-VALUE-P(#CRITERY,1)
     MOVE EDITED MLKXCS0A.LK-DT-STOP (EM=YYYYMMDD) TO SX-DATE-VALUE
     MOVE SX-DATE-NUMBER TO SH-VALUE-P(#CRITERY,2)
  END-IF
  IF LK-DT-WORK NE 0 THEN
     ADD 1 TO #CRITERY
     MOVE "IN" TO SH-OPER(#CRITERY)
     MOVE DR-DT-START-ATTR-ID TO SH-AT-ID(#CRITERY,1)
     MOVE DR-DT-STOP-ATTR-ID TO SH-AT-ID(#CRITERY,2)
     MOVE EDITED MLKXCS0A.LK-DT-WORK (EM=YYYYMMDD) TO SX-DATE-VALUE
     MOVE SX-DATE-NUMBER TO SH-VALUE-P(#CRITERY,1)
  END-IF
  IF MLKXCS0A.MT-ID NE 0 THEN
     ADD 1 TO #CRITERY
     MOVE "EQ" TO SH-OPER(#CRITERY)
     MOVE DR-MT-ATTR-ID TO SH-AT-ID(#CRITERY,1)
     MOVE MLKXCS0A.MT-ID TO SH-VALUE-P(#CRITERY,1)
  END-IF
  IF MLKXCS0A.ZK-ID NE 0 THEN
     ADD 1 TO #CRITERY
     MOVE "EQ" TO SH-OPER(#CRITERY)
     MOVE DR-ZK-ATTR-ID TO SH-AT-ID(#CRITERY,1)
     MOVE MLKXCS0A.ZK-ID TO SH-VALUE-P(#CRITERY,1)
  END-IF
  IF MLKXCS0A.DP-ID NE 0 THEN
     ADD 1 TO #CRITERY
     MOVE "EQ" TO SH-OPER(#CRITERY)
     MOVE DR-DP-ATTR-ID TO SH-AT-ID(#CRITERY,1)
     MOVE MLKXCS0A.DP-ID TO SH-VALUE-P(#CRITERY,1)
  END-IF
  IF MLKXCS0A.MO-ID NE 0 THEN
     ADD 1 TO #CRITERY
     MOVE "EQ" TO SH-OPER(#CRITERY)
     MOVE DR-MO-ATTR-ID TO SH-AT-ID(#CRITERY,1)
     MOVE MLKXCS0A.MO-ID TO SH-VALUE-P(#CRITERY,1)
  END-IF
  IF #CRITERY EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ATTRIBUTE-REQUIRED
  END-IF
  /*
  MOVE XXCTXX0A.TX-ID TO UDDRSH0A.TX-ID
  MOVE 1500 TO UDDRSH0A.DD-ID
  MOVE *PROGRAM TO UDDRSH0A.SH-RETAIN
  MOVE "QUERY" TO UDDRSH0A.DL-COMMAND
  PERFORM UDDRSH0S XXERX00A UDDRSH0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /*
  INCLUDE XPPBIN0C "SH-NUMBER" '"«‡„ÛÁÍ‡ ‰ÓÍÛÏÂÌÚÓ‚"'
  PERFORM PROCESS-RESULT
  /*
  MOVE XXCTXX0A.TX-ID TO UDDRSH0A.TX-ID
  MOVE "CLOSE" TO UDDRSH0A.DL-COMMAND
  PERFORM UDDRSH0S XXERX00A UDDRSH0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /*
  IF MLKXCS0A.STACK-LEN EQ 0 THEN
     RETURN-CODE := EC-OBJECT-NOT-FOUND
  END-IF
  FOR #I = 1 TO MLKXCS0A.STACK-LEN
     MOVE #I TO MLKBHS0L.STACK-POS
     PERFORM LK-READ
  END-ALL
  SORT MLKBHS0L.LK-NUMBER USING MLKBHS0L.STACK-REC-B(*)
     AT START DATA
        RESET MLKBHS0L.STACK-POS-I
     END-START
     ADD 1 TO MLKBHS0L.STACK-POS-I
     MOVE MLKBHS0L.STACK-POS-I TO MLKBHS0L.STACK-POS
     PERFORM LK-WRITE
  END-SORT
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-PROCESS
  ADD 1 TO #COUNT
  INCLUDE XPPBST0C "#COUNT"
  RESET MLKBHS0L.STACK-REC-G
  MOVE UBDRMN0A.DR-ID TO MLKBHS0L.LK-ID
  INCLUDE XBDRSUAC "DC-NUMBER-ATTR-ID"   "MLKBHS0L.LK-NUMBER"
  INCLUDE XBDRSUDC "DC-DATE-ATTR-ID"     "MLKBHS0L.LK-DATE"
  INCLUDE XBDRSUDC "DR-DT-START-ATTR-ID" "MLKBHS0L.LK-DT-START"
  INCLUDE XBDRSUDC "DR-DT-STOP-ATTR-ID"  "MLKBHS0L.LK-DT-STOP"
  INCLUDE XBDRSU7C "DR-PLAN-COL-ATTR-ID" "MLKBHS0L.LK-COL"
  INCLUDE XBDRSUIC "DR-PLAN-EI-ATTR-ID"  "MLKBHS0L.EI-ID"
  INCLUDE XBDRSU7C "DR-NORM-COL-ATTR-ID" "MLKBHS0L.LK-NORM-COL"
  INCLUDE XBDRSU2C "DR-CENA-ATTR-ID"     "MLKBHS0L.LK-CENA"
  INCLUDE XBDRSUAC "DR-COMMENT-ATTR-ID"  "MLKBHS0L.LK-PRIM"
  INCLUDE XBDRSUIC "DR-MT-ATTR-ID"       "MLKBHS0L.MT-ID"
  INCLUDE XBDRSUIC "DR-ZK-ATTR-ID"       "MLKBHS0L.ZK-ID"
  INCLUDE XBDRSUIC "DR-DP-ATTR-ID"       "MLKBHS0L.DP-ID"
  INCLUDE XBDRSUIC "DR-MO-ATTR-ID"       "MLKBHS0L.MO-ID"
  INCLUDE XBDRSUAC "DR-LK-UZEL-ATTR-ID"  "MLKBHS0L.LK-UZEL"
  INCLUDE XBDRSUAC "DR-LK-PRIZNAK-ATTR-ID" "MLKBHS0L.LK-PRIZNAK"
  /*
  MOVE DR-TX-CREATE-ID TO MLKBHS0L.TX-CREATE-ID
  MOVE DR-TX-CURRENT-ID TO MLKBHS0L.TX-UPDATE-ID
  /*
  MOVE MLKBHS0L.LK-ID TO MBLKRM0A.LKR-ID
  MOVE "READ-TR" TO MBLKRM0A.BL-COMMAND
  PERFORM MBLKRM0S XXERX00A XXCTXX0A MBLKRM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  MOVE MBLKRM0A.PLAN-COL TO MLKBHS0L.LKR-PLAN-COL
  /*
  IF MLKXCS0A.STATUS EQ " " OR
     MLKXCS0A.STATUS EQ "0"  AND MLKBHS0L.LKR-PLAN-COL =   0 OR
     MLKXCS0A.STATUS EQ "<"  AND MLKBHS0L.LKR-PLAN-COL <   MLKBHS0L.LK-COL OR
     MLKXCS0A.STATUS EQ "<=" AND MLKBHS0L.LKR-PLAN-COL <=  MLKBHS0L.LK-COL OR
     MLKXCS0A.STATUS EQ "="  AND MLKBHS0L.LKR-PLAN-COL =   MLKBHS0L.LK-COL OR
     MLKXCS0A.STATUS EQ ">=" AND MLKBHS0L.LKR-PLAN-COL >=  MLKBHS0L.LK-COL OR
     MLKXCS0A.STATUS EQ ">"  AND MLKBHS0L.LKR-PLAN-COL >   MLKBHS0L.LK-COL THEN
     PERFORM LK-PUSH
  END-IF
END-SUBROUTINE
/*
INCLUDE XXSTMN4C "MLKXCS0A" "MLKBHS0L-CONST" "MLKBHS0L"
        "LK-STACK-INIT" "LK-STACK-FREE" "LK-STACK-REALLOC"
        "LK-PUSH" "LK-READ" "LK-WRITE" "LK-LOCATE"
/*
INCLUDE XXERSY1C
END-SUBROUTINE
END
