* >Natural Source Header 000000 /*<RO>>
* :NatName MPRLHM0S
* :UID PAUL
* :Mode S
* :CP
* :Date 20000102
* :Time 0000000
* <Natural Source Header /*<<RO>
/***********************************************************************
/*
/* СИСТЕМА: ARM-K
/* ПРОГРАММА: РЕДАКТОР
/*
/* РАЗРАБОТЧИК: УЗОРИН П.А.
/* ДАТА ВЫПУСКА:
/*
/* НАЗВАНИЕ: РЕДАКТИРОВАТЬ ЗАГОЛОВОК ПРИХОДНОГО ОРДЕРА
/* КОМАНДЫ:
/*  - NEW
/*  - EDIT
/*  - VIEW
/*
/* ИСПРАВЛЕНИЯ:
/*
/***********************************************************************
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING XXCTXX0A
PARAMETER USING XPMXXX1A
PARAMETER USING MERLHM0A
PARAMETER USING UXCSXX0A
/* Стандартные ошибки
LOCAL USING XXXXEC0L
LOCAL USING XPXXEC0L
/* Области экрана
LOCAL USING XPCPXX0L
LOCAL USING XPMXSM0L
LOCAL USING MPRLHM0L
/* Поиск
LOCAL USING MBMTMN0A
LOCAL USING XPMOSH0A
LOCAL USING XPMTSH0A
LOCAL USING XPZKSH0A
LOCAL USING XBDPMN0A
/*
END-DEFINE
DEFINE SUBROUTINE MPRLHM0S
RESET BM-COMMAND-PROCESS
/*
IF MX-COMMAND NE "NEW" AND MX-COMMAND NE "EDIT" AND
     MX-COMMAND NE "VIEW" AND MX-COMMAND NE "CONFIRM" THEN
   MOVE MX-COMMAND TO ERROR-ADDITION(1)
   *ERROR-NR := EC-UNKNOW-COMMAND
END-IF
/*
MX-EDITOR-NAME := 'Общие сведени  (заголовок документа)'
/*
PERFORM SCREEN-INIT
PERFORM SCREEN-PREPARE
PERFORM OBJECT-TO-SCREEN
PERFORM SCREEN-MAIN-LOOP
/*
MOVE CP-CMD-EXIT TO BM-COMMAND-PROCESS
/* Основной цикл
INCLUDE XPMXXX2C
/* Управление экраном и обработка комманд
INCLUDE XPMFMN1C "'''MPRLHM0M'''"
/* Стандартна  обработка команд
INCLUDE XPCPMN2C
/* Стандартные процедуры работы с записью
INCLUDE XPXXMN1C "MIRLHM0S" "MERLHM0A"
/*
DEFINE SUBROUTINE SCREEN-PREPARE
  DECIDE ON EVERY VALUE MX-COMMAND
  VALUE "VIEW", "CONFIRM"
     MOVE (AD=P) TO RL-C
     MOVE (AD=P) TO IN-MO-C
     MOVE (AD=P) TO OUT-MO-C
     MOVE (AD=P) TO ZK-C
     MOVE (AD=P) TO MT-C
  VALUE "VIEW"
     MOVE (AD=P) TO DC-PACKAGE-C
     CP-CURS-FIELD := POS(CB-BAR-SELECT(1))
  VALUE "CONFIRM"
     RESET DC-PACKAGE-C
     CP-CURS-FIELD := POS(MPRLHM0L.DC-PACKAGE)
  VALUE "NEW", "EDIT"
     MOVE (AD=P) TO DC-PACKAGE-C
     RESET RL-C OUT-MO-C ZK-C MT-C
     CP-CURS-FIELD := POS(MPRLHM0L.RL-NUMBER)
  VALUE "NEW"
     IF XXCTXX0A.US-MO-ID NE 0 THEN
        MOVE (AD=P) TO IN-MO-C
     ELSE
        RESET IN-MO-C
     END-IF
  VALUE "EDIT"
     MOVE (AD=P) TO IN-MO-C
  NONE VALUE
     IGNORE
  END-DECIDE
END-SUBROUTINE
/*
DEFINE SUBROUTINE OBJECT-TO-SCREEN
  MOVE BY NAME MERLHM0A TO MPRLHM0L
  MOVE EDITED MERLHM0A.RL-DATE (EM=YYYYMMDD) TO MPRLHM0L.RL-DATE-A
/*  MOVE EDITED MERLHM0A.RL-DATE-OTR (EM=YYYYMMDD) TO MPRLHM0L.RL-DATE-OTR-A
  IF MERLHM0A.IN-MO-CODE NE 0 THEN
     MOVE MERLHM0A.IN-MO-CODE TO IN-MO-SEARCH
  END-IF
  IF MERLHM0A.OUT-MO-CODE NE 0 THEN
     MOVE MERLHM0A.OUT-MO-CODE TO OUT-MO-SEARCH
  END-IF
  IF MERLHM0A.ZK-CODE NE ' ' THEN
     MOVE MERLHM0A.ZK-CODE TO MPRLHM0L.ZK-SEARCH
  END-IF
  IF MERLHM0A.MT-CODE NE ' ' THEN
     MOVE MERLHM0A.MT-CODE TO MPRLHM0L.MT-SEARCH
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE SCREEN-TO-OBJECT
  MOVE BY NAME MPRLHM0L TO MERLHM0A
  MOVE EDITED MPRLHM0L.RL-DATE-A TO MERLHM0A.RL-DATE (EM=YYYYMMDD)
/*  MOVE EDITED MPRLHM0L.RL-DATE-OTR-A TO MERLHM0A.RL-DATE-OTR (EM=YYYYMMDD)
END-SUBROUTINE
/*
DEFINE SUBROUTINE SCREEN-CHECK
/*  INCLUDE XPASCH0C "MPRLHM0L.RL-NUMBER" "MPRLHM0L.RL-NUMBER"
  INCLUDE XPDTCH0C "MPRLHM0L.RL-DATE-N" "TRUE"
/*  INCLUDE XPDTCH0C "MPRLHM0L.RL-DATE-OTR-N" "TRUE"
  MOVE MPRLHM0L.IN-MO-CODE TO CP-CHECK-SEARCH
/*  WRITE MPRlhm0L.IN-MO-CODE "|" MPRlhm0L.IN-MO-SEARCH "|" CP-CHECK-SEARCH "|" MPRlhm0L.IN-MO-ID
  IF MX-COMMAND EQ "CONFIRM" THEN
     INCLUDE XPOBCH0C "MPRLHM0L.DC-PACKAGE" "MPRLHM0L.DC-PACKAGE"
  END-IF
  IF MPRLHM0L.IN-MO-SEARCH NE CP-CHECK-SEARCH THEN
     MOVE "LOCATE" TO XPMOSH0A.SH-COMMAND
     PERFORM SEARCH-IN-MO
     IF RETURN-CODE NE 0 THEN
        CP-CURS-FIELD := POS(MPRLHM0L.IN-MO-SEARCH)
        ESCAPE ROUTINE END-IF
  END-IF
  INCLUDE XPOBCH0C "MPRLHM0L.IN-MO-ID" "MPRLHM0L.IN-MO-SEARCH"
  MOVE MPRLHM0L.OUT-MO-CODE TO CP-CHECK-SEARCH
  IF MPRLHM0L.OUT-MO-SEARCH NE CP-CHECK-SEARCH THEN
     MOVE "LOCATE" TO XPMOSH0A.SH-COMMAND
     PERFORM SEARCH-OUT-MO
     IF RETURN-CODE NE 0 THEN
        CP-CURS-FIELD := POS(MPRLHM0L.OUT-MO-SEARCH)
        ESCAPE ROUTINE END-IF
  END-IF
  INCLUDE XPOBCH0C "MPRLHM0L.OUT-MO-ID" "MPRLHM0L.OUT-MO-SEARCH"
  MOVE MPRLHM0L.MT-CODE TO CP-CHECK-SEARCH
  IF MPRLHM0L.MT-SEARCH NE CP-CHECK-SEARCH THEN
     MOVE "LOCATE" TO XPMTSH0A.SH-COMMAND
     PERFORM SEARCH-MT
     IF RETURN-CODE NE 0 THEN
        CP-CURS-FIELD := POS(MPRLHM0L.MT-SEARCH)
        ESCAPE ROUTINE END-IF
  END-IF
  MOVE MPRLHM0L.ZK-CODE TO CP-CHECK-SEARCH
  IF MPRLHM0L.ZK-SEARCH NE CP-CHECK-SEARCH THEN
     MOVE "LOCATE" TO XPZKSH0A.SH-COMMAND
     PERFORM SEARCH-ZK
     IF RETURN-CODE NE 0 THEN
        CP-CURS-FIELD := POS(MPRLHM0L.ZK-SEARCH)
        ESCAPE ROUTINE END-IF
  END-IF
  IF MPRLHM0L.ZK-ID EQ 0 THEN
     INCLUDE XPOBCH0C "MPRLHM0L.MT-ID" "MPRLHM0L.MT-SEARCH"
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE OBJECT-SELECT
  IF CP-CURS-FIELD EQ POS(MPRLHM0L.IN-MO-SEARCH) THEN
     MOVE "SELECT" TO XPMOSH0A.SH-COMMAND
     PERFORM SEARCH-IN-MO
     IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
  END-IF
  IF CP-CURS-FIELD EQ POS(MPRLHM0L.OUT-MO-SEARCH) THEN
     MOVE "SELECT" TO XPMOSH0A.SH-COMMAND
     PERFORM SEARCH-OUT-MO
     IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
  END-IF
  IF CP-CURS-FIELD EQ POS(MPRLHM0L.ZK-SEARCH) THEN
     MOVE "SELECT" TO XPZKSH0A.SH-COMMAND
     PERFORM SEARCH-ZK
     IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
  END-IF
  IF CP-CURS-FIELD = POS(MPRLHM0L.MT-SEARCH)THEN
     XPMTSH0A.SH-COMMAND := 'SELECT'
     PERFORM SEARCH-MT
     IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE SEARCH-IN-MO
  IF XPMOSH0A.SH-COMMAND EQ "LOCATE" AND
     MPRLHM0L.IN-MO-SEARCH EQ " " THEN
     RESET MPRLHM0L.IN-MO-ID MPRLHM0L.IN-MO-CODE
           MPRLHM0L.IN-MO-NAME MPRLHM0L.IN-MO-SEARCH
     ESCAPE ROUTINE
  END-IF
  IF XXCTXX0A.US-MO-ID NE 0 OR MX-COMMAND EQ "EDIT" THEN
     ESCAPE ROUTINE
  END-IF
  RESET XPMOSH0A.MO-ID
  MOVE MPRLHM0L.IN-MO-SEARCH TO XPMOSH0A.MO-SEARCH
  PERFORM XPMOSH0S XXERX00A XXCTXX0A XPMOSH0A
/*  WRITE XPMOSH0A.SH-COMMAND RETURN-CODE XPMOSH0A.MO-ID
  IF RETURN-CODE EQ 0 AND XPMOSH0A.MO-ID NE 0 THEN
     MOVE XPMOSH0A.MO-ID TO MPRLHM0L.IN-MO-ID
     MOVE XPMOSH0A.MO-CODE TO MPRLHM0L.IN-MO-CODE
     MOVE XPMOSH0A.MO-NAME TO MPRLHM0L.IN-MO-NAME
     MOVE XPMOSH0A.MO-CODE TO MPRLHM0L.IN-MO-SEARCH
     MOVE XPMOSH0A.DP-ID TO XBDPMN0A.DP-ID
     MOVE "READ" TO XBDPMN0A.BL-COMMAND
     PERFORM XBDPMN0S XXERX00A XXCTXX0A XBDPMN0A
/*  WRITE XPMOSH0A.SH-COMMAND RETURN-CODE XPMOSH0A.MO-ID
     IF RETURN-CODE EQ 0 THEN
        MOVE XBDPMN0A.DP-CODE TO MPRLHM0L.IN-DP-CODE
        MOVE XBDPMN0A.DP-NAME TO MPRLHM0L.IN-DP-NAME
     END-IF
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE SEARCH-OUT-MO
  IF XPMOSH0A.SH-COMMAND EQ "LOCATE" AND
     MPRLHM0L.OUT-MO-SEARCH EQ " " THEN
     RESET MPRLHM0L.OUT-MO-ID MPRLHM0L.OUT-MO-CODE
           MPRLHM0L.OUT-MO-NAME MPRLHM0L.OUT-MO-SEARCH
     ESCAPE ROUTINE
  END-IF
  RESET XPMOSH0A.MO-ID
  MOVE MPRLHM0L.OUT-MO-SEARCH TO XPMOSH0A.MO-SEARCH
  PERFORM XPMOSH0S XXERX00A XXCTXX0A XPMOSH0A
  IF RETURN-CODE EQ 0 AND XPMOSH0A.MO-ID NE 0 THEN
     MOVE XPMOSH0A.MO-ID TO MPRLHM0L.OUT-MO-ID
     MOVE XPMOSH0A.MO-CODE TO MPRLHM0L.OUT-MO-CODE
     MOVE XPMOSH0A.MO-NAME TO MPRLHM0L.OUT-MO-NAME
     MOVE XPMOSH0A.MO-CODE TO MPRLHM0L.OUT-MO-SEARCH
     MOVE XPMOSH0A.DP-ID TO XBDPMN0A.DP-ID
     MOVE "READ" TO XBDPMN0A.BL-COMMAND
     PERFORM XBDPMN0S XXERX00A XXCTXX0A XBDPMN0A
/*  WRITE XPMOSH0A.SH-COMMAND RETURN-CODE XPMOSH0A.MO-ID
     IF RETURN-CODE EQ 0 THEN
        MOVE XBDPMN0A.DP-CODE TO MPRLHM0L.OUT-DP-CODE
        MOVE XBDPMN0A.DP-NAME TO MPRLHM0L.OUT-DP-NAME
     END-IF
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE SEARCH-ZK
  IF XPZKSH0A.SH-COMMAND EQ "LOCATE" AND
     MPRLHM0L.ZK-SEARCH EQ " " THEN
     RESET MPRLHM0L.ZK-ID MPRLHM0L.ZK-CODE
           MPRLHM0L.BS-ID MPRLHM0L.BS-CODE MPRLHM0L.BS-NAME
     ESCAPE ROUTINE
  END-IF
  RESET XPZKSH0A.ZK-ID
  MOVE MPRLHM0L.ZK-SEARCH TO XPZKSH0A.ZK-SEARCH
  PERFORM XPZKSH0S XXERX00A XXCTXX0A XPZKSH0A
  IF RETURN-CODE EQ 0 AND XPZKSH0A.ZK-ID NE 0 THEN
     MOVE XPZKSH0A.ZK-ID TO MPRLHM0L.ZK-ID
     MOVE XPZKSH0A.ZK-CODE TO MPRLHM0L.ZK-CODE
     MOVE XPZKSH0A.ZK-CODE TO MPRLHM0L.ZK-SEARCH
     RESET MPRLHM0L.MT-ID MPRLHM0L.MT-CODE
           MPRLHM0L.MT-SEARCH MPRLHM0L.MT-NAME
     /*
     IF XPZKSH0A.BS-ID NE 0 THEN
        MOVE XPZKSH0A.BS-ID TO MPRLHM0L.BS-ID
        MOVE XPZKSH0A.BS-CODE TO MPRLHM0L.BS-CODE
        MOVE XPZKSH0A.BS-NAME TO MPRLHM0L.BS-NAME
     ELSE
        CP-CURS-FIELD := POS(MPRLHM0L.ZK-SEARCH)
        RETURN-CODE := 2411
     END-IF
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE SEARCH-MT
  IF XPMTSH0A.SH-COMMAND EQ "LOCATE" AND
     MPRLHM0L.MT-SEARCH EQ " " THEN
     RESET MPRLHM0L.MT-ID MPRLHM0L.MT-CODE MPRLHM0L.MT-NAME
     ESCAPE ROUTINE
  END-IF
  RESET MBMTMN0A.MT-ID
  MOVE MPRLHM0L.MT-SEARCH TO XPMTSH0A.MT-SEARCH
  PERFORM XPMTSH0S XXERX00A XXCTXX0A XPMTSH0A MBMTMN0A
  IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
  IF MBMTMN0A.MT-ID NE 0 THEN
     MOVE MBMTMN0A.MT-ID TO MPRLHM0L.MT-ID
     MOVE MBMTMN0A.MT-CODE TO MPRLHM0L.MT-CODE
     MOVE MBMTMN0A.MT-CODE TO MPRLHM0L.MT-SEARCH
     MOVE MBMTMN0A.MT-NAME TO MPRLHM0L.MT-NAME
     RESET MPRLHM0L.ZK-ID MPRLHM0L.ZK-CODE
           MPRLHM0L.ZK-SEARCH
           MPRLHM0L.BS-ID MPRLHM0L.BS-CODE
           MPRLHM0L.BS-NAME
  END-IF
END-SUBROUTINE
/*
INCLUDE XXERSY1C
END-SUBROUTINE
END
