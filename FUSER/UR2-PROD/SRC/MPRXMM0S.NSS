* >Natural Source Header 000000 /*<RO>>
* :NatName MPRXMM0S
* :UID PAUL
* :Mode S
* :CP
* :Date 20070926
* :Time 0000000
* <Natural Source Header /*<<RO>
/***********************************************************************
/*
/* СИСТЕМА: ARM-K
/* ПРОГРАММА: РЕДАКТОР
/*
/* РАЗРАБОТЧИК: УЗОРИН П.А.
/* ДАТА ВЫПУСКА:
/*
/* НАЗВАНИЕ: РЕДАКТОР ЗАПИСИ О ТМЦ ПРИХОДНОГО ОРДЕРА
/* КОМАНДЫ:
/*  - NEW
/*  - EDIT
/*  - VIEW
/*
/* ИСПРАВЛЕНИЯ:
/*
/***********************************************************************
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING XXCTXX0A
PARAMETER USING XPMXXX1A
/*PARAMETER USING MERLHM0A
PARAMETER USING MERXMM0A
PARAMETER USING UXCSXX0A
/*
LOCAL USING XXXXEC0L
LOCAL USING XPXXEC0L
/* ОБЛАСТИ ЭКРАНОВ
LOCAL USING XPMXSM0L
LOCAL USING MPRXMM0L
/* ОБРАБОТКА КОМАНД
LOCAL USING XPCPXX0L
/* ПОИСК
/*LOCAL USING XPDMSH0A
LOCAL USING MBMTMN0A
LOCAL USING XPMTSH0A
LOCAL USING XPNDSH0A
/*LOCAL USING XPNDSH0A
/*LOCAL USING XPEISH0A
/*
LOCAL
1 #I(I2)
END-DEFINE
DEFINE SUBROUTINE MPRXMM0S
RESET BM-COMMAND-PROCESS
/*
IF MX-COMMAND NE "VIEW" AND MX-COMMAND NE "EDIT" AND
     MX-COMMAND NE "NEW" THEN
  MOVE MX-COMMAND TO ERROR-ADDITION(1)
  *ERROR-NR := EC-UNKNOW-COMMAND
END-IF
/*
MX-EDITOR-NAME := 'Позици  расхода по ЛЗК'
/*
PERFORM SCREEN-INIT
PERFORM SCREEN-PREPARE
IF MX-COMMAND NE "NEW" THEN
  PERFORM OBJECT-READ
END-IF
PERFORM OBJECT-TO-SCREEN
IF MX-COMMAND EQ "EDIT" THEN
   PERFORM CHECK-LIMIT
END-IF
/*IF MPRXMM0L.MT-ID NE 0 THEN
/*   PERFORM CHECK-LIMIT
/*END-IF
PERFORM SCREEN-MAIN-LOOP
/*
MOVE CP-CMD-EXIT TO BM-COMMAND-PROCESS
/* Основной цикл
INCLUDE XPMXXX2C
/* управление экраном и обработка комманд
INCLUDE XPMTMN1C "'''MPRXMM0M'''"
/* Стандартна  обработка команд
INCLUDE XPCPMN2C
/* Стандартные процедуры работы с записью
INCLUDE XPXXMN1C "MIRXMM0S" "MERXMM0A"
/*
DEFINE SUBROUTINE SCREEN-PREPARE
  IF MX-COMMAND EQ 'VIEW' THEN
     MOVE (AD=P) TO RLM-C
     MOVE (AD=P) TO SUMMA-C
  ELSE
     IF NOT IS-SUMMA-REQUIRED OR MX-COMMAND NE "EDIT" THEN
        MOVE (AD=P) TO SUMMA-C
     END-IF
  END-IF
  IF MX-COMMAND NE "NEW" THEN
     MOVE (AD=P) TO MT-C
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE OBJECT-TO-SCREEN
  MOVE BY NAME MERXMM0A TO MPRXMM0L
  MOVE MERXMM0A.MT-CODE TO MPRXMM0L.MT-SEARCH
  MOVE MERXMM0A.ND-STAVKA TO MPRXMM0L.ND-SEARCH
END-SUBROUTINE
/*
DEFINE SUBROUTINE SCREEN-TO-OBJECT
  MOVE BY NAME MPRXMM0L TO MERXMM0A
END-SUBROUTINE
/*
DEFINE SUBROUTINE SCREEN-CHECK
  MOVE MPRXMM0L.MT-CODE TO CP-CHECK-SEARCH
  IF MPRXMM0L.MT-SEARCH NE CP-CHECK-SEARCH THEN
     MOVE "LOCATE" TO XPMTSH0A.SH-COMMAND
     PERFORM SEARCH-MT
     IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
  END-IF
  INCLUDE XPOBCH0C "MPRXMM0L.MT-ID" "MPRXMM0L.MT-SEARCH"
  /* INCLUDE XPOBCH0C "MPRXMM0L.BASE-COL" "MPRXMM0L.BASE-COL"
  /* Пересчитаем
  PERFORM CHECK-COL
  IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
  IF IS-SUMMA-REQUIRED AND MX-COMMAND EQ "EDIT" THEN
     RESET MPRXMM0L.CENA MPRXMM0L.NDS
     IF MPRXMM0L.CENA EQ 0 AND MPRXMM0L.CENA-SUMMA NE 0 THEN
        COMPUTE ROUNDED MPRXMM0L.CENA =
              MPRXMM0L.CENA-SUMMA / MPRXMM0L.BASE-COL
     END-IF
     IF MPRXMM0L.CENA NE 0 AND MPRXMM0L.CENA-SUMMA EQ 0 THEN
        COMPUTE ROUNDED MPRXMM0L.CENA-SUMMA =
              MPRXMM0L.CENA * MPRXMM0L.BASE-COL
     END-IF
     INCLUDE XPOBCH0C "MPRXMM0L.CENA-SUMMA" "MPRXMM0L.CENA-SUMMA"
     MOVE MPRXMM0L.ND-STAVKA TO CP-CHECK-SEARCH
     IF MPRXMM0L.ND-SEARCH NE CP-CHECK-SEARCH THEN
        MOVE "LOCATE" TO XPNDSH0A.SH-COMMAND
        PERFORM SEARCH-ND
        IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
     END-IF
     INCLUDE XPOBCH0C "MPRXMM0L.ND-ID" "MPRXMM0L.ND-SEARCH"
     IF MPRXMM0L.ND-VALUE EQ 0
        MPRXMM0L.NDS := 0
        MPRXMM0L.NDS-SUMMA := 0
     ELSE
        IF MPRXMM0L.NDS EQ 0 AND MPRXMM0L.NDS-SUMMA EQ 0 THEN
           COMPUTE ROUNDED MPRXMM0L.NDS-SUMMA =
                 MPRXMM0L.CENA-SUMMA * MPRXMM0L.ND-VALUE / 100
        END-IF
        IF MPRXMM0L.NDS EQ 0 AND MPRXMM0L.NDS-SUMMA NE 0 THEN
           COMPUTE ROUNDED MPRXMM0L.NDS =
                 MPRXMM0L.NDS-SUMMA / MPRXMM0L.BASE-COL
        END-IF
        IF MPRXMM0L.NDS NE 0 AND MPRXMM0L.NDS-SUMMA EQ 0 THEN
           COMPUTE ROUNDED MPRXMM0L.NDS-SUMMA =
                 MPRXMM0L.NDS * MPRXMM0L.BASE-COL
        END-IF
        INCLUDE XPOBCH0C "MPRXMM0L.NDS-SUMMA" "MPRXMM0L.NDS-SUMMA"
     END-IF
     MPRXMM0L.ALL-SUMMA := MPRXMM0L.NDS-SUMMA + MPRXMM0L.CENA-SUMMA
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE CHECK-LIMIT
  PERFORM SCREEN-TO-OBJECT
  MOVE "CHECK-LIM" TO MERXMM0A.ME-COMMAND
  PERFORM MIRXMM0S XXERX00A XXCTXX0A MERXMM0A UXCSXX0A
  PERFORM OBJECT-TO-SCREEN
END-SUBROUTINE
/*
DEFINE SUBROUTINE CHECK-COL
  PERFORM SCREEN-TO-OBJECT
  MOVE "CHECK-COL" TO MERXMM0A.ME-COMMAND
  PERFORM MIRXMM0S XXERX00A XXCTXX0A MERXMM0A UXCSXX0A
  MOVE BY NAME MERXMM0A TO MPRXMM0L
END-SUBROUTINE
/*
DEFINE SUBROUTINE OBJECT-SELECT
  IF CP-CURS-FIELD = POS(MPRXMM0L.MT-SEARCH)THEN
     XPMTSH0A.SH-COMMAND := 'SELECT'
     PERFORM SEARCH-MT
     IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
  END-IF
  IF CP-CURS-FIELD = POS(MPRXMM0L.ND-SEARCH)THEN
     XPNDSH0A.SH-COMMAND := 'SELECT'
     PERFORM SEARCH-ND
     IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE SEARCH-ND
  IF XPNDSH0A.SH-COMMAND EQ "LOCATE" AND
     MPRXMM0L.ND-SEARCH EQ " " THEN
     RESET MPRXMM0L.ND-ID MPRXMM0L.ND-CODE MPRXMM0L.ND-STAVKA
     ESCAPE ROUTINE
  END-IF
  RESET XPNDSH0A.ND-ID
  MOVE MPRXMM0L.ND-SEARCH TO XPNDSH0A.ND-SEARCH
  PERFORM XPNDSH0S XXERX00A XXCTXX0A XPNDSH0A
  IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
  IF XPNDSH0A.ND-ID NE 0 THEN
     MOVE BY NAME XPNDSH0A TO MPRXMM0L
     MOVE XPNDSH0A.ND-STAVKA TO MPRXMM0L.ND-SEARCH
     RESET MPRXMM0L.NDS MPRXMM0L.NDS-SUMMA
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE SEARCH-MT
  IF XPMTSH0A.SH-COMMAND EQ "LOCATE" AND
     MPRXMM0L.MT-SEARCH EQ " " THEN
     RESET MPRXMM0L.MT-ID MPRXMM0L.MT-CODE MPRXMM0L.MT-NAME
     ESCAPE ROUTINE
  END-IF
  RESET MBMTMN0A.MT-ID
  MOVE MPRXMM0L.MT-SEARCH TO XPMTSH0A.MT-SEARCH
  PERFORM XPMTSH0S XXERX00A XXCTXX0A XPMTSH0A MBMTMN0A
  IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
  IF MBMTMN0A.MT-ID NE 0 THEN
     MOVE BY NAME MBMTMN0A TO MPRXMM0L
     MOVE MBMTMN0A.MT-CODE TO MPRXMM0L.MT-SEARCH
     PERFORM CHECK-LIMIT
     IF RETURN-CODE EQ 2412 THEN
        RESET MPRXMM0L.MT-CODE
        CP-CURS-FIELD := POS(MPRXMM0L.MT-SEARCH) END-IF
  END-IF
END-SUBROUTINE
/*
INCLUDE XXERSY1C
/*
END-SUBROUTINE
END
