* >Natural Source Header 000000 /*<RO>>
* :NatName MPRXPL0S
* :UID PAUL
* :Mode S
* :CP
* :Date 20070823
* :Time 1525000
* <Natural Source Header /*<<RO>
/***********************************************************************
/*
/* ÑÈÑÒÅÌÀ: ARM-K
/* ÏÐÎÃÐÀÌÌÀ: ÐÅÄÀÊÒÎÐ
/*
/* ÐÀÇÐÀÁÎÒ×ÈÊ: ÓÇÎÐÈÍ Ï.À.
/* ÄÀÒÀ ÂÛÏÓÑÊÀ:
/*
/* ÍÀÇÂÀÍÈÅ: ÐÅÄÀÊÒÎÐ ðàñõîäíûé îðäåð ÑÏÈÑÎÊ ÒÌÖ
/* ÊÎÌÀÍÄÛ:
/*  - EDIT
/*  - NEW
/*  - VIEW
/*
/* ÈÑÏÐÀÂËÅÍÈß:
/*
/***********************************************************************
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING XXCTXX0A
PARAMETER USING XPMXXX1A
PARAMETER USING MERXMM0A
PARAMETER USING UXCSXX0A
/* ÑÒÀÍÄÀÐÒÍÛÅ ÊÎÄÛ ÎØÈÁÎÊ
LOCAL USING XXXXEC0L
LOCAL USING XPXXEC0L
/*
LOCAL USING XPCPXX0L
/* ÎÁËÀÑÒÈ ÝÊÐÀÍÎÂ
LOCAL USING XPMXSM0L
LOCAL USING MPRXPL0L
/*
LOCAL USING MELKHM0A
LOCAL USING MERXPLSA
LOCAL USING MERXPL0A
LOCAL USING MERXPM0A
LOCAL USING XMBMXX1A
/*
LOCAL
1 SCREEN-STACK
2 IS-TOP         (L)
2 IS-BOT         (L)
2 SCREEN-TOP     (I4)
2 SCREEN-POS     (I4)
2 SCREEN-BOT     (I4)
1 #BUFFER        (A70)
1 #TYPE-COL      (A1)
END-DEFINE
DEFINE SUBROUTINE MPRXPL0S
RESET BM-COMMAND-PROCESS
/*
IF MX-COMMAND NE "VIEW" AND MX-COMMAND NE 'EDIT' AND MX-COMMAND NE "NEW" THEN
   MOVE MX-COMMAND TO ERROR-ADDITION(1)
   *ERROR-NR := EC-UNKNOW-COMMAND
END-IF
/*
MOVE "B" TO #TYPE-COL
MOVE MERXMM0A.RXP-DD-ID TO MERXPL0A.RXP-DD-ID
MOVE MERXMM0A.RXP-DD-ID TO MERXPM0A.DD-ID
MOVE MERXMM0A.RXM-ID TO MERXPL0A.RXM-ID
MOVE MERXMM0A.MT-ID TO MERXPL0A.MT-ID
MOVE MERXMM0A.ZK-ID TO MERXPL0A.ZK-ID
MOVE MERXMM0A.IN-MO-ID TO MERXPL0A.IN-MO-ID
MOVE MERXMM0A.OUT-MO-ID TO MERXPL0A.OUT-MO-ID
MOVE MERXMM0A.VO-ID TO MERXPL0A.VO-ID
/*IF *USER EQ "PAUL" THEN WRITE *PROGRAM MERXPL0A.ZK-ID END-IF
/*
MX-EDITOR-NAME := 'Ñïèñîê ðàñõîäóåìûõ ïàðòèé'
/*
PERFORM SCREEN-INIT
PERFORM SCREEN-PREPARE
PERFORM LIST-LOAD
IF RETURN-CODE EQ 0 THEN
  PERFORM LIST-TOP
END-IF
PERFORM SCREEN-MAIN-LOOP
/*
PERFORM LIST-FREE
MOVE CP-CMD-EXIT TO BM-COMMAND-PROCESS
/* Îñíîâíîé öèêë
INCLUDE XPMXXX2C
/* Óïðàâëåíèå ýêðàíîì è îáðàáîòêà êîììàíä
INCLUDE XPMTLS1C "'''MPRXPL0M'''" "MPRXPL0L.DL-CMD"
                 "MPRXPL0L-LINES-MAX"
/* Ñòàíäàðòíà  îáðàáîòêà êîìàíä
DEFINE SUBROUTINE COMMAND-PROCESS
  DECIDE ON FIRST VALUE CP-COMMAND
     VALUE 'LIST-TOP'
        PERFORM SCREEN-CHECK
        IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
        PERFORM LIST-TOP
        IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
     VALUE 'LIST-BOT'
        PERFORM SCREEN-CHECK
        IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
        PERFORM LIST-BOTTOM
        IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
     VALUE 'LIST-NEXT'
        PERFORM SCREEN-CHECK
        IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
        PERFORM LIST-NEXT
        IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
     VALUE 'LIST-PREV'
        PERFORM SCREEN-CHECK
        IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
        PERFORM LIST-PREV
        IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
     VALUE 'SELECT'
        PERFORM OBJECT-SELECT
     VALUE 'CHECK'
        PERFORM SCREEN-CHECK
        IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
        PERFORM LIST-RELOAD
     VALUE 'NEW'
        PERFORM SCREEN-CHECK
        IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
        PERFORM SCREEN-TO-OBJECT
        PERFORM OBJECT-ADD
        IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
        PERFORM LIST-RELOAD
     VALUE 'SAVE'
        PERFORM SCREEN-CHECK
        IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
     VALUE 'EXIT'
        ESCAPE ROUTINE
     NONE VALUE
        MOVE CP-COMMAND TO ERROR-ADDITION(1)
        RETURN-CODE := EC-UNKNOW-COMMAND
  END-DECIDE
END-SUBROUTINE
/*
DEFINE SUBROUTINE LINE-CHECK
  INCLUDE XPCSCH0C "MPRXPL0L.DL-CMD" "MPRXPL0L-LINES-MAX"
END-SUBROUTINE
/*
DEFINE SUBROUTINE LINE-ENABLE
  IGNORE
END-SUBROUTINE
/*
DEFINE SUBROUTINE LINE-DISABLE
  IGNORE
END-SUBROUTINE
/*
DEFINE SUBROUTINE OBJECT-TO-SCREEN
  RESET MERXPM0A.STACK-POS
  MOVE MERXMM0A.RXP-DD-ID TO MERXPM0A.DD-ID
  MOVE MERXMM0A.RXH-DD-ID TO MERXPM0A.RXM-DD-ID
  MOVE MERXMM0A.RXM-DD-ID TO MERXPM0A.RXM-DD-ID
  MOVE MERXMM0A.RXM-ID TO MERXPM0A.DR-UP-ID
  MOVE MERXMM0A.RXM-ID TO MERXPM0A.DR-ID
  MOVE "READ-TR" TO MERXPM0A.ME-COMMAND
  PERFORM MIRXPM0S XXERX00A XXCTXX0A MERXPLSA MERXPM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  IF MERXMM0A.LK-ID NE 0 THEN
     MOVE MERXMM0A.LK-ID TO MELKHM0A.LK-ID
     MOVE "READ" TO MELKHM0A.ME-COMMAND
     PERFORM MELKHM0S XXERX00A XXCTXX0A MELKHM0A UXCSXX0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE MELKHM0A.LK-COL TO MPRXPL0L.LK-COL
     MPRXPL0L.LKR-COL := MELKHM0A.LK-COL - MELKHM0A.FACT-COL
  END-IF
  MOVE MERXPM0A.BALC-SUMMA TO MPRXPL0L.TR-CENA-SUMMA
  MOVE MERXPM0A.DR-COL-RECORD TO MPRXPL0L.DT-COL-RECORD
  IF #TYPE-COL EQ "B" THEN
     MOVE MERXPM0A.BASE-COL TO MPRXPL0L.TR-COL
  ELSE IF #TYPE-COL EQ "P" THEN
     MOVE MERXPM0A.PRIH-COL TO MPRXPL0L.TR-COL
  END-IF END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE LINE-TO-SCREEN
/*  WRITE 'o2s' CP-LINE-CURRENT SCREEN-POS
  RESET DL-CMD-C(CP-LINE-CURRENT)
  MOVE SCREEN-POS TO MERXPM0A.STACK-POS
  MOVE "READ" TO MERXPM0A.ME-COMMAND
  PERFORM MIRXPM0S XXERX00A XXCTXX0A MERXPLSA MERXPM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  MOVE BY NAME MERXPM0A TO DR-LINES(CP-LINE-CURRENT)
  MOVE EDITED MERXPM0A.PO-DATE (EM=DD.MM.YYYY) TO
        MPRXPL0L.PO-DETAIL(CP-LINE-CURRENT)
  COMPRESS MERXPM0A.PO-NUMBER MPRXPL0L.PO-DETAIL(CP-LINE-CURRENT)
        INTO MPRXPL0L.PO-DETAIL(CP-LINE-CURRENT)
  COMPRESS '(' MERXPM0A.VO-CODE ')' INTO #BUFFER LEAVING NO SPACE
  COMPRESS MPRXPL0L.PO-DETAIL(CP-LINE-CURRENT) #BUFFER
        MERXPM0A.VO-NAME MERXPM0A.VO-ADDRESS
        INTO MPRXPL0L.PO-DETAIL(CP-LINE-CURRENT)
  MOVE MERXPM0A.BALC-SUMMA TO MPRXPL0L.CENA-SUMMA(CP-LINE-CURRENT)
  MOVE #TYPE-COL TO MPRXPL0L.COL-TYPE(CP-LINE-CURRENT)
  IF #TYPE-COL EQ "B" THEN
     IF MERXPM0A.BASE-COL-LIMIT NE 0  THEN
        COMPUTE ROUNDED MPRXPL0L.CENA(CP-LINE-CURRENT) =
              MERXPM0A.BALC-SUMMA-LIMIT / MERXPM0A.BASE-COL-LIMIT
     END-IF
     MOVE MERXPM0A.BASE-COL-LIMIT TO MPRXPL0L.COL-LIMIT(CP-LINE-CURRENT)
     MOVE MERXPM0A.BASE-EI-SHORT-NAME TO
           MPRXPL0L.COL-EI-SHORT-NAME(CP-LINE-CURRENT)
     MOVE MERXPM0A.BASE-COL TO MPRXPL0L.COL(CP-LINE-CURRENT)
     MOVE MERXPM0A.BASE-COL-MIN TO MPRXPL0L.COL-MIN(CP-LINE-CURRENT)
  ELSE IF #TYPE-COL EQ "P" THEN
     IF MERXPM0A.PRIH-COL-LIMIT NE 0  THEN
        COMPUTE ROUNDED MPRXPL0L.CENA(CP-LINE-CURRENT) =
              MERXPM0A.BALC-SUMMA-LIMIT / MERXPM0A.PRIH-COL-LIMIT
     END-IF
     MOVE MERXPM0A.PRIH-EI-SHORT-NAME TO
           MPRXPL0L.COL-EI-SHORT-NAME(CP-LINE-CURRENT)
     MOVE MERXPM0A.PRIH-COL-LIMIT TO MPRXPL0L.COL-LIMIT(CP-LINE-CURRENT)
     MOVE MERXPM0A.PRIH-COL TO MPRXPL0L.COL(CP-LINE-CURRENT)
     MOVE MERXPM0A.PRIH-COL-MIN TO MPRXPL0L.COL-MIN(CP-LINE-CURRENT)
  END-IF END-IF
/*  IF MPRXPL0L.COL(CP-LINE-CURRENT) > MPRXPL0L.COL-MIN(CP-LINE-CURRENT) THEN
/*     MPRXPL0L.COL-MIN(CP-LINE-CURRENT) := MPRXPL0L.COL(CP-LINE-CURRENT) - MPRXPL0L.COL-MIN(CP-LINE-CURRENT)
/*  ELSE
/*     RESET MPRXPL0L.COL-MIN(CP-LINE-CURRENT)
/*  END-IF
  IF MX-COMMAND EQ "EDIT" OR MX-COMMAND EQ "NEW" THEN
     IF MERXPM0A.BASE-COL-LIMIT >  0 THEN
        RESET COL-C(CP-LINE-CURRENT)
     ELSE
        MOVE (AD=P) TO COL-C(CP-LINE-CURRENT)
     END-IF
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE SCREEN-TO-OBJECT
  MOVE BY NAME DR-LINES(CP-LINE-CURRENT) TO MERXPM0A
END-SUBROUTINE
/*
DEFINE SUBROUTINE SCREEN-PREPARE
  IF MX-COMMAND EQ "VIEW" THEN
     CP-CURS-FIELD := POS(MPRXPL0L.DL-CMD(1))
     MOVE (AD=P) TO COL-C(*)
  ELSE
     CP-CURS-FIELD := POS(MPRXPL0L.DL-CMD(1))
     RESET COL-C(*)
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE LIST-LOAD
  MOVE "LOAD" TO MERXPL0A.ME-COMMAND
  PERFORM MERXPL0S XXERX00A XXCTXX0A MERXPLSA MERXPL0A UXCSXX0A
END-SUBROUTINE
/*
DEFINE SUBROUTINE LIST-FREE
  MOVE "FREE" TO MERXPL0A.ME-COMMAND
  PERFORM MERXPL0S XXERX00A XXCTXX0A MERXPLSA MERXPL0A UXCSXX0A
END-SUBROUTINE
/*
DEFINE SUBROUTINE LIST-RELOAD
  MOVE SCREEN-TOP TO SCREEN-BOT
  SUBTRACT 1 FROM SCREEN-BOT
  PERFORM LIST-NEXT
END-SUBROUTINE
/*
DEFINE SUBROUTINE LIST-TOP
  SCREEN-TOP := 0
  SCREEN-BOT := 0
  PERFORM LIST-NEXT
END-SUBROUTINE
/*
DEFINE SUBROUTINE LIST-NEXT
  PERFORM OBJECT-TO-SCREEN
  IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
  MOVE SCREEN-BOT TO SCREEN-POS
  IF SCREEN-POS GE STACK-LEN THEN ESCAPE ROUTINE END-IF
  FOR CP-LINE-CURRENT = 1 TO MPRXPL0L-LINES-MAX
     ADD 1 TO SCREEN-POS
     IF SCREEN-POS GT STACK-LEN THEN
        PERFORM OBJECT-CLEAN
        ESCAPE TOP
     END-IF
     IF CP-LINE-CURRENT = 1 THEN
        MOVE SCREEN-POS TO SCREEN-TOP
     END-IF
     MOVE SCREEN-POS TO SCREEN-BOT
/*     WRITE 'next' CP-LINE-CURRENT SCREEN-POS
     PERFORM LINE-TO-SCREEN
  END-FOR
END-SUBROUTINE
/*
DEFINE SUBROUTINE LIST-PREV
  PERFORM OBJECT-TO-SCREEN
  IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
  MOVE SCREEN-TOP TO SCREEN-POS
  IF SCREEN-POS LE 1 THEN ESCAPE ROUTINE END-IF
  FOR CP-LINE-CURRENT = MPRXPL0L-LINES-MAX TO 1 STEP -1
     SUBTRACT 1 FROM SCREEN-POS
     IF SCREEN-POS LT 1 THEN ESCAPE BOTTOM END-IF
     IF CP-LINE-CURRENT = MPRXPL0L-LINES-MAX THEN
        MOVE SCREEN-POS TO SCREEN-BOT
     END-IF
     MOVE SCREEN-POS TO SCREEN-TOP
     PERFORM LINE-TO-SCREEN
  END-FOR
  IF SCREEN-POS EQ 0 THEN
     PERFORM LIST-TOP
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE LIST-BOTTOM
  MOVE STACK-LEN TO SCREEN-TOP
  ADD 1 TO SCREEN-TOP
  MOVE SCREEN-TOP TO SCREEN-BOT
  PERFORM LIST-PREV
END-SUBROUTINE
/*
/*DEFINE SUBROUTINE LINE-CHECK
/*  FOR CP-LINE-INDEX = 1 TO MPRLZL0L-LINES-MAX
/*     INCLUDE XPCSCH1C "MPRLZL0L.DL-CMD"
/*     INCLUDE XPCSCH1C "MPRLZL0L.MT-CODE"
/*  END-FOR
/*END-SUBROUTINE
/*
DEFINE SUBROUTINE OBJECT-CLEAN
  RESET DR-LINES(CP-LINE-CURRENT)
  MOVE (AD=PN) TO DL-CMD-C(CP-LINE-CURRENT)
  MOVE (AD=PN) TO COL-C(CP-LINE-CURRENT)
END-SUBROUTINE
/*
DEFINE SUBROUTINE SCREEN-CHECK
  FOR CP-LINE-CURRENT = 1 TO MPRXPL0L-LINES-MAX
     IF COL-C(CP-LINE-CURRENT) MODIFIED THEN
        PERFORM SCREEN-TO-OBJECT
        SCREEN-POS := SCREEN-TOP + CP-LINE-CURRENT - 1
        MERXPM0A.STACK-POS := SCREEN-POS
        MOVE MERXMM0A.RXP-DD-ID TO MERXPM0A.DD-ID
        MOVE MERXMM0A.RXM-DD-ID TO MERXPM0A.RXM-DD-ID
        MOVE MERXMM0A.RXH-DD-ID TO MERXPM0A.RXH-DD-ID
        MOVE MERXMM0A.RXM-ID TO MERXPM0A.DR-UP-ID
/*        MOVE MERXPL0A.RL-ID TO MERXPM0A.RL-ID
        MOVE "UPDATE" TO MERXPM0A.ME-COMMAND
        PERFORM MIRXPM0S XXERX00A XXCTXX0A MERXPLSA MERXPM0A UXCSXX0A
      IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
        IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
        PERFORM LINE-TO-SCREEN
     END-IF
  END-FOR
END-SUBROUTINE
/*
INCLUDE XXERSY1C
END-SUBROUTINE
END
