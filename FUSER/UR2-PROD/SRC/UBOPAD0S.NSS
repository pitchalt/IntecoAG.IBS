* >Natural Source Header 000000 /*<RO>>
* :NatName UBOPAD0S
* :UID PAUL
* :Mode S
* :CP
* :Date 20070627
* :Time 1734000
* <Natural Source Header /*<<RO>
/***********************************************************************
/*
/* —»—“≈Ã¿:
/* œ–Œ√–¿ÃÃ¿:
/*
/* –¿«–¿¡Œ“◊» :  ”«Œ–»Õ œ.¿.
/* ƒ¿“¿ ¬€œ”— ¿:
/*
/* Õ¿«¬¿Õ»≈:  ”–Œ¬≈Õ‹ ¡»«Õ≈— ƒŒ¡¿¬»“‹ ÕŒ¬”ﬁ Œœ≈–¿÷»ﬁ ¬ –≈√»—“–€
/*
/* »—œ–¿¬À≈Õ»ﬂ:
/*
/***********************************************************************
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING XXCTXX0A
PARAMETER USING UBOPAD0A
PARAMETER USING UXCSXX0A
/*
LOCAL USING XXXXEC0L
LOCAL USING UXXXEC0L
LOCAL USING UBCLMN0A
LOCAL USING UBITMN0A
LOCAL USING UDICMN0A
LOCAL USING UDOPMN0A
LOCAL
1 #I       (I4)
1 #J       (I4)
1 #K       (I4)
/*1 #L       (I4)
1 #IS-FOUND(L)
1 #FOUND   (I4/1:30)
END-DEFINE
DEFINE SUBROUTINE UBOPAD0S
RESET XXERX00A
/*
IF UBOPAD0A.CL-ID EQ 0 THEN
  MOVE 'CL-ID' TO ERROR-ADDITION(4)
  *ERROR-NR := EC-OBJECT-ID-REQUIRED
END-IF
MOVE UBOPAD0A.CL-ID TO UBCLMN0A.CL-ID
MOVE 'READ' TO UBCLMN0A.BL-COMMAND
PERFORM UBCLMN0S XXERX00A XXCTXX0A UBCLMN0A UXCSXX0A
IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
/*
IF UBOPAD0A.IT-ID(1) EQ 0 AND UBOPAD0A.IT-ID(2) EQ 0 THEN
  MOVE 'IT-ID' TO ERROR-ADDITION(4)
  *ERROR-NR := EC-OBJECT-ID-REQUIRED
END-IF
/*
IF UBOPAD0A.OP-DD-ID(1) EQ 0 THEN
  *ERROR-NR := EC-OBJECT-ID-REQUIRED
END-IF
/*
IF UBOPAD0A.OP-DR-ID(1) EQ 0 THEN
  *ERROR-NR := EC-OBJECT-ID-REQUIRED
END-IF
/*
FOR #I = 1 TO 2
/* ◊»“¿≈Ã Œœ»—¿Õ»≈ œŒ ¿«¿“≈Àﬂ
  IF UBOPAD0A.IT-ID(#I) EQ 0 THEN
/* œŒƒƒ≈–∆»Ã ŒƒÕŒ—“Œ–ŒÕÕ»≈ œ–Œ¬Œƒ »
     ESCAPE TOP
/*     MOVE #I TO ERROR-ADDITION(3)
/*     MOVE 'IT-ID' TO ERROR-ADDITION(4)
/*     *ERROR-NR := EC-OBJECT-ID-REQUIRED
  END-IF
  MOVE UBOPAD0A.CL-ID TO UBITMN0A.CL-ID
  MOVE UBOPAD0A.IT-ID(#I) TO UBITMN0A.IT-ID
  MOVE 'READ' TO UBITMN0A.BL-COMMAND
  PERFORM UBITMN0S XXERX00A XXCTXX0A UBITMN0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
/* œ€“¿≈Ã—ﬂ Õ¿…“» œŒ ¿«¿“≈À‹
  RESET UDICMN0A
  MOVE UBOPAD0A.CL-ID TO UDICMN0A.CL-ID
  MOVE UBOPAD0A.IT-ID(#I) TO UDICMN0A.IT-ID
  MOVE UBITMN0A.IT-SALDO-TYPE TO UDICMN0A.IT-SALDO-TYPE
  FOR #J = 1 TO 30
     IF UBITMN0A.MA-ID(#J) EQ 0 THEN ESCAPE BOTTOM END-IF
     #IS-FOUND := FALSE
     FOR #K = 1 TO 30
        IF UBOPAD0A.AT-ATTR-ID(#I,#K) EQ 0 THEN ESCAPE BOTTOM END-IF
        IF UBITMN0A.MA-ID(#J) EQ UBOPAD0A.AT-ATTR-ID(#I,#K) THEN
           IF UBITMN0A.MA-TYPE(#J) EQ 'A' THEN
              IF UBOPAD0A.AT-VALUE(#I,#K) EQ 0 THEN
                 MOVE EDITED UBITMN0A.MA-ID(#J) (EM=ZZZZZZZ9)
                       TO ERROR-ADDITION(1)
                 MOVE #I TO ERROR-ADDITION(3)
                 *ERROR-NR := EC-ATTR-REQUIRED
              END-IF
           END-IF
           IF UBITMN0A.MA-TYPE(#J) EQ 'M' THEN
              IF UBITMN0A.MA-CONV-TYPE-ID(#J) NE 0 THEN
                 IF UBOPAD0A.AT-EDIZ-ID(#I,#K) EQ 0 THEN
                    MOVE EDITED UBITMN0A.MA-ID(#J) (EM=ZZZZZZZ9)
                          TO ERROR-ADDITION(1)
                    MOVE #I TO ERROR-ADDITION(3)
                    *ERROR-NR := EC-ATTR-EDIZ-REQUIRED
                 END-IF
              ELSE
                 RESET UBOPAD0A.AT-EDIZ-ID(#I,#K)
              END-IF
           END-IF
           MOVE UBITMN0A.MA-ID(#J) TO UDICMN0A.AT-ATTR-ID(#J)
           MOVE UBITMN0A.MA-ID(#J) TO UDOPMN0A.AT-ATTR-ID(#I,#J)
           MOVE UBITMN0A.MA-TYPE(#J) TO UDICMN0A.AT-ATTR-TYPE(#J)
           MOVE UBITMN0A.MA-TYPE(#J) TO UDOPMN0A.AT-ATTR-TYPE(#I,#J)
/*           MOVE UBITMN0A.MA-TYPE-ID(#J) TO UDICMN0A.AT-TYPE-ID(#J)
           MOVE UBITMN0A.MA-COMB-INDEX-NUM(#J) TO
                 UDICMN0A.AT-COMB-INDEX-NUM(#J)
           MOVE UBOPAD0A.AT-EDIZ-ID(#I,#K) TO UDICMN0A.AT-EDIZ-ID(#J)
           MOVE UBOPAD0A.AT-EDIZ-ID(#I,#K) TO UDOPMN0A.AT-EDIZ-ID(#I,#J)
           MOVE UBOPAD0A.AT-VALUE-E(#I,#K) TO UDICMN0A.AT-VALUE-E(#J)
           MOVE UBOPAD0A.AT-VALUE-E(#I,#K) TO UDOPMN0A.AT-VALUE-E(#I,#J)
           MOVE UBOPAD0A.AT-VALUE(#I,#K) TO UDICMN0A.AT-VALUE(#J)
           MOVE UBOPAD0A.AT-VALUE(#I,#K) TO UDOPMN0A.AT-VALUE(#I,#J)
           MOVE #K TO #FOUND(#J)
           #IS-FOUND := TRUE
        END-IF
     END-FOR
     IF NOT #IS-FOUND THEN
        MOVE EDITED UBITMN0A.MA-ID(#J) (EM=ZZZZZZZ9)
             TO ERROR-ADDITION(1)
        MOVE #I TO ERROR-ADDITION(3)
        *ERROR-NR := EC-ATTR-REQUIRED
     END-IF
  END-FOR
  MOVE 'LOCATE' TO UDICMN0A.DL-COMMAND
  PERFORM UDICMN0S XXERX00A UDICMN0A
  IF RETURN-CODE NE 0 THEN
     IF RETURN-CODE NE EC-OBJECT-NOT-FOUND THEN
        *ERROR-NR := EC-QUIT-STACK-TRACE
     ELSE
        /* ƒŒ¡¿¬»Ã œŒ ¿«¿“≈À‹
        MOVE 'ADD' TO UDICMN0A.DL-COMMAND
        PERFORM UDICMN0S XXERX00A UDICMN0A
        IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     END-IF
  END-IF
/* «¿œŒÀÕﬂ≈Ã ¿“–»¡”“€ œ–Œ¬Œƒ »
  MOVE UDICMN0A.IX-ID TO UDOPMN0A.IX-ID(#I)
  MOVE UBOPAD0A.IT-ID(#I) TO UDOPMN0A.IT-ID(#I)
  MOVE UBITMN0A.IT-SALDO-TYPE TO UDOPMN0A.IT-SALDO-TYPE(#I)
  FOR #J = 1 TO 30
     IF UBITMN0A.MA-ID(#J) EQ 0 THEN ESCAPE BOTTOM END-IF
     IF UBITMN0A.MA-TYPE(#J) EQ 'I' THEN
        MOVE #FOUND(#J) TO #K
/*        WRITE 'FOUND' #J #K UDICMN0A.AT-VALUE(#J)
        MOVE UDICMN0A.AT-VALUE-E(#J) TO UDOPMN0A.AT-VALUE-E(#I,#J)
        MOVE UDICMN0A.AT-VALUE-E(#J) TO UBOPAD0A.AT-VALUE-E(#I,#K)
        MOVE UDICMN0A.AT-VALUE(#J) TO UDOPMN0A.AT-VALUE(#I,#J)
        MOVE UDICMN0A.AT-VALUE(#J) TO UBOPAD0A.AT-VALUE(#I,#K)
     END-IF
  END-FOR
END-FOR
/* ƒŒ¡¿¬Àﬂ≈Ã Œœ≈–¿÷»ﬁ
MOVE XXCTXX0A.TX-ID TO UDOPMN0A.TX-ID
MOVE UBOPAD0A.CL-ID TO UDOPMN0A.CL-ID
MOVE UBOPAD0A.OP-MODIF TO UDOPMN0A.OP-MODIF
MOVE UBOPAD0A.OD-ID TO UDOPMN0A.OD-ID
MOVE UBOPAD0A.OD-SEQ-NUM TO UDOPMN0A.OD-SEQ-NUM
/*
MOVE UBOPAD0A.OP-DD-ID(1) TO UDOPMN0A.DC-DD-ID
MOVE UBOPAD0A.OP-DR-ID(1) TO UDOPMN0A.DC-DR-ID
MOVE UBOPAD0A.OP-DR-ID(*) TO UDOPMN0A.OP-DR-LIST(*)
FOR #I = 5 TO 1 STEP -1
  IF UBOPAD0A.OP-DD-ID(#I) NE 0 THEN
     MOVE UBOPAD0A.OP-DD-ID(#I) TO UDOPMN0A.SRC-DD-ID
     MOVE UBOPAD0A.OP-DR-ID(#I) TO UDOPMN0A.SRC-DR-ID
     ESCAPE BOTTOM
  END-IF
END-FOR
/*
FOR #I = 1 TO 5
  IF UBOPAD0A.AD-ATTR-ID(#I) EQ 0 OR
     UBOPAD0A.AD-ATTR-ID(#I) EQ 901 THEN
     ESCAPE BOTTOM
  END-IF
END-FOR
MOVE 901 TO UBOPAD0A.AD-ATTR-ID(#I)
MOVE *DATX TO UBOPAD0A.AD-VALUE(#I)
FOR #I = 1 TO 5
  IF UBCLMN0A.AD-ATTR-IDS(#I) EQ 0 THEN ESCAPE BOTTOM END-IF
  #IS-FOUND := FALSE
  FOR #J = 1 TO 5
     IF UBOPAD0A.AD-ATTR-ID(#J) EQ 0 THEN ESCAPE BOTTOM END-IF
     IF UBCLMN0A.AD-ATTR-IDS(#I) EQ UBOPAD0A.AD-ATTR-ID(#J) THEN
        IF UBOPAD0A.AD-VALUE(#J) EQ 0 THEN
           MOVE UBOPAD0A.AD-ATTR-ID(#J) TO ERROR-ADDITION(1)
           *ERROR-NR := EC-ATTR-REQUIRED
        END-IF
        #IS-FOUND := TRUE
        ESCAPE BOTTOM
     END-IF
  END-FOR
  IF NOT #IS-FOUND THEN
     MOVE UBCLMN0A.AD-ATTR-IDS(#I) TO ERROR-ADDITION(1)
     *ERROR-NR := EC-ATTR-REQUIRED
  END-IF
  MOVE UBCLMN0A.AD-ATTR-IDS(#I) TO UDOPMN0A.AD-ATTR-ID(#I)
  MOVE UBOPAD0A.AD-VALUE(#J) TO UDOPMN0A.AD-VALUE(#I)
END-FOR
MOVE 'ADD' TO UDOPMN0A.DL-COMMAND
PERFORM UDOPMN0S XXERX00A UDOPMN0A
IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
IF XXCTXX0A.IS-OP-DEBUG THEN
  PRINT 'ADD OP D:' UDOPMN0A.IT-ID(1) 'C:' UDOPMN0A.IT-ID(2)
/*  /     '   IND D:' UDOPMN0A.IX-ID(1) 'C:' UDOPMN0A.IX-ID(2) /
/*        ' DOC' UDOPMN0A.DC-DR-ID 'REC' UDOPMN0A.SRC-DR-ID
END-IF
/* SDSD
INCLUDE XXERSY1C
END-SUBROUTINE
END


