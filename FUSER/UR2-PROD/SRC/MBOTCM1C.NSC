* >Natural Source Header 000000 /*<RO>>
* :NatName MBOTCM1C
* :UID OLEG
* :Mode S
* :CP
* :Date 20070220
* :Time 1952000
* <Natural Source Header /*<<RO>
DEFINE SUBROUTINE COMMAND-PROCESS
  DECIDE ON FIRST VALUE CP-COMMAND
     VALUE "EXIT" /* Õ¿ ”–Œ¬≈Õ‹ ¬€ÿ≈ ≈—À» ”–Œ¬≈Õ‹ œ≈–¬€… “Œ ¬€’Œƒ»Ã »«
                 /* Œ“Œ¡–¿∆≈Õ»ﬂ — Œ◊»—“ Œ… —“≈ Œ¬
        RESET MBXXDO0L.STACK-POS-I
        IF MBOTXX0A.OT-LEVEL = 1 THEN
           MBOTXX0A.XX-COMMAND := 'EXIT'
           MBOTXX0A.OT-COMMAND := 'EXIT'
        ELSE
           MBOTXX0A.XX-COMMAND := 'TOP'
        END-IF
        ESCAPE ROUTINE
     VALUE "NEW-ZP"
        MBOTXX0A.XX-COMMAND := "EXIT"
        MBOTXX0A.OT-COMMAND := CP-CMD-EXIT
        ESCAPE ROUTINE
     VALUE "VIEW-ZP"
        MBOTXX0A.XX-COMMAND := "EXIT"
        MBOTXX0A.OT-COMMAND := CP-CMD-EXIT
        ESCAPE ROUTINE
     VALUE "ST-DOWN" /* ”“Œ◊Õ≈Õ»≈
       FOR #I = 1 TO #KOL-STROK
           #CURS-FIELD := POS(&2&.OT-CMD(#I))
           IF XPCPXX0L.CP-CURS-FIELD EQ #CURS-FIELD
              RESET MBOTXX0A.OT-PD-VALUE
              MOVE MBOTXX0A.OT-CODE TO MBOTXX0A.OT-PD-CODE
              MOVE &3&(#I) TO MBOTXX0A.OT-PD-VALUE
              MOVE &5&(#I) TO MBOTXX0A.OT-VALUE-A
              ESCAPE BOTTOM
           END-IF
        END-FOR
        MOVE XXCTXX0A.OP-ID TO MBOTXX0A.OP-ID
        MOVE MBOTXX0A.OT-CODE TO #OT-CODE
        MOVE BY NAME MBOTXX0A TO MBOTSL0A
        MOVE '¬˚·Ó ‡ÚË·ÛÚ‡ ‰Î  ‡Ò¯ËÙÓ‚ÍË.' TO MBOTSL0A.OT-FUNCTION-NAME
        PERFORM MBOTSL0S XXERX00A MBOTSL0A MBXXOP0A
        IF RETURN-CODE EQ -1
           IF ERROR-NUMBER EQ EC-OBJECT-NOT-FOUND THEN
              MOVE 2510 TO RETURN-CODE
           ELSE
              *ERROR-NR := EC-QUIT-STACK-TRACE
           END-IF
        END-IF
        MOVE BY NAME MBOTSL0A TO MBOTXX0A
        IF MBOTXX0A.XX-COMMAND NE "EXIT" THEN
           MBOTXX0A.XX-COMMAND := CP-CMD-EXIT
           IF MBOTXX0A.OT-VALUE-A NE ' '
              COMPRESS &1& MBOTXX0A.OT-VALUE-A TO #STRING LEAVING NO
           END-IF
           COMPRESS MBOTXX0A.OT-WAY #STRING TO MBOTXX0A.OT-WAY LEAVING NO
           MOVE LEFT  MBOTXX0A.OT-WAY TO XPOTSM0L.OT-WAY
           ESCAPE ROUTINE
        ELSE
           RESET MBOTXX0A.XX-COMMAND CP-CMD-EXIT
           MBOTXX0A.OT-CODE MBOTXX0A.OT-PD-CODE MBOTXX0A.OT-PD-VALUE
        END-IF
     VALUE "ST-REFR" /* œ≈–≈—Œ¡–¿“‹ Õ¿ ›“ŒÃ ∆≈ ”–Œ¬Õ≈
        /* RESET MBOTXX0A.DO-CODE
        #OT-CODE := MBOTXX0A.OT-CODE
        MOVE XXCTXX0A.OP-ID TO MBOTXX0A.OP-ID
        MOVE BY NAME MBOTXX0A TO MBOTSL0A
        MOVE '¬˚·Ó ‡ÚË·ÛÚ‡ ‰Î  ËÁÏÂÌÂÌË  ‚Ë‰‡ ÓÚÓ·‡ÊÂÌË .' TO MBOTSL0A.OT-FUNCTION-NAME
        PERFORM MBOTSL0S XXERX00A MBOTSL0A MBXXOP0A
        IF RETURN-CODE EQ -1
           IF ERROR-NUMBER EQ EC-OBJECT-NOT-FOUND THEN
              MOVE 2510 TO RETURN-CODE
           ELSE
              *ERROR-NR := EC-QUIT-STACK-TRACE
           END-IF
        END-IF
        MOVE BY NAME MBOTSL0A TO MBOTXX0A
        IF MBOTXX0A.XX-COMMAND NE 'EXIT' THEN
           FOR #J = 1 TO 20
              IF MBOTXX0A.OT-FIX-ANALITIK(#J) = #OT-CODE THEN
                 RESET MBOTXX0A.OT-FIX-ANALITIK(#J)
                 ESCAPE BOTTOM
              END-IF
           END-FOR
           MBOTXX0A.XX-COMMAND := CP-CMD-EXIT
           ESCAPE ROUTINE
        ELSE
           RESET MBOTXX0A.XX-COMMAND CP-CMD-EXIT
        END-IF
     VALUE "SORT"
        PERFORM SORT-CRITERION /* ¬€¡Œ– œŒÀ≈… —Œ–“»–Œ¬ »
        PERFORM SORT-FIELD
     VALUE "LIST-PREV" /* ¬¬≈–’
     IF #END = TRUE
           #END:= FALSE
        END-IF
        #START := #START - #KOL-STROK
        MBXXDO0L.STACK-POS-I := #START
        IF MBXXDO0L.STACK-POS-I < 0
           MBXXDO0L.STACK-POS-I := 0
        END-IF
        PERFORM READ-STEK
     VALUE "LIST-NEXT" /* ¬Õ»«
        IF #END = FALSE
           #START := MBXXDO0L.STACK-POS-I
           PERFORM READ-STEK
           IF #READ-STRING NE 0 THEN
              #START := MBXXDO0L.STACK-POS-I - #KOL-STROK
              MBXXDO0L.STACK-POS-I := #START
              IF MBXXDO0L.STACK-POS-I < 0
                 MBXXDO0L.STACK-POS-I := 0
                 RESET #START
              END-IF
              RESET #READ-STRING
              PERFORM READ-STEK
           END-IF
        END-IF
     VALUE "LIST-TOP" /* Ì‡˜‡ÎÓ
        #END := FALSE
        #START := 1
        MBXXDO0L.STACK-POS-I := 0
        PERFORM READ-STEK
     VALUE "LIST-BOT" /* ÍÓÌÂˆ
        #END := TRUE
        MOVE MBOTXX0A.STACK-LEN TO #STACK-LEN
        #START := #STACK-LEN - #KOL-STROK
        IF #START < 0 THEN
           #START := 1
           MBXXDO0L.STACK-POS-I := 0
        END-IF
        MBXXDO0L.STACK-POS-I := #START
        PERFORM READ-STEK
     NONE VALUE   /* ◊“≈Õ»≈ —“≈ ¿ — «¿œŒÀÕ≈Õ»≈Ã ›À≈Ã≈Õ“Œ¬ › –¿Õ¿
        IGNORE
  END-DECIDE
END-SUBROUTINE
/*

