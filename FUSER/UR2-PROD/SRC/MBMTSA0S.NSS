* >Natural Source Header 000000 /*<RO>>
* :NatName MBMTSA0S
* :UID PAUL
* :Mode S
* :CP
* :Date 20070106
* :Time 2037000
* <Natural Source Header /*<<RO>
/***********************************************************************
/*
/* —»—“≈Ã¿:
/* œ–Œ√–¿ÃÃ¿:
/*
/* –¿«–¿¡Œ“◊» :  ”«Œ–»Õ œ.¿.
/* ƒ¿“¿ ¬€œ”— ¿:
/*
/* Õ¿«¬¿Õ»≈: ÔÓËÒÍ lifo fifo ÓÒÚ‡ÚÍÓ‚ ÔÓ Ï‡ÚÂË‡ÎÛ
/*
/*  ŒÃ¿Õƒ€:
/*   ADD
/*
/* »—œ–¿¬À≈Õ»ﬂ:
/*
/***********************************************************************
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING XXCTXX0A
PARAMETER USING MBMTSA0A
PARAMETER USING UXCSXX0A
/*
LOCAL USING XXXXEC0L
LOCAL USING XXSTMN0L
LOCAL USING MBSAST0L
LOCAL USING MBSASH0A
LOCAL USING MBSAST0A
LOCAL
1 #IS-REVERSE    (L)
1 #I             (I4)
1 #SORT-DT       (P15)
1 #SORT-PR       (P15)
1 #IS-FOUND      (L)
END-DEFINE
DEFINE SUBROUTINE MBMTSA0S
RESET XXERX00A
/*
DECIDE ON FIRST VALUE MBMTSA0A.BL-COMMAND
VALUE "FIFO"
  PERFORM SALDO-SEARCH
VALUE "LIFO"
  #IS-REVERSE := TRUE
  PERFORM SALDO-SEARCH
NONE VALUE
  MOVE MBMTSA0A.BL-COMMAND TO ERROR-ADDITION(1)
  *ERROR-NR := EC-UNKNOW-COMMAND
END-DECIDE
/*
DEFINE SUBROUTINE SALDO-SEARCH
  IF MBMTSA0A.SH-MO-ID EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ID-REQUIRED
  END-IF
  IF MBMTSA0A.SH-MT-ID EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ID-REQUIRED
  END-IF
  PERFORM STACK-INIT
  MOVE MBMTSA0A.SH-IT-ID(*) TO MBSASH0A.IT-ID(*)
  MOVE MBMTSA0A.SH-MO-ID TO MBSASH0A.MO-ID
  MOVE MBMTSA0A.SH-MT-ID TO MBSASH0A.MT-ID
  MOVE MBMTSA0A.SH-DF-ID TO MBSASH0A.MT-ID
  MOVE MBMTSA0A.SH-PR-ID TO MBSASH0A.PR-ID
  MOVE MBMTSA0A.SH-ZK-ID TO MBSASH0A.ZK-ID
  MOVE MBMTSA0A.SH-LK-ID TO MBSASH0A.LK-ID
  MOVE MBMTSA0A.DR-EXCLUDE TO MBSASH0A.DR-EXCLUDE
  MOVE "SEARCH" TO MBSASH0A.BL-COMMAND
  PERFORM MBSASH0S XXERX00A XXCTXX0A MBSASH0A MBSAST0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  IF STACK-LEN = 0 THEN
     RETURN-CODE := EC-OBJECT-NOT-FOUND
  END-IF
  FOR #I = 1 TO STACK-LEN
     MOVE #I TO STACK-POS
     CALL "RWSX" STACK-POS STACK-REC-B(1) STACK-READ  STACK-NUMBER
     IF #IS-REVERSE THEN
        #SORT-DT := MBSAST0L.DT-ID * -1
        #SORT-PR := MBSAST0L.PR-ID * -1
     ELSE
        #SORT-DT := MBSAST0L.DT-ID
        #SORT-PR := MBSAST0L.PR-ID
     END-IF
  END-ALL
  SORT #SORT-DT #SORT-PR USING STACK-REC-B(*)
     IF MBSAST0L.BASE-COL NE 0 THEN
        MOVE BY NAME MBSAST0L.STACK-REC-G TO MBMTSA0A.SH-RESULT
        #IS-FOUND := TRUE
        ESCAPE BOTTOM
     END-IF
  END-SORT
  PERFORM STACK-FREE
  IF NOT #IS-FOUND THEN
     RETURN-CODE := EC-OBJECT-NOT-FOUND
  END-IF
END-SUBROUTINE
/*
INCLUDE XXSTMN3C "MBSAST0A" "MBSAST0L-CONST" "MBSAST0L"
        "STACK-INIT" "STACK-FREE" "STACK-PUSH" "STACK-REALLOC"
/*
INCLUDE XXERSY1C
END-SUBROUTINE
END

