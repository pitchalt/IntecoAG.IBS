* >Natural Source Header 000000 /*<RO>>
* :NatName MPPOPL0S
* :UID PAUL
* :Mode S
* :CP
* :Date 20070628
* :Time 0917000
* <Natural Source Header /*<<RO>
/***********************************************************************
/*
/* СИСТЕМА: ARM-K
/* ПРОГРАММА: РЕДАКТОР
/*
/* РАЗРАБОТЧИК: УЗОРИН П.А.
/* ДАТА ВЫПУСКА:
/*
/* НАЗВАНИЕ: РЕДАКТОР расходный ордер СПИСОК ТМЦ
/* КОМАНДЫ:
/*  - EDIT
/*  - NEW
/*  - VIEW
/*
/* ИСПРАВЛЕНИЯ:
/*
/***********************************************************************
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING XXCTXX0A
PARAMETER USING XPMXXX1A
PARAMETER USING MEPHMN0A
PARAMETER USING UXCSXX0A
/* СТАНДАРТНЫЕ КОДЫ ОШИБОК
LOCAL USING XXXXEC0L
LOCAL USING XPXXEC0L
/*
LOCAL USING XPCPXX0L
/* ОБЛАСТИ ЭКРАНОВ
LOCAL USING XPMXSM0L
LOCAL USING MPPOPL0L
/*
LOCAL USING MEPOPLSA
LOCAL USING MEPOPL0A
LOCAL USING MEPOPM0A
LOCAL USING XMBMXX1A
/*
LOCAL
1 SCREEN-STACK
2 IS-TOP         (L)
2 IS-BOT         (L)
2 SCREEN-TOP     (I4)
2 SCREEN-POS     (I4)
2 SCREEN-BOT     (I4)
1 #BUFFER        (A70)
1 #TYPE-COL      (A1)
END-DEFINE
DEFINE SUBROUTINE MPPOPL0S
RESET BM-COMMAND-PROCESS
/*
IF MX-COMMAND NE "VIEW" AND MX-COMMAND NE 'EDIT' AND MX-COMMAND NE "NEW" THEN
   MOVE MX-COMMAND TO ERROR-ADDITION(1)
   *ERROR-NR := EC-UNKNOW-COMMAND
END-IF
/*
MX-EDITOR-NAME := 'Список позиций исходного прихода'
/*
PERFORM SCREEN-INIT
PERFORM SCREEN-PREPARE
PERFORM LIST-LOAD
IF RETURN-CODE EQ 0 THEN
  PERFORM LIST-TOP
END-IF
PERFORM SCREEN-MAIN-LOOP
/*
PERFORM LIST-FREE
MOVE CP-CMD-EXIT TO BM-COMMAND-PROCESS
/* Основной цикл
INCLUDE XPMXXX2C
/* Управление экраном и обработка комманд
INCLUDE XPMFLS1C "'''MPPOPL0M'''" "MPPOPL0L.DL-CMD"
                 "MPPOPL0L-LINES-MAX"
/* Стандартна  обработка команд
DEFINE SUBROUTINE COMMAND-PROCESS
  DECIDE ON FIRST VALUE CP-COMMAND
     VALUE 'LIST-TOP'
        PERFORM SCREEN-CHECK
        IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
        PERFORM LIST-TOP
        IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
     VALUE 'LIST-BOT'
        PERFORM SCREEN-CHECK
        IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
        PERFORM LIST-BOTTOM
        IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
     VALUE 'LIST-NEXT'
        PERFORM SCREEN-CHECK
        IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
        PERFORM LIST-NEXT
        IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
     VALUE 'LIST-PREV'
        PERFORM SCREEN-CHECK
        IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
        PERFORM LIST-PREV
        IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
     VALUE 'SELECT'
        PERFORM OBJECT-SELECT
     VALUE 'CHECK'
        PERFORM SCREEN-CHECK
        IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
        PERFORM LIST-RELOAD
     VALUE 'NEW'
        PERFORM SCREEN-CHECK
        IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
        PERFORM SCREEN-TO-OBJECT
        PERFORM OBJECT-ADD
        IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
        PERFORM LIST-RELOAD
     VALUE 'SAVE'
        PERFORM SCREEN-CHECK
        IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
     VALUE 'EXIT'
        ESCAPE ROUTINE
     NONE VALUE
        MOVE CP-COMMAND TO ERROR-ADDITION(1)
        RETURN-CODE := EC-UNKNOW-COMMAND
  END-DECIDE
END-SUBROUTINE
/*
DEFINE SUBROUTINE LINE-CHECK
  INCLUDE XPCSCH0C "MPPOPL0L.DL-CMD" "MPPOPL0L-LINES-MAX"
END-SUBROUTINE
/*
DEFINE SUBROUTINE LINE-ENABLE
  IGNORE
END-SUBROUTINE
/*
DEFINE SUBROUTINE LINE-DISABLE
  IGNORE
END-SUBROUTINE
/*
DEFINE SUBROUTINE OBJECT-TO-SCREEN
  IGNORE
END-SUBROUTINE
/*
DEFINE SUBROUTINE LINE-TO-SCREEN
/*  WRITE 'o2s' CP-LINE-CURRENT SCREEN-POS
  RESET DL-CMD-C(CP-LINE-CURRENT)
  MOVE SCREEN-POS TO MEPOPM0A.STACK-POS
  MOVE "READ" TO MEPOPM0A.ME-COMMAND
  PERFORM MIPOPM0S XXERX00A XXCTXX0A MEPOPLSA MEPOPM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  MOVE BY NAME MEPOPM0A TO MPPOPL0L.DR-LINES(CP-LINE-CURRENT)
END-SUBROUTINE
/*
DEFINE SUBROUTINE SCREEN-TO-OBJECT
  MOVE BY NAME DR-LINES(CP-LINE-CURRENT) TO MEPOPM0A
END-SUBROUTINE
/*
DEFINE SUBROUTINE SCREEN-PREPARE
  IF MX-COMMAND EQ "VIEW" THEN
     CP-CURS-FIELD := POS(MPPOPL0L.DL-CMD(1))
     MOVE (AD=P) TO DL-CMD-C(*)
  ELSE
     CP-CURS-FIELD := POS(MPPOPL0L.DL-CMD(1))
     RESET DL-CMD-C(*)
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE LIST-LOAD
  MOVE MEPHMN0A.PO-ID TO MEPOPL0A.PO-ID
  MOVE MEPHMN0A.STORNO-PO-ID TO MEPOPL0A.STORNO-PO-ID
  MOVE "LOAD" TO MEPOPL0A.ME-COMMAND
  PERFORM MEPOPL0S XXERX00A XXCTXX0A MEPOPLSA MEPOPL0A UXCSXX0A
END-SUBROUTINE
/*
DEFINE SUBROUTINE LIST-FREE
  MOVE "FREE" TO MEPOPL0A.ME-COMMAND
  PERFORM MEPOPL0S XXERX00A XXCTXX0A MEPOPLSA MEPOPL0A UXCSXX0A
END-SUBROUTINE
/*
DEFINE SUBROUTINE LIST-RELOAD
  MOVE SCREEN-TOP TO SCREEN-BOT
  SUBTRACT 1 FROM SCREEN-BOT
  PERFORM LIST-NEXT
END-SUBROUTINE
/*
DEFINE SUBROUTINE LIST-TOP
  SCREEN-TOP := 0
  SCREEN-BOT := 0
  PERFORM LIST-NEXT
END-SUBROUTINE
/*
DEFINE SUBROUTINE LIST-NEXT
  PERFORM OBJECT-TO-SCREEN
  IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
  MOVE SCREEN-BOT TO SCREEN-POS
  IF SCREEN-POS GE STACK-LEN THEN ESCAPE ROUTINE END-IF
  FOR CP-LINE-CURRENT = 1 TO MPPOPL0L-LINES-MAX
     ADD 1 TO SCREEN-POS
     IF SCREEN-POS GT STACK-LEN THEN
        PERFORM OBJECT-CLEAN
        ESCAPE TOP
     END-IF
     IF CP-LINE-CURRENT = 1 THEN
        MOVE SCREEN-POS TO SCREEN-TOP
     END-IF
     MOVE SCREEN-POS TO SCREEN-BOT
/*     WRITE 'next' CP-LINE-CURRENT SCREEN-POS
     PERFORM LINE-TO-SCREEN
  END-FOR
END-SUBROUTINE
/*
DEFINE SUBROUTINE LIST-PREV
  PERFORM OBJECT-TO-SCREEN
  IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
  MOVE SCREEN-TOP TO SCREEN-POS
  IF SCREEN-POS LE 1 THEN ESCAPE ROUTINE END-IF
  FOR CP-LINE-CURRENT = MPPOPL0L-LINES-MAX TO 1 STEP -1
     SUBTRACT 1 FROM SCREEN-POS
     IF SCREEN-POS LT 1 THEN ESCAPE BOTTOM END-IF
     IF CP-LINE-CURRENT = MPPOPL0L-LINES-MAX THEN
        MOVE SCREEN-POS TO SCREEN-BOT
     END-IF
     MOVE SCREEN-POS TO SCREEN-TOP
     PERFORM LINE-TO-SCREEN
  END-FOR
  IF SCREEN-POS EQ 0 THEN
     PERFORM LIST-TOP
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE LIST-BOTTOM
  MOVE STACK-LEN TO SCREEN-TOP
  ADD 1 TO SCREEN-TOP
  MOVE SCREEN-TOP TO SCREEN-BOT
  PERFORM LIST-PREV
END-SUBROUTINE
/*
/*DEFINE SUBROUTINE LINE-CHECK
/*  FOR CP-LINE-INDEX = 1 TO MPRLZL0L-LINES-MAX
/*     INCLUDE XPCSCH1C "MPRLZL0L.DL-CMD"
/*     INCLUDE XPCSCH1C "MPRLZL0L.MT-CODE"
/*  END-FOR
/*END-SUBROUTINE
/*
DEFINE SUBROUTINE OBJECT-CLEAN
  RESET DR-LINES(CP-LINE-CURRENT)
  MOVE (AD=PN) TO DL-CMD-C(CP-LINE-CURRENT)
  MOVE (AD=PN) TO DL-CMD-C(CP-LINE-CURRENT)
END-SUBROUTINE
/*
DEFINE SUBROUTINE SCREEN-CHECK
  FOR CP-LINE-CURRENT = 1 TO MPPOPL0L-LINES-MAX
     IF DL-CMD-C(CP-LINE-CURRENT) MODIFIED THEN
        PERFORM SCREEN-TO-OBJECT
        SCREEN-POS := SCREEN-TOP + CP-LINE-CURRENT - 1
        MEPOPM0A.STACK-POS := SCREEN-POS
/*        MOVE MEpoPL0A.RL-ID TO MEpoPM0A.RL-ID
        MOVE "UPDATE" TO MEPOPM0A.ME-COMMAND
        PERFORM MIPOPM0S XXERX00A XXCTXX0A MEPOPLSA MEPOPM0A UXCSXX0A
        IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
/*
        PERFORM LINE-TO-SCREEN
     END-IF
  END-FOR
END-SUBROUTINE
/*
INCLUDE XXERSY1C
END-SUBROUTINE
END
