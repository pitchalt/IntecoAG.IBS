* >Natural Source Header 000000 /*<RO>>
* :NatName UDOPMN0S
* :UID PAUL
* :Mode S
* :CP
* :Date 20070627
* :Time 1739000
* <Natural Source Header /*<<RO>
/***********************************************************************
/*
/* ÑÈÑÒÅÌÀ:
/* ÏÐÎÃÐÀÌÌÀ:
/*
/* ÐÀÇÐÀÁÎÒ×ÈÊ:  ÓÇÎÐÈÍ Ï.À.
/* ÄÀÒÀ ÂÛÏÓÑÊÀ:
/*
/* ÍÀÇÂÀÍÈÅ:  ÓÐÎÂÅÍÜ ÄÀÍÍÛÕ ÐÀÁÎÒÀ Ñ ÇÀÏÈÑÜÞ ÄÎÊÓÌÅÍÒÀ
/*
/* ÊÎÌÀÍÄÛ:
/*   ADD
/*
/* ÈÑÏÐÀÂËÅÍÈß:
/*
/***********************************************************************
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING UDOPMN0A
/*
LOCAL USING XXXXEC0L
LOCAL USING UXXXEC0L
LOCAL USING UDXXID0L
LOCAL USING UDOPMN0L
/*
LOCAL
1 #COUNT-TX   (I4)
1 #I          (I4)
1 #J          (I4)
1 #K          (I4)
1 #IS-FOUND   (L)
1 #COUNT-AA   (I2)
1 #COUNT-AM   (I2)
1 #DEBET      (I2)
1 #CREDIT     (I2)
1 #DATA-A     (A8)
1 REDEFINE #DATA-A
2 #DATA-N     (N8)
1 #OP-STATE   (A1)
1 #AT-COUNT   (I4/1:2)
1 #INDEX      (I4)
END-DEFINE
DEFINE SUBROUTINE UDOPMN0S
RESET XXERX00A
/*
DECIDE ON FIRST VALUE DL-COMMAND
VALUE 'ADD'
  PERFORM RECORD-ADD
VALUE 'PACK'
  PERFORM RECORD-PACK
VALUE 'DELDOC'
  PERFORM RECORD-DOC-DELETE
VALUE 'DELETE'
  PERFORM RECORD-DELETE
NONE VALUE
  MOVE DL-COMMAND TO ERROR-ADDITION(1)
  *ERROR-NR := EC-UNKNOW-COMMAND
END-DECIDE
/*
DEFINE SUBROUTINE RECORD-INT-DELETE
  IGNORE
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-DOC-DELETE
  IF DEL-DC-ID EQ 0 THEN *ERROR-NR := EC-OBJECT-ID-REQUIRED END-IF
  IF UDOPMN0A.TX-ID EQ 0 THEN *ERROR-NR := EC-TRANSACTION-REQUIRED END-IF
  FIND UR-ACC-OP-VIEW WITH OP-DR-LIST-ID EQ DEL-DC-ID
     ADD 1 TO #COUNT-TX
/*     WRITE 'del' UR-ACC-OP-VIEW.UD-ID UR-ACC-OP-VIEW.OP-STATE UR-ACC-OP-VIEW.TX-STATUS
/*           UR-ACC-OP-VIEW.OP-SRC-DR-ID(1)
     IF UR-ACC-OP-VIEW.TX-CURRENT-ID NE 0 AND
        UR-ACC-OP-VIEW.TX-CURRENT-ID NE UDOPMN0A.TX-ID THEN
        *ERROR-NR := EC-TRANSACTION-CONFLICT
     END-IF
     IF IS-OP-DEBUG AND (UR-ACC-OP-VIEW.TX-STATUS EQ "A" OR EQ "N") THEN
        WRITE 'DEL' UR-ACC-OP-VIEW.UD-ID UR-ACC-OP-VIEW.OP-SRC-DD-ID(1)
              UR-ACC-OP-VIEW.OP-SRC-DR-ID(1) UR-ACC-OP-VIEW.MD-IT-ID(1)
              UR-ACC-OP-VIEW.MD-IT-ID(2)
     END-IF
     DECIDE ON FIRST VALUE UR-ACC-OP-VIEW.TX-STATUS
     VALUE 'P', 'D'
        IF #COUNT-TX > 200 THEN RESET #COUNT-TX END TRANSACTION END-IF
        ESCAPE TOP
     VALUE 'A'
        DELETE
     VALUE 'N'
        IF NOT (UR-ACC-OP-VIEW.OP-STATE EQ 'N' OR EQ 'P' ) THEN
           *ERROR-NR := EC-RECORD-TYPE-MISMATCH
        END-IF
        UR-ACC-OP-VIEW.TX-STATUS := 'D'
        UR-ACC-OP-VIEW.TX-CURRENT-ID := UDOPMN0A.TX-ID
        RESET UR-ACC-OP-VIEW.OP-PACK-REQUIRED
        IF UR-ACC-OP-VIEW.OP-STATE EQ 'P' THEN
           MOVE 'S' TO UR-ACC-OP-VIEW.OP-STATE
           UR-ACC-OP-VIEW.OP-CL-ID := UR-ACC-OP-VIEW.CL-ID * 10 + 2
        END-IF
        UPDATE
     NONE VALUE
        *ERROR-NR := EC-RECORD-TYPE-MISMATCH
     END-DECIDE
     IF #COUNT-TX > 200 THEN RESET #COUNT-TX END TRANSACTION END-IF
  END-FIND
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-DELETE
  IF UDOPMN0A.OP-ID EQ 0 THEN *ERROR-NR := EC-OBJECT-ID-REQUIRED END-IF
  IF TX-ID EQ 0 THEN *ERROR-NR := EC-TRANSACTION-REQUIRED END-IF
  FIND UR-ACC-DELETE-VIEW WITH UD-ID EQ UDOPMN0A.OP-ID
     ADD 1 TO #COUNT-TX
     DECIDE ON FIRST VALUE UR-ACC-DELETE-VIEW.TX-STATUS
     VALUE 'P', 'D'
        IF #COUNT-TX > 200 THEN RESET #COUNT-TX END TRANSACTION END-IF
        ESCAPE TOP
     VALUE 'A'
        DELETE
     VALUE 'N'
        IF NOT (UR-ACC-DELETE-VIEW.OP-STATE EQ 'N' OR EQ 'P' ) THEN
           *ERROR-NR := EC-RECORD-TYPE-MISMATCH
        END-IF
        RESET UR-ACC-DELETE-VIEW.OP-PACK-REQUIRED
        UR-ACC-DELETE-VIEW.TX-STATUS := 'D'
        UR-ACC-DELETE-VIEW.TX-CURRENT-ID := UDOPMN0A.TX-ID
        IF UR-ACC-DELETE-VIEW.OP-STATE EQ 'P' THEN
           MOVE 'S' TO UR-ACC-DELETE-VIEW.OP-STATE
           UR-ACC-DELETE-VIEW.OP-CL-ID := UR-ACC-DELETE-VIEW.CL-ID * 10 + 2
        END-IF
        UPDATE
     NONE VALUE
        *ERROR-NR := EC-RECORD-TYPE-MISMATCH
     END-DECIDE
     IF #COUNT-TX > 200 THEN RESET #COUNT-TX END TRANSACTION END-IF
  END-FIND
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-PACK
  IF UDOPMN0A.OP-ID EQ 0 THEN *ERROR-NR := EC-OBJECT-ID-REQUIRED END-IF
  FIND UR-ACC-OP-VIEW WITH UD-ID EQ UDOPMN0A.OP-ID
     IF NO RECORD FOUND
        *ERROR-NR := EC-OBJECT-NOT-FOUND
     END-NOREC
/*     WRITE 'pack' UDOPMN0A.OP-ID UR-ACC-OP-VIEW.OP-CL-ID TX-STATUS UR-ACC-OP-VIEW.OP-STATE
/*     IF TX-STATUS = "D" THEN DELETE RETURN-CODE := -2 ESCAPE ROUTINE END-IF
     IF NOT (TX-STATUS EQ 'N' OR EQ 'P') THEN
        *ERROR-NR := EC-RECORD-TYPE-MISMATCH
     END-IF
     IF UR-ACC-OP-VIEW.OP-STATE EQ 'N' OR EQ 'S' THEN
        #OP-STATE := UR-ACC-OP-VIEW.OP-STATE
        RESET UR-ACC-OP-VIEW.OP-CL-ID
        UR-ACC-OP-VIEW.OP-STATE := 'P'
        RESET OP-PACK-REQUIRED
        UPDATE
     ELSE
        *ERROR-NR := EC-RECORD-TYPE-MISMATCH
     END-IF
  END-FIND
  MOVE 1 TO UDOPMN0A.OP-MODIF
  MOVE UR-ACC-OP-VIEW.OP-ID(1) TO UDOPMN0A.OP-ID
  MOVE #OP-STATE TO UDOPMN0A.OP-STATE
  MOVE UR-ACC-OP-VIEW.OP-OD-ID(1) TO UDOPMN0A.OD-ID
  MOVE UR-ACC-OP-VIEW.OP-OD-SEQ-NUM(1) TO UDOPMN0A.OD-SEQ-NUM
  MOVE UR-ACC-OP-VIEW.CL-ID TO UDOPMN0A.CL-ID
  MOVE UR-ACC-OP-VIEW.OP-SRC-DD-ID(1) TO UDOPMN0A.SRC-DD-ID
  MOVE UR-ACC-OP-VIEW.OP-SRC-DR-ID(1) TO UDOPMN0A.SRC-DR-ID
  MOVE UR-ACC-OP-VIEW.OP-DC-DD-ID(1) TO UDOPMN0A.DC-DD-ID
  MOVE UR-ACC-OP-VIEW.OP-DC-DR-ID(1) TO UDOPMN0A.DC-DR-ID
  MOVE BY NAME UR-ACC-OP-VIEW.AD-G(*) TO UDOPMN0A.AD-G(*)
  RESET UDOPMN0A.AT-G(*)
/*  WRITE 'op'
  FOR #I = 1 TO C*MD-G
     IF UR-ACC-OP-VIEW.MD-OP-INT-NUM(#I) EQ UR-ACC-OP-VIEW.OP-INT-NUM(1) AND
        (UR-ACC-OP-VIEW.MD-MODIF(#I) EQ 1 OR EQ 2) THEN
        MOVE UR-ACC-OP-VIEW.MD-MODIF(#I) TO #INDEX
        MOVE UR-ACC-OP-VIEW.MD-IT-ID(#I) TO UDOPMN0A.IT-ID(#INDEX)
        MOVE UR-ACC-OP-VIEW.MD-IT-SALDO-TYPE(#I) TO UDOPMN0A.IT-SALDO-TYPE(#INDEX)
        MOVE UR-ACC-OP-VIEW.MD-IX-ID(#I) TO UDOPMN0A.IX-ID(#INDEX)
/*        WRITE '- MD' #I #INDEX UR-ACC-OP-VIEW.MD-IT-ID(#I)
        FOR #J = 1 TO C*AT-G
           IF AT-MD-INT-NUM(#J,*) EQ UR-ACC-OP-VIEW.MD-INT-NUM(#I) THEN
              ADD 1 TO AT-MD-C(#INDEX)
              MOVE AT-MD-C(#INDEX) TO #K
              MOVE BY NAME UR-ACC-OP-VIEW.AT-G(#J) TO
                       UDOPMN0A.AT-MD-G(#INDEX, #K )
/*              WRITE '-- AT' #J #K
           END-IF
        END-FOR
     END-IF
  END-FOR
  IF #OP-STATE EQ 'N' AND UR-ACC-OP-VIEW.TX-STATUS EQ 'N' THEN
     UR-ACC-OP-VIEW.OP-CL-ID := UR-ACC-OP-VIEW.CL-ID * 10 + 3
     RESET UR-ACC-OP-VIEW.OP-DR-LIST-ID(*)
     MOVE 3 TO UR-ACC-OP-VIEW.UD-RECORD-TYPE
     RESET UR-ACC-OP-VIEW.UD-ID
SL2.
     STORE UR-ACC-OP-VIEW
GL2.
     GET UR-ACC-OP-ID-VIEW *ISN(SL2.)
     INCLUDE UDXXID0C 'UR-ACC-OP-ID-VIEW.UD-ID' '*ISN(SL2.)'
     UPDATE (GL2.)
  END-IF
  IF #OP-STATE EQ 'S' THEN
     UD-OP-ID-SUPER.OP-CL-ID := UR-ACC-OP-VIEW.CL-ID * 10 + 3
     UD-OP-ID-SUPER.OP-ID := UR-ACC-OP-VIEW.UD-ID
     FIND UR-ACC-OP-VIEW WITH UD-OP-ID-SUPER EQ UD-OP-ID-SUPER
        IF NO RECORD FOUND
           *ERROR-NR := EC-OBJECT-NOT-FOUND
        END-NOREC
        DELETE
     END-FIND
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-ADD
/*
IF UDOPMN0A.TX-ID EQ 0 THEN *ERROR-NR := EC-TRANSACTION-REQUIRED END-IF
IF UDOPMN0A.OD-ID EQ 0 THEN *ERROR-NR := EC-OBJECT-ID-REQUIRED END-IF
IF UDOPMN0A.CL-ID EQ 0 THEN *ERROR-NR := EC-OBJECT-ID-REQUIRED END-IF
IF UDOPMN0A.IT-ID(1) EQ 0 AND UDOPMN0A.IT-ID(2) EQ 0 THEN
  *ERROR-NR := EC-OBJECT-ID-REQUIRED
END-IF
IF UDOPMN0A.IX-ID(1) EQ 0 AND UDOPMN0A.IT-ID(1) NE 0 THEN
  *ERROR-NR := EC-OBJECT-ID-REQUIRED
END-IF
IF UDOPMN0A.IX-ID(2) EQ 0 AND UDOPMN0A.IT-ID(2) NE 0 THEN
  *ERROR-NR := EC-OBJECT-ID-REQUIRED
END-IF
IF UDOPMN0A.SRC-DD-ID EQ 0 THEN *ERROR-NR := EC-OBJECT-ID-REQUIRED END-IF
IF UDOPMN0A.SRC-DR-ID EQ 0 THEN *ERROR-NR := EC-OBJECT-ID-REQUIRED END-IF
IF UDOPMN0A.DC-DD-ID EQ 0 THEN *ERROR-NR := EC-OBJECT-ID-REQUIRED END-IF
IF UDOPMN0A.DC-DR-ID EQ 0 THEN *ERROR-NR := EC-OBJECT-ID-REQUIRED END-IF
IF NOT (UDOPMN0A.IT-SALDO-TYPE(1) EQ 1 OR EQ 2) AND
   UDOPMN0A.IT-ID(1) NE 0 THEN
     MOVE 'IT-SALDO-TYPE(1)' TO ERROR-ADDITION(1)
     MOVE EDITED UDOPMN0A.IT-SALDO-TYPE(1) (EM=Z9) TO ERROR-ADDITION(2)
      *ERROR-NR := EC-ATTR-VALUE-UNKNOW END-IF
IF NOT (UDOPMN0A.IT-SALDO-TYPE(2) EQ 1 OR EQ 2) AND
   UDOPMN0A.IT-ID(2) NE 0 THEN
     MOVE 'IT-SALDO-TYPE(2)' TO ERROR-ADDITION(1)
     MOVE EDITED UDOPMN0A.IT-SALDO-TYPE(2) (EM=Z9) TO ERROR-ADDITION(2)
      *ERROR-NR := EC-ATTR-VALUE-UNKNOW END-IF
IF UDOPMN0A.OD-SEQ-NUM LE 0 THEN
     MOVE 'OD-SEQ-NUM' TO ERROR-ADDITION(1)
     MOVE EDITED UDOPMN0A.OD-SEQ-NUM  (EM=ZZZZZZZ9) TO ERROR-ADDITION(2)
      *ERROR-NR := EC-ATTR-VALUE-UNKNOW END-IF
/*
  MOVE 2 TO UR-ACC-OP-VIEW.UD-RECORD-TYPE
  MOVE 'N' TO UR-ACC-OP-VIEW.OP-STATE
/*  MOVE UDOPMN0A.TX-ID TO UR-ACC-OP-VIEW.TX-OP-ADD-ID
  MOVE UDOPMN0A.TX-ID TO UR-ACC-OP-VIEW.TX-CURRENT-ID
  MOVE 'A' TO UR-ACC-OP-VIEW.TX-STATUS
  MOVE UDOPMN0A.CL-ID TO UR-ACC-OP-VIEW.CL-ID
  UR-ACC-OP-VIEW.OP-CL-ID := UDOPMN0A.CL-ID * 10 + 2
  IF NOT (UDOPMN0A.OP-MODIF EQ 1 OR EQ 2) THEN
     MOVE 'OP-MODIF' TO ERROR-ADDITION(1)
     MOVE EDITED OP-MODIF (EM=Z9) TO ERROR-ADDITION(2)
     *ERROR-NR := EC-ATTR-VALUE-UNKNOW
  END-IF
  IF UDOPMN0A.OP-MODIF EQ 1 THEN
     MOVE 1 TO UR-ACC-OP-VIEW.MD-MODIF(1)
     MOVE 2 TO UR-ACC-OP-VIEW.MD-MODIF(2)
     MOVE UDOPMN0A.IX-ID(1) TO UR-ACC-OP-VIEW.OP-IX-DEBET(1)
     MOVE UDOPMN0A.IX-ID(2) TO UR-ACC-OP-VIEW.OP-IX-CREDIT(1)
  ELSE IF UDOPMN0A.OP-MODIF EQ 2 THEN
     MOVE 2 TO UR-ACC-OP-VIEW.MD-MODIF(1)
     MOVE 1 TO UR-ACC-OP-VIEW.MD-MODIF(2)
     MOVE UDOPMN0A.IX-ID(2) TO UR-ACC-OP-VIEW.OP-IX-DEBET(1)
     MOVE UDOPMN0A.IX-ID(1) TO UR-ACC-OP-VIEW.OP-IX-CREDIT(1)
  ELSE
      *ERROR-NR := EC-ATTR-VALUE-UNKNOW
  END-IF END-IF
  MOVE 1 TO OP-INT-NUM(1)
  MOVE UDOPMN0A.OD-ID TO OP-OD-ID(1)
  MOVE UDOPMN0A.OD-SEQ-NUM TO OP-OD-SEQ-NUM(1)
  MOVE UDOPMN0A.SRC-DD-ID TO OP-SRC-DD-ID(1)
  MOVE UDOPMN0A.SRC-DR-ID TO OP-SRC-DR-ID(1)
  MOVE UDOPMN0A.DC-DD-ID TO OP-DC-DD-ID(1)
  MOVE UDOPMN0A.DC-DR-ID TO OP-DC-DR-ID(1)
  MOVE UDOPMN0A.OP-DR-LIST(*) TO OP-DR-LIST-ID(*)
/*  MOVE UDOPMN0A.SRC-DR-ID TO OP-DR-LIST-ID(1)
/*  MOVE UDOPMN0A.DC-DR-ID TO OP-DR-LIST-ID(2)
  FOR #I = 1 TO 5
     IF UDOPMN0A.AD-ATTR-ID(#I) EQ 0 THEN ESCAPE BOTTOM END-IF
     MOVE #I TO UR-ACC-OP-VIEW.AD-INT-NUM(#I)
     MOVE UDOPMN0A.AD-ATTR-ID(#I) TO UR-ACC-OP-VIEW.AD-ATTR-ID(#I)
     MOVE UDOPMN0A.AD-VALUE(#I) TO UR-ACC-OP-VIEW.AD-VALUE(#I)
     MOVE #I TO UR-ACC-OP-VIEW.MD-AD-INT-NUM(1,#I)
     MOVE #I TO UR-ACC-OP-VIEW.MD-AD-INT-NUM(2,#I)
     MOVE EDITED UDOPMN0A.AD-VALUE(#I) (EM=YYYYMMDD) TO #DATA-A
     MOVE #DATA-N TO UR-ACC-OP-VIEW.DT-INDEX(#I)
  END-FOR
  FOR #I = 1 TO 2
     MOVE #I TO UR-ACC-OP-VIEW.MD-INT-NUM(#I)
     MOVE 1 TO UR-ACC-OP-VIEW.MD-OP-INT-NUM(#I)
     MOVE UDOPMN0A.IX-ID(#I) TO UR-ACC-OP-VIEW.MD-IX-ID(#I)
     MOVE UDOPMN0A.IT-ID(#I) TO UR-ACC-OP-VIEW.MD-IT-ID(#I)
     MOVE UDOPMN0A.IT-SALDO-TYPE(#I) TO UR-ACC-OP-VIEW.MD-IT-SALDO-TYPE(#I)
     IF UDOPMN0A.IT-ID(#I) EQ 0 THEN ESCAPE TOP END-IF
     FOR #J = 1 TO 30
        IF UDOPMN0A.AT-ATTR-ID(#I,#J) EQ 0 THEN ESCAPE BOTTOM END-IF
        #IS-FOUND := FALSE
        FOR #K = 1 TO C*AT-G
           IF UDOPMN0A.AT-ATTR-ID(#I,#J) EQ
                    UR-ACC-OP-VIEW.AT-ATTR-ID(#K) AND
              UDOPMN0A.AT-ATTR-TYPE(#I,#J) EQ
                    UR-ACC-OP-VIEW.AT-ATTR-TYPE(#K) AND
              UDOPMN0A.AT-EDIZ-ID(#I,#J) EQ
                    UR-ACC-OP-VIEW.AT-EDIZ-ID(#K) AND
              UDOPMN0A.AT-VALUE(#I,#J) EQ UR-ACC-OP-VIEW.AT-VALUE(#K) THEN
              #IS-FOUND := TRUE ESCAPE BOTTOM
           END-IF
        END-FOR
        IF NOT #IS-FOUND THEN
           ADD 1 TO C*AT-G
           MOVE C*AT-G TO #K
           MOVE #K TO UR-ACC-OP-VIEW.AT-INT-NUM(#K)
           MOVE BY NAME UDOPMN0A.AT-MD-G(#I,#J) TO
                 UR-ACC-OP-VIEW.AT-G(#K)
           IF UDOPMN0A.AT-ATTR-TYPE(#I,#J) EQ 'A' OR EQ 'I' THEN
              MOVE TRUE TO UR-ACC-OP-VIEW.AT-IS-INDEX(#K)
           END-IF
        END-IF
        MOVE #I TO UR-ACC-OP-VIEW.AT-MD-INT-NUM(#K,#I)
     END-FOR
  END-FOR
SL1.
  STORE UR-ACC-OP-VIEW
GL1.
  GET UR-ACC-OP-ID-VIEW *ISN(SL1.)
  INCLUDE UDXXID0C 'UR-ACC-OP-ID-VIEW.UD-ID' '*ISN(SL1.)'
  MOVE UR-ACC-OP-ID-VIEW.UD-ID TO UR-ACC-OP-ID-VIEW.OP-ID(1)
  UPDATE (GL1.)
  MOVE UR-ACC-OP-ID-VIEW.UD-ID TO UDOPMN0A.OP-ID
END-SUBROUTINE
/*
INCLUDE XXERSY1C
END-SUBROUTINE
END

