* >Natural Source Header 000000 /*<RO>>
* :NatName MBOTXX0S
* :UID PAUL
* :Mode S
* :CP
* :Date 20070531
* :Time 1439000
* <Natural Source Header /*<<RO>
/* √ŒÀŒ¬Õ¿ﬂ œ–Œ√–¿ÃÃ¿ ”œ–¿¬À≈Õ»ﬂ —∆¿“»≈Ã
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING MBOTXX0A    /* Œ¡À¿—“‹ œ¿–¿Ã≈“–Œ¬
PARAMETER USING MBXXSS0A
PARAMETER USING MBXXOP0A
PARAMETER USING XXCTXX0A
PARAMETER USING XPMXXX1A
/* —“≈ » —‘Œ–Ã»–Œ¬¿ÕÕ€≈ œŒ «¿œ–Œ—¿Ã
LOCAL USING MBXXZP0A
LOCAL USING MXITAT0L
LOCAL USING XXXXEC0L
LOCAL
1 #I        (I4)
1 #J        (I4)
1 #K        (I4)
1 #WAY      (A253)
1 #LEN      (I2)
1 #COMMAND  (A10)
END-DEFINE
DEFINE SUBROUTINE MBOTXX0S
  /*
  MBOTXX0A.OT-LEVEL := 1
  FOR #I = 1 TO 30
     IF MBXXOP0A.OP-ATTR(#I) = "AN"
        MBOTXX0A.OT-CODE := MBXXOP0A.OP-CODE-AT(#I)
        ESCAPE BOTTOM
     END-IF
  END-FOR
  RESET #I
  REPEAT
     ADD 1 TO #I
     IF MBOTXX0A.OT-FIX-ANALITIK(#I) = 0 THEN
        MBOTXX0A.OT-FIX-ANALITIK(#I) := MBOTXX0A.OT-CODE
        ESCAPE BOTTOM
     END-IF
  END-REPEAT
  PERFORM OPER-STACK
  /* ◊»“¿≈Ã Œœ»—¿Õ»≈ ¬ ÀŒ ¿À‹Õ”ﬁ Œ¡À¿—“‹
REPEAT
  /*  ¿ ”ﬁ œ–Œ√–¿ÃÃ” Œ¡–¿¡Œ“ » ¬€¡–¿“‹
  /* Õ≈Œ¡’Œƒ»ÃŒ Õ¿…“» œŒ–ﬂƒ Œ¬€… ÕŒÃ≈– ›À≈Ã≈Õ“¿ ¬ Œœ»—¿Õ»» » “»œ —“≈ ¿
  FOR #I = 1 TO 30
     IF MBXXOP0A.OP-CODE-AT(#I) = MBOTXX0A.OT-CODE
        MBOTXX0A.OT-NUMBER-ELEMENT := MBXXOP0A.OP-POR-NUMBER(#I)
        MOVE MBXXOP0A.OP-TYPE-STEK(#I) TO MBOTXX0A.OP-TYPE-STEK
        ESCAPE BOTTOM
     END-IF
  END-FOR
  RESET MBXXOP0A.OP-ATTR-SHOW(*)
/*
  DECIDE ON FIRST VALUE MBOTXX0A.OT-CODE
     VALUE 10067  /* œ–»«Õ¿  ¡–¿ ¿
        MBXXOP0A.OP-ATTR-SHOW(1) := 10105 /* "SUMMA"
        MBXXOP0A.OP-ATTR-SHOW(2) := 10103  /* "BASE"
        PERFORM MBOTDF0S XXERX00A MBXXZP0A MBOTXX0A MBXXSS0A
                          MBXXOP0A XXCTXX0A XPMXXX1A
        IF RETURN-CODE NE 0 THEN
           *ERROR-NR := EC-QUIT-STACK-TRACE
        END-IF
     VALUE 10009  /* —Û·Ò˜ÂÚ‡
        MBXXOP0A.OP-ATTR-SHOW(1) := 10105 /* "SUMMA"
        MBXXOP0A.OP-ATTR-SHOW(2) := 10103  /* "BASE"
        PERFORM MBOTBS0S XXERX00A MBXXZP0A MBOTXX0A MBXXSS0A
                          MBXXOP0A XXCTXX0A XPMXXX1A
        IF RETURN-CODE NE 0 THEN
           *ERROR-NR := EC-QUIT-STACK-TRACE
        END-IF
     VALUE 10003  /* Ã¿“≈–»¿À‹ÕŒ Œ“¬≈“—“¬≈ÕÕ€…
        MBXXOP0A.OP-ATTR-SHOW(1) := 10105 /* "SUMMA"
        MBXXOP0A.OP-ATTR-SHOW(2) := 10103  /* "BASE"
        PERFORM MBOTMO0S XXERX00A MBXXZP0A MBOTXX0A MBXXSS0A
                          MBXXOP0A XXCTXX0A XPMXXX1A
        IF RETURN-CODE NE 0 THEN
           *ERROR-NR := EC-QUIT-STACK-TRACE
        END-IF
     VALUE 10050  /* Ã¿“≈–»¿À
        MBXXOP0A.OP-ATTR-SHOW(1) := 10103  /* "BASE"
        MBXXOP0A.OP-ATTR-SHOW(2) := 10102  /* "PRIH"
        MBXXOP0A.OP-ATTR-SHOW(3) := 10105  /* "SUMMA"
        PERFORM MBOTMT0S XXERX00A MBXXZP0A MBOTXX0A MBXXSS0A
                          MBXXOP0A XXCTXX0A XPMXXX1A
        IF RETURN-CODE NE 0 THEN
           *ERROR-NR := EC-QUIT-STACK-TRACE
        END-IF
     VALUE MT-BASE-ATTR-ID  /* Ã¿“≈–»¿À
        MBXXOP0A.OP-ATTR-SHOW(1) := 10103  /* "BASE"
        MBXXOP0A.OP-ATTR-SHOW(2) := PLAN-COL-ATTR-ID  /* "PLAN"
        MBXXOP0A.OP-ATTR-SHOW(3) := 10105  /* "SUMMA"
        PERFORM MBOTMB0S XXERX00A MBXXZP0A MBOTXX0A MBXXSS0A
                          MBXXOP0A XXCTXX0A XPMXXX1A
        IF RETURN-CODE NE 0 THEN
           *ERROR-NR := EC-QUIT-STACK-TRACE
        END-IF
     VALUE 10061  /*
        MBXXOP0A.OP-ATTR-SHOW(1) := 10105  /* "SUMMA"
        MBXXOP0A.OP-ATTR-SHOW(2) := 10103  /* "BASE"
        PERFORM MBOTGM0S XXERX00A MBXXZP0A MBOTXX0A MBXXSS0A
                          MBXXOP0A XXCTXX0A XPMXXX1A
        IF RETURN-CODE NE 0 THEN
           *ERROR-NR := EC-QUIT-STACK-TRACE
        END-IF
     VALUE 50000  /* Â„ËÒÚ
        MBXXOP0A.OP-ATTR-SHOW(1) := 10105  /* "SUMMA"
        MBXXOP0A.OP-ATTR-SHOW(2) := 10103  /* "BASE"
        PERFORM MBOTIT0S XXERX00A MBXXZP0A MBOTXX0A MBXXSS0A
                          MBXXOP0A XXCTXX0A XPMXXX1A
        IF RETURN-CODE NE 0 THEN
           *ERROR-NR := EC-QUIT-STACK-TRACE
        END-IF
     VALUE 10060  /* Ô‡ÚËË
        MBXXOP0A.OP-ATTR-SHOW(1) := 10103  /* "BASE"
        MBXXOP0A.OP-ATTR-SHOW(2) := 10102  /* "PRIH"
        MBXXOP0A.OP-ATTR-SHOW(3) := 10105  /* "SUMMA"
        PERFORM MBOTPR0S XXERX00A MBXXZP0A MBOTXX0A MBXXSS0A
                          MBXXOP0A XXCTXX0A XPMXXX1A
        IF RETURN-CODE NE 0 THEN
           *ERROR-NR := EC-QUIT-STACK-TRACE
        END-IF
     VALUE 10066  /* Á‡Í‡Á
        MBXXOP0A.OP-ATTR-SHOW(1) := 10105  /* "SUMMA"
        MBXXOP0A.OP-ATTR-SHOW(2) := 10103  /* "BASE"
        PERFORM MBOTZK0S XXERX00A MBXXZP0A MBOTXX0A MBXXSS0A
                          MBXXOP0A XXCTXX0A XPMXXX1A
        IF RETURN-CODE NE 0 THEN
           *ERROR-NR := EC-QUIT-STACK-TRACE
        END-IF
     NONE VALUE
        MOVE MBOTXX0A.OT-CODE TO ERROR-ADDITION(1)
        *ERROR-NR := EC-UNKNOW-COMMAND
  END-DECIDE
/* Œ¡–¿¡Œ“ ¿  ŒÃ¿Õƒ — Õ»∆Õ≈√Œ ”–Œ¬Õﬂ
  DECIDE ON FIRST VALUE MBOTXX0A.XX-COMMAND
     VALUE 'REFRESH'  /* œ≈–≈—Œƒ–¿“‹ Õ¿ ›“ŒÃ ∆≈ ”–Œ¬Õ≈
        MBXXZP0A.C-STACK := MBXXZP0A.C-STACK - 1
        PERFORM OPER-STACK
        #J := MBOTXX0A.OT-LEVEL
        MBOTXX0A.OT-FIX-ANALITIK(#J) := MBOTXX0A.OT-CODE
     VALUE 'DOWN' /* ¬Õ»« Õ¿ ŒƒÕ” œŒ«»÷»ﬁ (–¿—ÿ»‘–Œ¬¿“‹ œŒ«»÷»ﬁ)
        ADD 1 TO MBOTXX0A.OT-LEVEL
        #J := MBOTXX0A.OT-LEVEL
        MBOTXX0A.OT-FIX-ANALITIK(#J) := MBOTXX0A.OT-CODE
        PERFORM OPER-STACK
     VALUE 'TOP' /* ¬¬≈–’ Õ¿ ŒƒÕ” œŒ«»÷»ﬁ
        FOR #J = 1 TO 20
           IF MBOTXX0A.OT-FIX-ANALITIK(#J) = MBOTXX0A.OT-CODE THEN
              RESET MBOTXX0A.OT-FIX-ANALITIK(#J)
              ESCAPE BOTTOM
           END-IF
        END-FOR
        /* Œ◊»Ÿ¿≈Ã —“≈ »
        RESET MBXXZP0A.ZP-CODE MBXXZP0A.ZP-PD-CODE MBXXZP0A.ZP-PD-VALUE
              MBXXZP0A.ZP-ATTR-CRIT(*)
        MBOTXX0A.OT-LEVEL := MBOTXX0A.OT-LEVEL - 1
        #K := MBOTXX0A.OT-LEVEL
        MBOTXX0A.STACK-LEN := MBXXZP0A.STACK-LEN(#K)
        MBOTXX0A.STACK-OUT := MBXXZP0A.STACK-NUMBER(#K)
        MOVE MBXXZP0A.ST-PK-CODE(#K,*) TO MBXXZP0A.PK-CODE(*)
        MOVE MBXXZP0A.ST-PK-VALUE-ITOG(#K,*) TO MBXXZP0A.PK-VALUE-ITOG(*)
        MOVE MBXXZP0A.ST-OP-ATTR(#K,*) TO MBXXZP0A.OP-ATTR(*)
        #J := MBXXZP0A.C-STACK
        IF MBXXZP0A.STACK-NUMBER(#J) NE H'00000000' THEN
           CALL 'FRSX' MBXXZP0A.STACK-NUMBER(#J)
        END-IF
        /*
        MBXXZP0A.C-STACK := MBXXZP0A.C-STACK - 1
        RESET MBOTXX0A.OT-NUMBER-ELEMENT MBOTXX0A.OP-TYPE-STEK
        #J := MBXXZP0A.C-STACK
        MBOTXX0A.OT-CODE := MBXXZP0A.ST-CODE(#J)
        MBOTXX0A.OT-PD-CODE := MBXXZP0A.ST-PD-CODE(#J)
        MBOTXX0A.OT-PD-VALUE := MBXXZP0A.ST-PD-VALUE(#J)
        MBOTXX0A.STACK-OUT := MBXXZP0A.STACK-NUMBER(#J)
        MOVE "TOP" TO MBOTXX0A.OT-COMMAND
        /*
     VALUE "EXIT" /* ¬€…“» »« œ–Œ—ÃŒ“–¿ — Œ◊»—“ Œ… ¬—≈’ —“≈ Œ¬
        /* ˝Í‡ÌÌ˚Â ÒÚÂÍË
        FOR #I = 1 TO MBXXZP0A.C-STACK
           IF MBXXZP0A.STACK-NUMBER(#I) NE H'00000000' THEN
              CALL 'FRSX' MBXXZP0A.STACK-NUMBER(#I)
           ELSE
              ESCAPE BOTTOM
           END-IF
        END-FOR
        /*
        FOR #I = 1 TO MBXXSS0A.C-STACK
           IF MBXXSS0A.STACK-NUMBER(#I) NE H'00000000' THEN
              CALL 'FRSX' MBXXSS0A.STACK-NUMBER(#I)
           ELSE
              ESCAPE BOTTOM
           END-IF
        END-FOR
        MOVE MBOTXX0A.OT-COMMAND TO #COMMAND
        RESET MBOTXX0A MBXXZP0A MBXXSS0A MBXXOP0A
        MOVE #COMMAND TO MBOTXX0A.XX-COMMAND
        ESCAPE ROUTINE
     NONE VALUE
        MOVE MBOTXX0A.XX-COMMAND TO ERROR-ADDITION(1)
        *ERROR-NR := EC-UNKNOW-COMMAND
  END-DECIDE
END-REPEAT
/*
DEFINE SUBROUTINE OPER-STACK
  MOVE MBOTXX0A.OT-CODE TO MBXXZP0A.ZP-CODE
  MOVE MBOTXX0A.OT-PD-CODE TO MBXXZP0A.ZP-PD-CODE
  MOVE MBOTXX0A.OT-PD-VALUE TO MBXXZP0A.ZP-PD-VALUE
  MOVE MBOTXX0A.OT-VALUE-A TO MBXXZP0A.ZP-VALUE-A
  RESET MBXXZP0A.ZP-ATTR-CRIT(*)
  DECIDE ON FIRST VALUE MBXXZP0A.ZP-CODE
     VALUE MT-BASE-ATTR-ID /* Ï‡ÚÂË‡Î
        MOVE MT-BASE-ATTR-ID TO MBXXZP0A.ZP-ATTR-CRIT(1)
        MOVE BASE-COL-ATTR-ID TO MBXXZP0A.ZP-ATTR-CRIT(2)
        MOVE PLAN-COL-ATTR-ID TO MBXXZP0A.ZP-ATTR-CRIT(3)
     VALUE 10067 /* Ï‡ÚÂË‡Î
        MOVE 10067 TO MBXXZP0A.ZP-ATTR-CRIT(1)
        MOVE 10103 TO MBXXZP0A.ZP-ATTR-CRIT(2)
        MOVE 10102 TO MBXXZP0A.ZP-ATTR-CRIT(3)
     VALUE 10009 /* Ï‡ÚÂË‡Î
        MOVE 10009 TO MBXXZP0A.ZP-ATTR-CRIT(1)
        MOVE 10103 TO MBXXZP0A.ZP-ATTR-CRIT(2)
        MOVE 10102 TO MBXXZP0A.ZP-ATTR-CRIT(3)
     VALUE 10050 /* Ï‡ÚÂË‡Î
        MOVE 10050 TO MBXXZP0A.ZP-ATTR-CRIT(1)
        MOVE 10103 TO MBXXZP0A.ZP-ATTR-CRIT(2)
        MOVE 10102 TO MBXXZP0A.ZP-ATTR-CRIT(3)
     VALUE 10003  /* Ã¿“≈–»¿À‹ÕŒ Œ“¬≈“—“¬≈ÕÕ€…
        MOVE 10003 TO MBXXZP0A.ZP-ATTR-CRIT(1)
     VALUE 10061  /* „ÛÔÔ‡ Ã¿“≈–»¿ÀŒ‚
        MOVE 10061 TO MBXXZP0A.ZP-ATTR-CRIT(1)
     VALUE 10060    /* Ô‡ÚË
        MOVE 10050 TO MBXXZP0A.ZP-ATTR-CRIT(1)
        MOVE 10060 TO MBXXZP0A.ZP-ATTR-CRIT(2)
        MOVE 10103 TO MBXXZP0A.ZP-ATTR-CRIT(3)
        MOVE 10102 TO MBXXZP0A.ZP-ATTR-CRIT(4)
     VALUE 10066    /* Á‡Í‡Á
        MOVE 10066 TO MBXXZP0A.ZP-ATTR-CRIT(1)
     VALUE 50000  /* Â„ËÒÚ
        MOVE 50000 TO MBXXZP0A.ZP-ATTR-CRIT(1)
     NONE VALUE IGNORE
  END-DECIDE
  /* —∆»Ã¿≈Ã —“≈ 
  PERFORM MBXXZP0S XXERX00A MBXXZP0A MBXXSS0A MBXXOP0A XXCTXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  MOVE MBXXZP0A.STACK-OUT TO MBOTXX0A.STACK-OUT
  #K := MBOTXX0A.OT-LEVEL
  MBOTXX0A.STACK-LEN := MBXXZP0A.STACK-LEN(#K)
  MBOTXX0A.STACK-ELEM-LEN := MBXXZP0A.STACK-ELEM-LEN(#K)
  /*
  MOVE MBXXZP0A.PK-CODE(*) TO MBXXZP0A.ST-PK-CODE(#K,*)
  MOVE MBXXZP0A.PK-VALUE-ITOG(*) TO MBXXZP0A.ST-PK-VALUE-ITOG(#K,*)
  MOVE MBXXZP0A.OP-ATTR(*) TO MBXXZP0A.ST-OP-ATTR(#K,*)
/*  MOVE MBXXZP0A.ZP-ATTR-CRIT(*) TO MBXXZP0A.ST-ATTR-CRIT(#K,*)
END-SUBROUTINE
/*
INCLUDE XXERSY1C
END-SUBROUTINE
END


