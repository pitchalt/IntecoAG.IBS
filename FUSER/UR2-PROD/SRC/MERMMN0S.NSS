* >Natural Source Header 000000 /*<RO>>
* :NatName MERMMN0S
* :UID PAUL
* :Mode S
* :CP
* :Date 20071030
* :Time 1326000
* <Natural Source Header /*<<RO>
/***********************************************************************
/*
/* —»—“≈Ã¿:
/* œ–Œ√–¿ÃÃ¿:
/*
/* –¿«–¿¡Œ“◊» :  ”«Œ–»Õ œ.¿.
/* ƒ¿“¿ ¬€œ”— ¿:
/*
/* Õ¿«¬¿Õ»≈:  ”–Œ¬≈Õ‹ ¡»«Õ≈— –¿¡Œ“¿ — «¿√ŒÀŒ¬ ŒÃ
/*
/*  ŒÃ¿Õƒ€:
/*   READ
/*   ADD
/*   UPDATE
/*   DELETE
/*
/* »—œ–¿¬À≈Õ»ﬂ:
/*
/***********************************************************************
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING XXCTXX0A
PARAMETER USING MERMMN0A
PARAMETER USING UXCSXX0A
/*
LOCAL USING XXXXEC0L
LOCAL USING XBTXMN0A
/*
LOCAL USING MBROPM0A
LOCAL USING MBROPL0A
LOCAL USING MBRMMN0A
LOCAL USING MBRHMN0A
LOCAL USING MBMTMN0A
LOCAL USING MBZKMN0A
LOCAL USING MBSAST0A
LOCAL USING MBMTSA1A
LOCAL USING MBSAST0L
LOCAL USING MBPRMN0A
LOCAL USING MBEIMN0A
LOCAL USING MBBSMN0A
/*
LOCAL USING UBODMN0A
/*
LOCAL
1 #OD-IS-NOT-USED   (L)
1 #DATA             (A8)
1 REDEFINE #DATA
2 #DATA-YYYY        (N4)
1 #I                (I4)
1 #BASE-COL         (P8.7)
1 #IS-CONFIRM-REQUIRED (P7)
END-DEFINE
DEFINE SUBROUTINE MERMMN0S
RESET XXERX00A
/*
DECIDE ON FIRST VALUE ME-COMMAND
  VALUE "INIT"
     PERFORM RECORD-INIT
  VALUE "READ"
     PERFORM RECORD-READ
  VALUE "CHECK-LIM"
     PERFORM CHECK-LIMIT
     IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
     PERFORM SALDO-STACK-FREE
     IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
     MOVE BY NAME MERMMN0A TO MBRMMN0A
     PERFORM RECORD-EXTEND
  VALUE "CHECK-COL"
     PERFORM CHECK-COL
     MOVE BY NAME MERMMN0A TO MBRMMN0A
     PERFORM RECORD-EXTEND
  VALUE "UPDATE"
     PERFORM RECORD-UPDATE
     PERFORM SALDO-STACK-FREE
  VALUE "ADD"
     PERFORM RECORD-ADD
     PERFORM SALDO-STACK-FREE
  VALUE "CONFIRM"
     PERFORM RECORD-CONFIRM
  VALUE "DELETE"
     PERFORM RECORD-DELETE
  NONE VALUE
     MOVE ME-COMMAND TO ERROR-ADDITION(1)
     *ERROR-NR := EC-UNKNOW-COMMAND
END-DECIDE
/*
DEFINE SUBROUTINE RECORD-EXTEND
/*  MOVE BY NAME MBROPM0A TO MERMMN0A
  MOVE BY NAME MBRMMN0A TO MERMMN0A
  MOVE MBROPM0A.CENA-SUMMA TO MERMMN0A.CENA-SUMMA
  MOVE MBROPM0A.BASE-COL TO MERMMN0A.BASE-COL
/*  WRITE MBROPM0A.BASE-COL
  IF MBRMMN0A.MT-ID NE 0 THEN
     MOVE MBRMMN0A.MT-ID TO MBMTMN0A.MT-ID
     MOVE "READ" TO MBMTMN0A.BL-COMMAND
     PERFORM MBMTMN0S XXERX00A XXCTXX0A MBMTMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE MBMTMN0A.MT-CODE TO MERMMN0A.MT-CODE
     MOVE MBMTMN0A.MT-NAME TO MERMMN0A.MT-NAME
     MOVE MBMTMN0A.PLACE TO MERMMN0A.MT-PLACE
     MOVE MBMTMN0A.GM-ID TO MERMMN0A.GM-ID
     MOVE MBMTMN0A.EI-ID TO MERMMN0A.BASE-EI-ID
  END-IF
  IF MBRMMN0A.ZK-ID NE 0 THEN
     MOVE MBRMMN0A.ZK-ID TO MBZKMN0A.ZK-ID
     MOVE "READ" TO MBZKMN0A.BL-COMMAND
     PERFORM MBZKMN0S XXERX00A XXCTXX0A MBZKMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE MBZKMN0A.ZK-CODE TO MERMMN0A.ZK-CODE
  END-IF
  IF MBRMMN0A.BASE-EI-ID NE 0 THEN
     MOVE MBRMMN0A.BASE-EI-ID TO MBEIMN0A.EI-ID
     MOVE "READ" TO MBEIMN0A.BL-COMMAND
     PERFORM MBEIMN0S XXERX00A XXCTXX0A MBEIMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE MBEIMN0A.EI-CODE TO MERMMN0A.BASE-EI-CODE
     MOVE MBEIMN0A.EI-SHORT-NAME TO MERMMN0A.BASE-EI-SHORT-NAME
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-INIT
  IGNORE
END-SUBROUTINE
/*
DEFINE SUBROUTINE CHECK-LIMIT
  IF MERMMN0A.RO-ID EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ATTRIBUTE-REQUIRED
  END-IF
  IF MERMMN0A.MT-ID EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ATTRIBUTE-REQUIRED
  END-IF
  /* ˜ËÚ‡ÂÏ Á‡„ÓÎÓ‚ÓÍ
  MOVE MERMMN0A.RO-ID TO MBRHMN0A.RO-ID
  MOVE "READ" TO MBRHMN0A.BL-COMMAND
  PERFORM MBRHMN0S XXERX00A XXCTXX0A MBRHMN0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /* ˜ËÚ‡ÂÏ Ï‡ÚÂË‡Î ÓÔÂÂ‰ÂÎ ÂÏ ÏÂÚÓ‰ LIFO FIFO
  MOVE MERMMN0A.MT-ID  TO MBMTMN0A.MT-ID
  MOVE "READ" TO MBMTMN0A.BL-COMMAND
  PERFORM MBMTMN0S XXERX00A XXCTXX0A MBMTMN0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /*
  MOVE MBMTMN0A.EI-ID TO MBEIMN0A.EI-ID
  MOVE "READ" TO MBEIMN0A.BL-COMMAND
  PERFORM MBEIMN0S XXERX00A XXCTXX0A MBEIMN0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  MOVE MBEIMN0A.EI-ID TO MERMMN0A.BASE-EI-ID
  MOVE MBEIMN0A.EI-CODE TO MERMMN0A.BASE-EI-CODE
  MOVE MBEIMN0A.EI-SHORT-NAME TO MERMMN0A.BASE-EI-SHORT-NAME
  /* ˜ËÚ‡ÂÏ ÓÔÂ‡ˆË˛
  MOVE XXCTXX0A.OD-ID TO UBODMN0A.OD-ID
  MOVE "READ" TO UBODMN0A.BL-COMMAND
  PERFORM UBODMN0S XXERX00A XXCTXX0A UBODMN0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  PERFORM SALDO-STACK-INIT
  RESET MERMMN0A.BASE-COL-LIMIT MERMMN0A.CENA-SUMMA-LIMIT
  /* ˜ËÚ‡ÂÏ ÎËÏËÚ ÓÒÚ‡ÚÍÓ‚
  RESET MBMTSA1A
  MOVE UBODMN0A.OD-IT-ID(2) TO MBMTSA1A.IT-ID(1)
  MOVE MERMMN0A.RM-ID TO MBMTSA1A.DR-EXCLUDE
  MOVE MBRHMN0A.IN-MO-ID TO MBMTSA1A.MO-ID
  MOVE MERMMN0A.MT-ID  TO MBMTSA1A.MT-ID
/*  MOVE MERMMn0A.EI-ID TO MBMTSA1A.PRIH-EI-ID
  MOVE MERMMN0A.BASE-EI-ID TO MBMTSA1A.BASE-EI-ID
  MOVE "LIFO" TO MBMTSA1A.BL-COMMAND
  PERFORM MBMTSA1S XXERX00A XXCTXX0A MBSAST0A MBMTSA1A UXCSXX0A
/*  WRITE 'limit' RETURN-CODE MBMTSA1A.PR-ID MBMTSA1A.PRIH-COL MBMTSA1A.PRIH-EI-ID MBMTSA1A.BASE-COL MBMTSA1A.BASE-EI-ID MBMTSA1A.BALC-SUMMA
  IF RETURN-CODE EQ EC-OBJECT-NOT-FOUND THEN
     RETURN-CODE := 2412
     ESCAPE ROUTINE
  ELSE
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  END-IF
  FOR #I = 1 TO MBSAST0A.STACK-LEN
     MOVE #I TO MBSAST0L.STACK-POS PERFORM SALDO-READ
     IF RETURN-CODE NE 0 THEN *ERROR-NR := RETURN-CODE END-IF
/*     IF MBSAST0L.BASE-COL LE 0 THEN ESCAPE TOP END-IF
/*     WRITE 'saldo lim' MBSAST0L.BASE-COL MERMMN0A.BASE-COL-LIMIT
     ADD MBSAST0L.BASE-COL TO MERMMN0A.BASE-COL-LIMIT
     ADD MBSAST0L.BALC-SUMMA TO MERMMN0A.CENA-SUMMA-LIMIT
  END-FOR
/*  WRITE 'limit' MERMMN0A.BASE-COL-LIMIT MERMMN0A.CENA-SUMMA-LIMIT
  IF MERMMN0A.BASE-COL-LIMIT LE 0 THEN
     RETURN-CODE := 2412
     ESCAPE ROUTINE
  END-IF
/*  /* ˜ËÚ‡ÂÏ ÎËÏËÚ ÓÒÚ‡ÚÍÓ‚
/*  MOVE UBODMN0A.OD-IT-ID(*) TO MBMTSA0A.SH-IT-ID(*)
/*  MOVE MERMMN0A.RM-ID TO MBMTSA0A.DR-EXCLUDE
/*  MOVE MBRHMN0A.IN-MO-ID TO MBMTSA0A.SH-MO-ID
/*  MOVE MERMMN0A.MT-ID  TO MBMTSA0A.SH-MT-ID
/*  MOVE "FIFO" TO MBMTSA0A.BL-COMMAND
/*  PERFORM MBMTSA0S XXERX00A XXCTXX0A MBMTSA0A UXCSXX0A

/*  IF RETURN-CODE EQ EC-OBJECT-NOT-FOUND THEN
/*     RETURN-CODE := 2412
/*     ESCAPE ROUTINE
/*  ELSE
/*     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
/*  END-IF
  /*
/*  MOVE MBMTSA0A.PRIH-COL TO MERMMN0A.COL-LIMIT
/*  MOVE MBMTSA0A.PRIH-EI-ID TO MERMMN0A.EI-ID
/*  MOVE MBMTSA0A.BASE-COL TO MERMMN0A.BASE-COL-LIMIT
/*  MOVE MBMTSA0A.BASE-EI-ID TO MERMMN0A.BASE-EI-ID
/*  MOVE MBMTSA0A.BALC-SUMMA TO MERMMN0A.CENA-SUMMA-LIMIT
/*  MOVE MBMTSA0A.PR-ID TO MERMMN0A.PR-ID
/*  MOVE MBMTSA0A.GM-ID TO MERMMN0A.GM-ID
/*  MOVE MBMTSA0A.DT-ID TO MERMMN0A.DT-ID
END-SUBROUTINE
/*
DEFINE SUBROUTINE CHECK-COL
  IF MERMMN0A.BASE-COL GT MERMMN0A.BASE-COL-LIMIT THEN
     MERMMN0A.BASE-COL := MERMMN0A.BASE-COL-LIMIT
  END-IF
  IF MERMMN0A.BASE-COL EQ MERMMN0A.BASE-COL-LIMIT THEN
     MERMMN0A.CENA-SUMMA := MERMMN0A.CENA-SUMMA-LIMIT
  END-IF
  COMPUTE ROUNDED MERMMN0A.CENA-SUMMA = MERMMN0A.CENA-SUMMA-LIMIT *
        MERMMN0A.BASE-COL  / MERMMN0A.BASE-COL-LIMIT
/*  IF MERMMN0A.base-COL GT MERMMN0A.COL-LIMIT THEN
/*     MERMMN0A.COL := MERMMN0A.COL-LIMIT
/*  END-IF
/*  IF MERMMN0A.COL EQ MERMMN0A.COL-LIMIT THEN
/*     MERMMN0A.BASE-COL := MERMMN0A.BASE-COL-LIMIT
/*     MERMMN0A.CENA-SUMMA := MERMMN0A.CENA-SUMMA-LIMIT
/*  END-IF
/*  COMPUTE ROUNDED MERMMN0A.BASE-COL = MERMMN0A.BASE-COL-LIMIT * MERMMN0A.COL  / MERMMN0A.COL-LIMIT
/*  COMPUTE ROUNDED MERMMN0A.CENA-SUMMA = MERMMN0A.CENA-SUMMA-LIMIT * MERMMN0A.COL  / MERMMN0A.COL-LIMIT
/*  COMPUTE ROUNDED MERMMN0A.CENA = MERMMN0A.CENA-SUMMA / MERMMN0A.COL
END-SUBROUTINE
/*
DEFINE SUBROUTINE PARTY-CONTAINER-ADD
  /*
  MOVE MBRMMN0A.BASE-COL TO #BASE-COL
  FOR #I = 1 TO MBSAST0A.STACK-LEN
     IF #BASE-COL LE 0 THEN ESCAPE BOTTOM END-IF
     MOVE #I TO MBSAST0L.STACK-POS PERFORM SALDO-READ
     IF RETURN-CODE NE 0 THEN *ERROR-NR := RETURN-CODE END-IF
     IF MBSAST0L.BASE-COL LE 0 THEN ESCAPE TOP END-IF
     IF MBSAST0L.BASE-EI-ID NE MERMMN0A.BASE-EI-ID THEN
        ESCAPE TOP
     END-IF
/*     WRITE 'do' #BASE-COL MBSAST0L.BASE-COL MBSAST0L.PRIH-COL MBSAST0L.BALC-SUMMA
     IF MBSAST0L.BASE-COL GT #BASE-COL THEN
/*        COMPUTE ROUNDED MBSAST0L.PLAN-COL = MBSAST0L.PLAN-COL *
/*              #BASE-COL / MBSAST0L.BASE-COL
        COMPUTE ROUNDED MBSAST0L.PRIH-COL = MBSAST0L.PRIH-COL *
              #BASE-COL / MBSAST0L.BASE-COL
        COMPUTE ROUNDED MBSAST0L.BALC-SUMMA = MBSAST0L.BALC-SUMMA *
              #BASE-COL / MBSAST0L.BASE-COL
        MBSAST0L.BASE-COL := #BASE-COL
     END-IF
     /*
     RESET MBROPM0A
     MOVE MBSAST0L.PR-ID TO MBROPM0A.PR-ID
     MOVE MBRMMN0A.RM-ID TO MBROPM0A.ROM-ID
     MOVE MBSAST0L.DT-ID TO MBROPM0A.DT-ID
     MOVE MBSAST0L.BALC-SUMMA TO MBROPM0A.CENA-SUMMA
     MOVE MBSAST0L.PRIH-COL TO MBROPM0A.COL
     MOVE MBSAST0L.PRIH-EI-ID TO MBROPM0A.EI-ID
     MOVE MBSAST0L.BASE-COL TO MBROPM0A.BASE-COL
     MOVE MBSAST0L.BASE-EI-ID TO MBROPM0A.BASE-EI-ID
     COMPUTE ROUNDED MBROPM0A.CENA = MBROPM0A.CENA-SUMMA / MBROPM0A.BASE-COL
/*     WRITE 'add' MBROPM0A.BASE-COL
     MOVE "ADD" TO MBROPM0A.BL-COMMAND
     PERFORM MBROPM0S XXERX00A XXCTXX0A MBROPM0A UXCSXX0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     SUBTRACT MBSAST0L.BASE-COL FROM #BASE-COL
  END-FOR
END-SUBROUTINE
/*
DEFINE SUBROUTINE PARTY-CONTAINER-DEL
  /*
  MOVE MBRMMN0A.RM-ID TO MBROPL0A.ROM-ID
  MOVE "BOTTOM" TO MBROPL0A.BL-COMMAND
  MOVE 20 TO MBROPL0A.DR-LIST-READ
  REPEAT
     PERFORM MBROPL0S XXERX00A XXCTXX0A MBROPL0A UXCSXX0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE "PREV" TO MBROPL0A.BL-COMMAND
     FOR #I = 1 TO MBROPL0A.DR-LIST-C
        MOVE MBROPL0A.ROP-ID(21 - #I) TO MBROPM0A.ROP-ID
        MOVE "READ" TO MBROPM0A.BL-COMMAND
        PERFORM MBROPM0S XXERX00A XXCTXX0A MBROPM0A UXCSXX0A
        IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
        /*
/*        WRITE "DEL" MBROPM0A.BASE-COL
        MOVE "DELETE" TO MBROPM0A.BL-COMMAND
        PERFORM MBROPM0S XXERX00A XXCTXX0A MBROPM0A UXCSXX0A
        IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     END-FOR
     UNTIL MBROPL0A.IS-TOP
  END-REPEAT
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-READ
  /*
  MOVE MERMMN0A.RM-ID TO MBRMMN0A.RM-ID
  MOVE "READ" TO MBRMMN0A.BL-COMMAND
  PERFORM MBRMMN0S XXERX00A XXCTXX0A MBRMMN0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /* ◊ËÚ‡ÂÏ ÚÂıÌË˜ÂÒÍÛ˛ Á‡ÔËÒ¸ ÍÓÌÚÂÈÌÂ‡ Ô‡ÚËÈ
  MOVE MERMMN0A.RM-ID TO MBROPM0A.ROP-ID
  MOVE "READ-TR" TO MBROPM0A.BL-COMMAND
  PERFORM MBROPM0S XXERX00A XXCTXX0A MBROPM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /*
  PERFORM RECORD-EXTEND
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-PREPARE
  IF MERMMN0A.MT-ID EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ATTRIBUTE-REQUIRED
  END-IF
  IF MERMMN0A.BASE-COL EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ATTRIBUTE-REQUIRED
  END-IF
  IF MERMMN0A.GM-ID EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ATTRIBUTE-REQUIRED
  END-IF
  PERFORM CHECK-LIMIT
  IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
  PERFORM CHECK-COL
  MOVE MBRMMN0A.CONF-COL TO MERMMN0A.CONF-COL
  MOVE BY NAME MERMMN0A TO MBRMMN0A
/*  WRITE "UPDATE" MERMMN0A.CONF-COL MBRMMN0A.BASE-COL
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-ADD
  IF MERMMN0A.RO-ID EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ATTRIBUTE-REQUIRED
  END-IF
  RESET MERMMN0A.RM-ID
  RESET MERMMN0A.IS-DR-CONFIRMED
  /* ÔÓ‚Ó‰ËÏ Ó·ÌÓ‚ÎÂÌËÂ
  PERFORM RECORD-PREPARE
  IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
  /* ‡Ò¯Ë ÂÏ ‡ÚË·ÛÚ˚
  PERFORM RECORD-EXTEND
  /* ÒÓı‡Ì ÂÏ Á‡ÔËÒ¸
  MOVE "ADD" TO MBRMMN0A.BL-COMMAND
  PERFORM MBRMMN0S XXERX00A XXCTXX0A MBRMMN0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  MOVE MBRMMN0A.RM-ID TO MERMMN0A.RM-ID
  PERFORM PARTY-CONTAINER-ADD
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-UPDATE
  IF MERMMN0A.RO-ID EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ID-REQUIRED
  END-IF
  IF MERMMN0A.RM-ID EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ID-REQUIRED
  END-IF
  /* ˜ËÚ‡ÂÏ Á‡ÔËÒ¸
  MOVE MERMMN0A.RM-ID TO MBRMMN0A.RM-ID
  MOVE "READ" TO MBRMMN0A.BL-COMMAND
  PERFORM MBRMMN0S XXERX00A XXCTXX0A MBRMMN0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  MOVE MBRMMN0A.RO-ID TO MERMMN0A.RO-ID
  MOVE MBRMMN0A.IS-DR-CONFIRMED TO MERMMN0A.IS-DR-CONFIRMED
  /* ÔÓ‚Ó‰ËÏ Ó·ÌÓ‚ÎÂÌËÂ
  PERFORM RECORD-PREPARE
  IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
  /* ‡Ò¯Ë ÂÏ ‡ÚË·ÛÚ˚
  PERFORM RECORD-EXTEND
  PERFORM PARTY-CONTAINER-DEL
  /* ÒÓı‡Ì ÂÏ Á‡ÔËÒ¸
  MOVE MERMMN0A.RM-ID TO MBRMMN0A.RM-ID
  MOVE "UPDATE" TO MBRMMN0A.BL-COMMAND
  PERFORM MBRMMN0S XXERX00A XXCTXX0A MBRMMN0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  PERFORM PARTY-CONTAINER-ADD
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-CONFIRM
  /* ˜ËÚ‡ÂÏ Á‡ÔËÒ¸
  MOVE MERMMN0A.RM-ID TO MBRMMN0A.RM-ID
  MOVE "READ" TO MBRMMN0A.BL-COMMAND
  PERFORM MBRMMN0S XXERX00A XXCTXX0A MBRMMN0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /*
  MOVE MERMMN0A.CONF-COL TO MBRMMN0A.CONF-COL
  MOVE MERMMN0A.RM-ID TO MBROPM0A.ROP-ID
  MOVE "READ-TR" TO MBROPM0A.BL-COMMAND
  PERFORM MBROPM0S XXERX00A XXCTXX0A MBROPM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /*
  IF MERMMN0A.CONF-COL EQ MBROPM0A.BASE-COL THEN
     MOVE TRUE TO MBRMMN0A.IS-DR-CONFIRMED
  ELSE
     MOVE FALSE TO MBRMMN0A.IS-DR-CONFIRMED
  END-IF
  /* ÕÂ ÔÓËÁ‚Ó‰ËÏ ÔÂÂÒ˜ÂÚ ÔÓ‚Ó‰ÓÍ
  #OD-IS-NOT-USED := XXCTXX0A.OD-IS-NOT-USED
  XXCTXX0A.OD-IS-NOT-USED := TRUE
  /*
  MOVE "UPDATE" TO MBRMMN0A.BL-COMMAND
  PERFORM MBRMMN0S XXERX00A XXCTXX0A MBRMMN0A UXCSXX0A
  /* ‚ÓÒÚ‡ÌÓ‚ËÏ Ó·‡·ÓÚÍÛ ÔÓ‚Ó‰ÓÍ ‰Ó ‚ÓÁÏÓÊÌÓ„Ó ËÒÍÎ˛˜ÂÌË
  XXCTXX0A.OD-IS-NOT-USED := #OD-IS-NOT-USED
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /*
  PERFORM RECORD-EXTEND
  /*
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-DELETE
  IF MERMMN0A.RO-ID EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ID-REQUIRED
  END-IF
  IF MERMMN0A.RM-ID EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ID-REQUIRED
  END-IF
  MOVE MERMMN0A.RM-ID TO MBRMMN0A.RM-ID
  MOVE "READ" TO MBRMMN0A.BL-COMMAND
  PERFORM MBRMMN0S XXERX00A XXCTXX0A MBRMMN0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /*
  MOVE MERMMN0A.RO-ID TO MBRHMN0A.RO-ID
  MOVE "READ" TO MBRHMN0A.BL-COMMAND
  PERFORM MBRHMN0S XXERX00A XXCTXX0A MBRHMN0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /*
  IF MBRHMN0A.RO-ID NE MBRMMN0A.RO-ID THEN
     *ERROR-NR := EC-RECORD-MISMATCH
  END-IF
  PERFORM PARTY-CONTAINER-DEL
  MOVE MERMMN0A.RM-ID TO MBRMMN0A.RM-ID
  MOVE MERMMN0A.RO-ID TO MBRMMN0A.RO-ID
  MOVE "DELETE" TO MBRMMN0A.BL-COMMAND
  PERFORM MBRMMN0S XXERX00A XXCTXX0A MBRMMN0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
END-SUBROUTINE
/*
INCLUDE XXSTMN4C "MBSAST0A" "MBSAST0L-CONST" "MBSAST0L"
        "SALDO-STACK-INIT" "SALDO-STACK-FREE" "SALDO-STACK-REALLOC"
        "SALDO-PUSH" "SALDO-READ" "SALDO-WRITE" "SALDO-LOCATE"
/*
INCLUDE XXERSY1C
END-SUBROUTINE
END
