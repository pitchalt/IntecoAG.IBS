* >Natural Source Header 000000 /*<RO>>
* :NatName MERXMM0S
* :UID PAUL
* :Mode S
* :CP
* :Date 20071030
* :Time 1350000
* <Natural Source Header /*<<RO>
/***********************************************************************
/*
/* СИСТЕМА:
/* ПРОГРАММА:
/*
/* РАЗРАБОТЧИК:  УЗОРИН П.А.
/* ДАТА ВЫПУСКА:
/*
/* НАЗВАНИЕ:  УРОВЕНЬ БИЗНЕС РАБОТА С ЗАГОЛОВКОМ
/*
/* КОМАНДЫ:
/*   READ
/*   ADD
/*   UPDATE
/*   DELETE
/*
/* ИСПРАВЛЕНИЯ:
/*
/***********************************************************************
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING XXCTXX0A
PARAMETER USING MERXMM0A
PARAMETER USING UXCSXX0A
/*
LOCAL USING XXXXEC0L
LOCAL USING XBTXMN0A
/*
/*LOCAL USING MBRLHM0A
LOCAL USING MBRXMM0A
LOCAL USING MBRXPM0A
LOCAL USING MBDRXL0A
/*
LOCAL USING MBLKHM0A
LOCAL USING MBLKRM0A
LOCAL USING MBMTMN0A
LOCAL USING MBMZMN0A
LOCAL USING MBSAST0A
LOCAL USING MBMTSA1A
LOCAL USING MBSAST0L
LOCAL USING MBEIMN0A
LOCAL USING MBZKMN0A
LOCAL USING MBBSMN0A
LOCAL USING MBMOMN0A
LOCAL USING MBNDMN0A
LOCAL USING XXSTMN0L
/*
LOCAL USING UBODMN0A
LOCAL USING MXRXXODL
LOCAL USING XBSOMN0A
LOCAL USING XXSOXX0L
/*
LOCAL
1 #OD-IS-NOT-USED   (L)
1 #I                (I4)
1 #DATA             (A8)
1 REDEFINE #DATA
2 #DATA-YYYY        (N4)
1 #BASE-COL         (P8.7)
1 #ZK-ID            (P15)
/*
/*1 rx-OD-TYPE       (N7)
/*1 REDEFINE rx-OD-TYPE
/*2 SKIP           (N4)
/*2 ZK-USE-OST     (N1)
/*2 ZK-REQUIRED    (N1)
/*2 UNCOMPRESS     (N1)
END-DEFINE
DEFINE SUBROUTINE MERXMM0S
RESET XXERX00A
/*
/*WRITE *PROGRAM ME-COMMAND 'do'  MERXMM0A.ZK-ID
DECIDE ON FIRST VALUE ME-COMMAND
  VALUE "INIT"
     PERFORM RECORD-INIT
  VALUE "READ"
     PERFORM RECORD-READ
  VALUE "CHECK-LIM"
     PERFORM CHECK-LIMIT
     PERFORM SALDO-STACK-FREE
     IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
     PERFORM RECORD-EXTEND
  VALUE "CHECK-COL"
     PERFORM CHECK-COL
     PERFORM RECORD-EXTEND
  VALUE "UPDATE"
     PERFORM RECORD-UPDATE
     PERFORM SALDO-STACK-FREE
  VALUE "ADD"
     PERFORM RECORD-ADD
     PERFORM SALDO-STACK-FREE
  VALUE "CONFIRM"
     PERFORM RECORD-CONFIRM
  VALUE "DELETE"
     PERFORM RECORD-DELETE
  NONE VALUE
     MOVE ME-COMMAND TO ERROR-ADDITION(1)
     *ERROR-NR := EC-UNKNOW-COMMAND
END-DECIDE
/*WRITE *PROGRAM ME-COMMAND 'po'  MERXMM0A.ZK-ID
/*
DEFINE SUBROUTINE RECORD-EXTEND
  IF XXCTXX0A.OD-ID NE 0 THEN
     MOVE XXCTXX0A.OD-ID TO UBODMN0A.OD-ID
     MOVE "READ" TO UBODMN0A.BL-COMMAND
     PERFORM UBODMN0S XXERX00A XXCTXX0A UBODMN0A UXCSXX0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE UBODMN0A.OD-IT-ID(1) TO RX-OD-TYPE
     IF SUMMA-REQUIRED NE 0 THEN
        MOVE TRUE TO IS-SUMMA-REQUIRED
     END-IF
  END-IF
  IF MERXMM0A.MT-ID NE 0 THEN
     MOVE MERXMM0A.MT-ID TO MBMTMN0A.MT-ID
     MOVE "READ" TO MBMTMN0A.BL-COMMAND
     PERFORM MBMTMN0S XXERX00A XXCTXX0A MBMTMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE MBMTMN0A.MT-CODE TO MERXMM0A.MT-CODE
     MOVE MBMTMN0A.MT-NAME TO MERXMM0A.MT-NAME
     MOVE MBMTMN0A.PLACE TO MERXMM0A.MT-PLACE
     MOVE MBMTMN0A.GM-ID TO MERXMM0A.GM-ID
     MOVE MBMTMN0A.EI-ID TO MERXMM0A.BASE-EI-ID
  END-IF
  IF MERXMM0A.LK-ID NE 0 THEN
     MOVE MERXMM0A.LK-ID TO MBLKHM0A.LK-ID
     MOVE "READ" TO MBLKHM0A.BL-COMMAND
     PERFORM MBLKHM0S XXERX00A XXCTXX0A MBLKHM0A UXCSXX0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE MBLKHM0A.LK-NUMBER TO MERXMM0A.LK-NUMBER
     MOVE MBLKHM0A.LK-DATE TO MERXMM0A.LK-DATE
     /* Определим плановую единицу измерени
     MOVE MBLKHM0A.EI-ID TO MERXMM0A.PLAN-EI-ID
     MOVE MBLKHM0A.ZK-ID TO MERXMM0A.ZK-ID
     /* Читаем материал основной
     MOVE MBLKHM0A.MT-ID TO MBMTMN0A.MT-ID
     MOVE "READ" TO MBMTMN0A.BL-COMMAND
     PERFORM MBMTMN0S XXERX00A XXCTXX0A MBMTMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE MBMTMN0A.MT-ID TO MERXMM0A.MZ-MT-ID
     MOVE MBMTMN0A.MT-CODE TO MERXMM0A.MZ-MT-CODE
     MOVE MBMTMN0A.MT-NAME TO MERXMM0A.MZ-MT-NAME
  ELSE
     RESET MERXMM0A.LK-NUMBER MERXMM0A.LK-DATE
     MOVE MBMTMN0A.MT-ID TO MERXMM0A.MZ-MT-ID
     MOVE MBMTMN0A.MT-CODE TO MERXMM0A.MZ-MT-CODE
     MOVE MBMTMN0A.MT-NAME TO MERXMM0A.MZ-MT-NAME
  END-IF
  IF MERXMM0A.ZK-ID NE 0 THEN
     /* Определим заказ
     MOVE MERXMM0A.ZK-ID TO MBZKMN0A.ZK-ID
     MOVE "READ" TO MBZKMN0A.BL-COMMAND
     PERFORM MBZKMN0S XXERX00A XXCTXX0A MBZKMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE MBZKMN0A.ZK-ID TO MERXMM0A.ZK-ID
     MOVE MBZKMN0A.ZK-CODE TO MERXMM0A.ZK-CODE
     /* Определим счет
     MOVE MBZKMN0A.BS-ID TO MBBSMN0A.BS-ID
     MOVE "READ" TO MBBSMN0A.BL-COMMAND
     PERFORM MBBSMN0S XXERX00A XXCTXX0A MBBSMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE MBBSMN0A.BS-ID TO MERXMM0A.BS-ID
     MOVE MBBSMN0A.BS-CODE TO MERXMM0A.BS-CODE
     MOVE MBBSMN0A.BS-NAME TO MERXMM0A.BS-NAME
  ELSE
     RESET MERXMM0A.ZK-ID MERXMM0A.ZK-CODE
           MERXMM0A.BS-ID MERXMM0A.BS-CODE MERXMM0A.BS-NAME
  END-IF
/*  IF MERxMM0A .EI-ID NE 0 THEN
/*     MOVE MERxMM0A.EI-ID TO MBEIMN0A.EI-ID
/*     MOVE "READ" TO MBEIMN0A.BL-COMMAND
/*     PERFORM MBEIMN0S XXERX00A XXCTXX0A MBEIMN0A
/*     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
/*     MOVE MBEIMN0A.EI-CODE TO MERxMM0A.EI-CODE
/*     MOVE MBEIMN0A.EI-SHORT-NAME TO MERxMM0A.EI-SHORT-NAME
/*  END-IF
  IF MERXMM0A.MZ-ID NE 0 THEN
     /* Читаем заменитель
     MOVE MERXMM0A.MZ-ID TO MBMZMN0A.MZ-ID
     MOVE "READ" TO MBMZMN0A.BL-COMMAND
     PERFORM MBMZMN0S XXERX00A XXCTXX0A MBMZMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     /* Читаем материал
     MOVE MBMZMN0A.FROM-MT-ID TO MBMTMN0A.MT-ID
     MOVE "READ" TO MBMTMN0A.BL-COMMAND
     PERFORM MBMTMN0S XXERX00A XXCTXX0A MBMTMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE MBMTMN0A.MT-ID TO MERXMM0A.MZ-MT-ID
     MOVE MBMTMN0A.MT-CODE TO MERXMM0A.MZ-MT-CODE
     MOVE MBMTMN0A.MT-NAME TO MERXMM0A.MZ-MT-NAME
  END-IF
  IF MERXMM0A.BASE-EI-ID NE 0 THEN
     MOVE MERXMM0A.BASE-EI-ID TO MBEIMN0A.EI-ID
     MOVE "READ" TO MBEIMN0A.BL-COMMAND
     PERFORM MBEIMN0S XXERX00A XXCTXX0A MBEIMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE MBEIMN0A.EI-CODE TO MERXMM0A.BASE-EI-CODE
     MOVE MBEIMN0A.EI-SHORT-NAME TO MERXMM0A.BASE-EI-SHORT-NAME
  END-IF
  IF MERXMM0A.PLAN-EI-ID NE 0 THEN
     MOVE MERXMM0A.PLAN-EI-ID TO MBEIMN0A.EI-ID
     MOVE "READ" TO MBEIMN0A.BL-COMMAND
     PERFORM MBEIMN0S XXERX00A XXCTXX0A MBEIMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE MBEIMN0A.EI-CODE TO MERXMM0A.PLAN-EI-CODE
     MOVE MBEIMN0A.EI-SHORT-NAME TO MERXMM0A.PLAN-EI-SHORT-NAME
  END-IF
/*  WRITE *PROGRAM MERXMM0A.ND-ID
  IF MERXMM0A.ND-ID NE 0 THEN
     MOVE MERXMM0A.ND-ID TO MBNDMN0A.ND-ID
     MOVE "READ" TO MBNDMN0A.BL-COMMAND
     PERFORM MBNDMN0S XXERX00A XXCTXX0A MBNDMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE BY NAME MBNDMN0A TO MERXMM0A
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-INIT
  PERFORM RECORD-EXTEND
END-SUBROUTINE
/*
DEFINE SUBROUTINE CHECK-LIMIT
  IF MERXMM0A.RXH-ID EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ATTRIBUTE-REQUIRED
  END-IF
  IF MERXMM0A.MT-ID EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ATTRIBUTE-REQUIRED
  END-IF
  IF MERXMM0A.IN-MO-ID EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ATTRIBUTE-REQUIRED
  END-IF
  /* читаем заголовок
/*  MOVE MERXMM0A.DR-ID TO MBRLHM0A.RL-ID
/*  MOVE "READ" TO MBRLHM0A.BL-COMMAND
/*  PERFORM MBRLHM0S XXERX00A XXCTXX0A MBRLHM0A UXCSXX0A
/*  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /* читаем материал определ ем метод LIFO FIFO
  MOVE MERXMM0A.MT-ID TO MBMTMN0A.MT-ID
  MOVE "READHOLD" TO MBMTMN0A.BL-COMMAND
  PERFORM MBMTMN0S XXERX00A XXCTXX0A MBMTMN0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  MOVE MBMTMN0A.EI-ID TO MERXMM0A.BASE-EI-ID
  /* читаем операцию
  MOVE XXCTXX0A.OD-ID TO UBODMN0A.OD-ID
  MOVE "READ" TO UBODMN0A.BL-COMMAND
  PERFORM UBODMN0S XXERX00A XXCTXX0A UBODMN0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  MOVE UBODMN0A.OD-IT-ID(1) TO RX-OD-TYPE
  /*
  RESET MERXMM0A.BASE-COL-LIMIT MERXMM0A.PLAN-COL-LIMIT
        MERXMM0A.BALC-CENA-SUMMA-LIMIT
  /* читаем лимит ЛЗК
  IF MERXMM0A.LK-ID NE 0 THEN
     PERFORM SALDO-STACK-INIT
     MOVE UBODMN0A.OD-IT-ID(3) TO MBMTSA1A.IT-ID(1)
/*     WRITE *PROGRAM MERXMM0A.RXM-ID MERXMM0A.LKR-ID
     MOVE MERXMM0A.RXM-ID TO MBMTSA1A.DR-EXCLUDE
     MOVE MERXMM0A.LK-ID TO MBMTSA1A.LK-ID
     MOVE "LIFO" TO MBMTSA1A.BL-COMMAND
     PERFORM MBMTSA1S XXERX00A XXCTXX0A MBSAST0A MBMTSA1A UXCSXX0A
  /*  WRITE 'limit lzk' RETURN-CODE XXERX00A.ERROR-NUMBER
  /*MBMTSA1A.PR-ID MBMTSA1A.PRIH-COL MBMTSA1A.PRIH-EI-ID MBMTSA1A.BASE-COL MBMTSA1A.BASE-EI-ID MBMTSA1A.BALC-SUMMA
     IF RETURN-CODE EQ EC-OBJECT-NOT-FOUND THEN
        RETURN-CODE := 2416
        ESCAPE ROUTINE
     ELSE
        IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     END-IF
     FOR #I = 1 TO MBSAST0A.STACK-LEN
        MOVE #I TO MBSAST0L.STACK-POS PERFORM SALDO-READ
        IF RETURN-CODE NE 0 THEN *ERROR-NR := RETURN-CODE END-IF
        ADD MBSAST0L.PLAN-COL TO MERXMM0A.PLAN-COL-LIMIT
/*     MOVE MBSAST0L.PLAN-EI-ID TO MERxMM0A.PLAN-EI-ID
     END-FOR
     IF MERXMM0A.PLAN-COL-LIMIT LE 0 THEN
        RETURN-CODE := 2416
        ESCAPE ROUTINE
     END-IF
  END-IF
  PERFORM SALDO-STACK-INIT
  /* читаем лимит остатков
  RESET MBMTSA1A
  MOVE UBODMN0A.OD-IT-ID(2) TO MBMTSA1A.IT-ID(1)
  MOVE MERXMM0A.RXM-ID TO MBMTSA1A.DR-EXCLUDE
  IF ZK-USE-OST NE 0 THEN
     MOVE MERXMM0A.ZK-ID TO MBMTSA1A.ZK-ID
  END-IF
  MOVE MERXMM0A.IN-MO-ID TO MBMTSA1A.MO-ID
  MOVE MERXMM0A.MT-ID  TO MBMTSA1A.MT-ID
  IF KOR-USE-OST EQ 2 THEN
     MOVE MERXMM0A.OUT-MO-ID TO MBMTSA1A.KOR-MO-ID
     MOVE MERXMM0A.VO-ID TO MBMTSA1A.KOR-VO-ID
/*     MOVE MERXMM0A.zk-ID TO MBMTSA1A.KOR-zk-ID
  END-IF
  IF KOR-USE-OST EQ 3 THEN
     MOVE MERXMM0A.OUT-MO-ID TO MBMOMN0A.MO-ID
     MOVE "READ" TO MBMOMN0A.BL-COMMAND
     PERFORM MBMOMN0S XXERX00A XXCTXX0A MBMOMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE MBMOMN0A.DP-ID TO MBMTSA1A.KOR-DP-ID
/*     RESET MBMTSA1A.MO-ID
  END-IF
/*  MOVE MERxMM0A.EI-ID TO MBMTSA1A.PRIH-EI-ID
/*  MOVE MERXMM0A.BASE-EI-ID TO MBMTSA1A.BASE-EI-ID
  MOVE "LIFO" TO MBMTSA1A.BL-COMMAND
  PERFORM MBMTSA1S XXERX00A XXCTXX0A MBSAST0A MBMTSA1A UXCSXX0A
/*  WRITE 'limit' RETURN-CODE
  IF RETURN-CODE EQ EC-OBJECT-NOT-FOUND THEN
     RETURN-CODE := 2412
     ESCAPE ROUTINE
  ELSE
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  END-IF
  IF MXRXXODL.DF-CODE NE 0 THEN
     MOVE MXRXXODL.DF-CODE TO XBSOMN0A.SO-CODE
     MOVE SO-TYPE-DF TO XBSOMN0A.SO-TYPE
     MOVE "LOCATE" TO XBSOMN0A.BL-COMMAND
     PERFORM XBSOMN0S XXERX00A XXCTXX0A XBSOMN0A
     IF RETURN-CODE LT 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE XBSOMN0A.SO-ID TO MBMTSA1A.DF-ID
  ELSE
     RESET MBMTSA1A.DF-ID
  END-IF
  FOR #I = 1 TO MBSAST0A.STACK-LEN
     MOVE #I TO MBSAST0L.STACK-POS PERFORM SALDO-READ
     IF MBMTSA1A.DF-ID NE 0 THEN
        IF MBSAST0L.DF-ID NE MBMTSA1A.DF-ID THEN
           ESCAPE TOP
        END-IF
     END-IF
     IF RETURN-CODE NE 0 THEN *ERROR-NR := RETURN-CODE END-IF
/*     IF MBSAST0L.BASE-COL LE 0 THEN ESCAPE TOP END-IF
     ADD MBSAST0L.BASE-COL TO MERXMM0A.BASE-COL-LIMIT
     ADD MBSAST0L.BALC-SUMMA TO MERXMM0A.BALC-CENA-SUMMA-LIMIT
  END-FOR
/*  WRITE *PROGRAM MERXMM0A.BASE-COL-LIMIT
/* Жесткий хак дл  возвратов с участков
  IF KOR-USE-OST EQ 3 THEN
     MERXMM0A.BASE-COL-LIMIT := MERXMM0A.BASE-COL-LIMIT * -1
  END-IF
  IF MERXMM0A.BASE-COL-LIMIT LE 0 THEN
     RETURN-CODE := 2412
     ESCAPE ROUTINE
  END-IF
/*  WRITE 'limit' MERxMM0A.BASE-COL-LIMIT MERxMM0A.PLAN-COL-LIMIT
  /*
END-SUBROUTINE
/*
DEFINE SUBROUTINE CHECK-COL
  IF MERXMM0A.BASE-COL GT MERXMM0A.BASE-COL-LIMIT THEN
     MERXMM0A.BASE-COL := MERXMM0A.BASE-COL-LIMIT
  END-IF
  IF MERXMM0A.BASE-COL EQ MERXMM0A.BASE-COL-LIMIT THEN
     MERXMM0A.BALC-CENA-SUMMA := MERXMM0A.BALC-CENA-SUMMA-LIMIT
  END-IF
/*  COMPUTE ROUNDED MERXMM0A.BALC-CENA-SUMMA = MERXMM0A.BALC-CENA-SUMMA-LIMIT *
/*        MERXMM0A.BASE-COL  / MERXMM0A.BASE-COL-LIMIT
  IF MERXMM0A.LK-ID NE 0 THEN
/*
     MOVE MERXMM0A.LK-ID TO MBLKHM0A.LK-ID
     MOVE "READ" TO MBLKHM0A.BL-COMMAND
     PERFORM MBLKHM0S XXERX00A XXCTXX0A MBLKHM0A UXCSXX0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
/*
/*  WRITE 'mt' MERxMM0A.MT-ID MBLKHM0A.MT-ID
     IF MERXMM0A.MT-ID EQ MBLKHM0A.MT-ID THEN
        MERXMM0A.PLAN-COL := MERXMM0A.BASE-COL
     ELSE
        MOVE MERXMM0A.MZ-ID TO MBMZMN0A.MZ-ID
        MOVE "READ" TO MBMZMN0A.BL-COMMAND
        PERFORM MBMZMN0S XXERX00A XXCTXX0A MBMZMN0A
        IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
        MERXMM0A.PLAN-COL := MERXMM0A.BASE-COL / MBMZMN0A.COL
     END-IF
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-READ
  /* Читаем саму запись
  MOVE MERXMM0A.RXM-DD-ID TO MBRXMM0A.DD-ID
  MOVE MERXMM0A.RXM-ID TO MBRXMM0A.DR-ID
  MOVE "READ" TO MBRXMM0A.BL-COMMAND
  PERFORM MBRXMM0S XXERX00A XXCTXX0A MBRXMM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /* Читаем техническую запись контейнера партий
  MOVE MERXMM0A.RXP-DD-ID TO MBRXPM0A.DD-ID
  MOVE MERXMM0A.RXM-ID TO MBRXPM0A.DR-ID
  MOVE "READ-TR" TO MBRXPM0A.BL-COMMAND
  PERFORM MBRXPM0S XXERX00A XXCTXX0A MBRXPM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /* Расшифровываем аналитики
  IF MERXMM0A.ZK-ID EQ 0 THEN
     MOVE MBRXMM0A.ZK-ID TO MERXMM0A.ZK-ID
  END-IF
  MOVE MERXMM0A.ZK-ID TO #ZK-ID
  MOVE BY NAME MBRXMM0A TO MERXMM0A
  MOVE BY NAME MBRXPM0A TO MERXMM0A
  MOVE MBRXPM0A.BALC-SUMMA TO MERXMM0A.BALC-CENA-SUMMA
  MOVE #ZK-ID TO MERXMM0A.ZK-ID
/*  WRITE MERXMM0A.BASE-COL  MERXMM0A.PLAN-COL
  PERFORM RECORD-EXTEND
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-PREPARE
  IF MERXMM0A.MT-ID EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ATTRIBUTE-REQUIRED
  END-IF
/*  IF MERXMM0A.BASE-COL EQ 0 THEN
/*     *ERROR-NR := EC-OBJECT-ATTRIBUTE-REQUIRED
/*  END-IF
/*  IF MERXMM0A.LK-ID EQ 0 THEN
/*     *ERROR-NR := EC-OBJECT-ATTRIBUTE-REQUIRED
/*  END-IF
  PERFORM CHECK-LIMIT
  IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
  PERFORM CHECK-COL
  PERFORM RECORD-EXTEND
END-SUBROUTINE
/*
/*DEFINE SUBROUTINE PARTY-CONTAINER-ADD
  /* блокируем ЛЗК
/*  MOVE MBRXMM0A.LK-ID TO MBLKHM0A.LK-ID
/*  MOVE "LOCK" TO MBLKHM0A.BL-COMMAND
/*  PERFORM MBLKHM0S XXERX00A XXCTXX0A MBLKHM0A UXCSXX0A
/*  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /*
/*  MOVE "READ" TO MBLKHM0A.BL-COMMAND
/*  PERFORM MBLKHM0S XXERX00A XXCTXX0A MBLKHM0A UXCSXX0A
/*  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /*
/*  MOVE MBRXMM0A.BASE-COL TO #BASE-COL
/*  FOR #I = 1 TO MBSAST0A.STACK-LEN
/*     IF #BASE-COL LE 0 THEN ESCAPE BOTTOM END-IF
/*     MOVE #I TO MBSAST0L.STACK-POS PERFORM SALDO-READ
/*     IF RETURN-CODE NE 0 THEN *ERROR-NR := RETURN-CODE END-IF
/*     IF MBSAST0L.BASE-COL LE 0 THEN ESCAPE TOP END-IF
/*     IF MBSAST0L.BASE-EI-ID NE MERXMM0A.BASE-EI-ID THEN
/*        ESCAPE TOP
/*     END-IF
/*     WRITE 'do' #BASE-COL MBSAST0L.BASE-COL MBSAST0L.PRIH-COL MBSAST0L.BALC-SUMMA
/*     IF MBSAST0L.BASE-COL GT #BASE-COL THEN
/*        COMPUTE ROUNDED MBSAST0L.PLAN-COL = MBSAST0L.PLAN-COL *
/*              #BASE-COL / MBSAST0L.BASE-COL
/*        COMPUTE ROUNDED MBSAST0L.PRIH-COL = MBSAST0L.PRIH-COL *
/*              #BASE-COL / MBSAST0L.BASE-COL
/*        COMPUTE ROUNDED MBSAST0L.BALC-SUMMA = MBSAST0L.BALC-SUMMA *
/*              #BASE-COL / MBSAST0L.BASE-COL
/*        MBSAST0L.BASE-COL := #BASE-COL
/*     END-IF
/*     WRITE 'po' #BASE-COL MBSAST0L.BASE-COL MBSAST0L.PRIH-COL MBSAST0L.BALC-SUMMA
     /* Заполним плановые единицы
/*     MOVE MERXMM0A.PLAN-EI-ID TO MBSAST0L.PLAN-EI-ID
/*     COMPUTE ROUNDED MBSAST0L.PLAN-COL = MBSAST0L.BASE-COL *
/*              MERXMM0A.PLAN-COL / MERXMM0A.BASE-COL
     /* Модифицируем ЛЗК
/*     RESET MBLKRM0A
/*     MOVE MBRXMM0A.LK-ID TO MBLKRM0A.LKH-ID
/*     MOVE MBRXMM0A.RL-ID TO MBLKRM0A.RL-ID
/*     MOVE MBRXMM0A.MT-ID TO MBLKRM0A.MT-ID
/*     MOVE MBSAST0L.PR-ID TO MBLKRM0A.PR-ID
/*     MBlkrM0A.CENA
/*     MOVE MBSAST0L.BALC-SUMMA TO MBLKRM0A.balc-cena-SUMMA
/*     MOVE MBSAST0L.PLAN-COL TO MBLKRM0A.PLAN-COL
/*     MOVE MERXMM0A.PLAN-EI-ID TO MBLKRM0A.PLAN-EI-ID
/*     MOVE MBSAST0L.BASE-COL TO MBLKRM0A.BASE-COL
/*     MOVE MBSAST0L.BASE-EI-ID TO MBLKRM0A.BASE-EI-ID
/*
/*     MOVE "ADD" TO MBLKRM0A.BL-COMMAND
/*     PERFORM MBLKRM0S XXERX00A XXCTXX0A MBLKRM0A UXCSXX0A
/*     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     /*
/*     RESET MBRXPM0A
/*     MOVE MBSAST0L.PR-ID TO MBRXPM0A.PR-ID
/*     MOVE MBRXMM0A.RLM-ID TO MBRXPM0A.RLM-ID
/*     MOVE MBLKRM0A.LKR-ID TO MBRXPM0A.LKR-ID
/*     MOVE MBSAST0L.DT-ID TO MBRXPM0A.DT-ID
/*     MOVE MBSAST0L.BALC-SUMMA TO MBRXPM0A.balc-cena-SUMMA
/*     MOVE MBSAST0L.PRIH-COL TO MBRXPM0A.COL
/*     MOVE MBSAST0L.PRIH-EI-ID TO MBRXPM0A.EI-ID
/*     MOVE MBSAST0L.BASE-COL TO MBRXPM0A.BASE-COL
/*     MOVE MBSAST0L.BASE-EI-ID TO MBRXPM0A.BASE-EI-ID
/*     MOVE MBSAST0L.PLAN-COL TO MBRXPM0A.PLAN-COL
/*     MOVE MBSAST0L.PLAN-EI-ID TO MBRXPM0A.PLAN-EI-ID
/*     COMPUTE ROUNDED MBRXPM0A.CENA = MBRXPM0A.balc-cena-SUMMA / MBRXPM0A.BASE-COL
/*     MOVE "ADD" TO MBRXPM0A.BL-COMMAND
/*     PERFORM MBRXPM0S XXERX00A XXCTXX0A MBRXPM0A UXCSXX0A
/*     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
/*     SUBTRACT MBSAST0L.BASE-COL FROM #BASE-COL
/*  END-FOR
/*END-SUBROUTINE
/*
DEFINE SUBROUTINE PARTY-CONTAINER-DEL
  /* блокируем ЛЗК
  IF MBRXMM0A.LK-ID NE 0 THEN
     MOVE MBRXMM0A.LK-ID TO MBLKHM0A.LK-ID
     MOVE "LOCK" TO MBLKHM0A.BL-COMMAND
     PERFORM MBLKHM0S XXERX00A XXCTXX0A MBLKHM0A UXCSXX0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  END-IF
  /*
  MOVE MERXMM0A.RXP-DD-ID TO MBDRXL0A.DD-ID
  MOVE MBRXMM0A.DR-ID TO MBDRXL0A.DR-UP-ID
  MOVE "BOTTOM" TO MBDRXL0A.BL-COMMAND
  MOVE 20 TO MBDRXL0A.DR-LIST-READ
  REPEAT
     PERFORM MBDRXL0S XXERX00A XXCTXX0A MBDRXL0A UXCSXX0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := RETURN-CODE END-IF
     MOVE "PREV" TO MBDRXL0A.BL-COMMAND
     FOR #I = 1 TO MBDRXL0A.DR-LIST-C
        MOVE MERXMM0A.RXP-DD-ID TO MBRXPM0A.DD-ID
        MOVE MBDRXL0A.DR-ID(21 - #I) TO MBRXPM0A.DR-ID
        MOVE "READ" TO MBRXPM0A.BL-COMMAND
        PERFORM MBRXPM0S XXERX00A XXCTXX0A MBRXPM0A UXCSXX0A
        IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
        IF MBRXMM0A.LK-ID NE 0 THEN
        /*
           MOVE MBRXPM0A.LKR-ID TO MBLKRM0A.LKR-ID
           MOVE "READ" TO MBLKRM0A.BL-COMMAND
           PERFORM MBLKRM0S XXERX00A XXCTXX0A MBLKRM0A UXCSXX0A
           IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
           /*
           MOVE "DELETE" TO MBLKRM0A.BL-COMMAND
           PERFORM MBLKRM0S XXERX00A XXCTXX0A MBLKRM0A UXCSXX0A
           IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
        END-IF
        /*
        MOVE MERXMM0A.RXP-DD-ID TO MBRXPM0A.DD-ID
        MOVE "DELETE" TO MBRXPM0A.BL-COMMAND
        PERFORM MBRXPM0S XXERX00A XXCTXX0A MBRXPM0A UXCSXX0A
        IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     END-FOR
     UNTIL MBDRXL0A.IS-TOP
  END-REPEAT
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-ADD
  IF MERXMM0A.RXH-ID EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ATTRIBUTE-REQUIRED
  END-IF
  RESET MERXMM0A.RXM-ID
  RESET MERXMM0A.IS-DR-CONFIRMED
  /* подготовим обновление
  PERFORM RECORD-PREPARE
  IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
  /* сохран ем запись
  MOVE BY NAME MERXMM0A TO MBRXMM0A
  MOVE MERXMM0A.RXH-ID TO MBRXMM0A.DR-UP-ID
  MOVE MERXMM0A.RXM-DD-ID TO MBRXMM0A.DD-ID
  MOVE "ADD" TO MBRXMM0A.BL-COMMAND
  PERFORM MBRXMM0S XXERX00A XXCTXX0A MBRXMM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  MOVE MBRXMM0A.DR-ID TO MERXMM0A.RXM-ID
/*  PERFORM PARTY-CONTAINER-ADD
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-UPDATE
  IF MERXMM0A.RXH-ID EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ID-REQUIRED
  END-IF
  IF MERXMM0A.RXM-ID EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ID-REQUIRED
  END-IF
  /* читаем запись
  MOVE MERXMM0A.RXM-DD-ID TO MBRXMM0A.DD-ID
  MOVE MERXMM0A.RXM-ID TO MBRXMM0A.DR-ID
  MOVE "READ" TO MBRXMM0A.BL-COMMAND
  PERFORM MBRXMM0S XXERX00A XXCTXX0A MBRXMM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  MOVE MBRXMM0A.DR-UP-ID TO MERXMM0A.RXH-ID
  MOVE MBRXMM0A.IS-DR-CONFIRMED TO MERXMM0A.IS-DR-CONFIRMED
  /* проводим обновление
  PERFORM RECORD-PREPARE
  IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
  /*
  IF MBRXMM0A.MT-ID NE MERXMM0A.MT-ID THEN
     PERFORM PARTY-CONTAINER-DEL
  END-IF
  /* сохран ем запись
  MOVE BY NAME MERXMM0A TO MBRXMM0A
  MOVE MERXMM0A.RXM-DD-ID TO MBRXMM0A.DD-ID
  MOVE MERXMM0A.RXM-ID TO MBRXMM0A.DR-ID
/*  MOVE MERxMM0A.RLM-ID TO MBRxMM0A.RLM-ID
  MOVE "UPDATE" TO MBRXMM0A.BL-COMMAND
  PERFORM MBRXMM0S XXERX00A XXCTXX0A MBRXMM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
/*  PERFORM PARTY-CONTAINER-ADD
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-CONFIRM
  IF MERXMM0A.RXH-ID EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ID-REQUIRED
  END-IF
  IF MERXMM0A.RXM-ID EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ID-REQUIRED
  END-IF
  /* читаем запись
  MOVE MERXMM0A.RXM-DD-ID TO MBRXMM0A.DD-ID
  MOVE MERXMM0A.RXM-ID TO MBRXMM0A.DR-ID
  MOVE "READ" TO MBRXMM0A.BL-COMMAND
  PERFORM MBRXMM0S XXERX00A XXCTXX0A MBRXMM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /*
  MOVE MERXMM0A.RXP-DD-ID TO MBRXPM0A.DD-ID
  MOVE MERXMM0A.RXM-ID TO MBRXPM0A.DR-ID
  MOVE "READ-TR" TO MBRXPM0A.BL-COMMAND
  PERFORM MBRXPM0S XXERX00A XXCTXX0A MBRXPM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  MOVE MERXMM0A.CONF-COL TO MBRXMM0A.CONF-COL
  /*
  IF MERXMM0A.CONF-COL EQ MBRXPM0A.BASE-COL THEN
     MOVE TRUE TO MBRXMM0A.IS-DR-CONFIRMED
  ELSE
     MOVE FALSE TO MBRXMM0A.IS-DR-CONFIRMED
  END-IF
  /* Не производим пересчет проводок
  #OD-IS-NOT-USED := XXCTXX0A.OD-IS-NOT-USED
  XXCTXX0A.OD-IS-NOT-USED := TRUE
  /*
  MOVE MERXMM0A.RXM-DD-ID TO MBRXMM0A.DD-ID
  MOVE MERXMM0A.RXM-ID TO MBRXMM0A.DR-ID
  MOVE "UPDATE" TO MBRXMM0A.BL-COMMAND
  PERFORM MBRXMM0S XXERX00A XXCTXX0A MBRXMM0A UXCSXX0A
  /* востановим обработку проводок до возможного исключени
  XXCTXX0A.OD-IS-NOT-USED := #OD-IS-NOT-USED
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /*
  PERFORM RECORD-EXTEND
  /*
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-DELETE
  IF MERXMM0A.RXM-ID EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ID-REQUIRED
  END-IF
  IF MERXMM0A.RXH-ID EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ID-REQUIRED
  END-IF
  MOVE MERXMM0A.RXM-DD-ID TO MBRXMM0A.DD-ID
  MOVE MERXMM0A.RXM-ID TO MBRXMM0A.DR-ID
/*  WRITE MBRXMM0A.DD-ID  MBRXMM0A.DR-ID
  MOVE "HOLD" TO MBRXMM0A.BL-COMMAND
  PERFORM MBRXMM0S XXERX00A XXCTXX0A MBRXMM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /*
/*  MOVE MERXMM0A.RL-ID TO MBRLHM0A.RL-ID
/*  MOVE "READ" TO MBRLHM0A.BL-COMMAND
/*  PERFORM MBRLHM0S XXERX00A XXCTXX0A MBRLHM0A UXCSXX0A
/*  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /*
/*  IF MBRLHM0A.RL-ID NE MBRXMM0A.RL-ID THEN
/*     *ERROR-NR := EC-RECORD-MISMATCH
/*  END-IF
  PERFORM PARTY-CONTAINER-DEL
  MOVE MERXMM0A.RXM-ID TO MBRXMM0A.DR-ID
  MOVE MERXMM0A.RXM-DD-ID TO MBRXMM0A.DD-ID
  MOVE MERXMM0A.RXH-ID TO MBRXMM0A.DR-UP-ID
  MOVE "DELETE" TO MBRXMM0A.BL-COMMAND
  PERFORM MBRXMM0S XXERX00A XXCTXX0A MBRXMM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
END-SUBROUTINE
/*
INCLUDE XXSTMN4C "MBSAST0A" "MBSAST0L-CONST" "MBSAST0L"
        "SALDO-STACK-INIT" "SALDO-STACK-FREE" "SALDO-STACK-REALLOC"
        "SALDO-PUSH" "SALDO-READ" "SALDO-WRITE" "SALDO-LOCATE"
/*
INCLUDE XXERSY1C
END-SUBROUTINE
END
