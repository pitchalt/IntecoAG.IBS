* >Natural Source Header 000000 /*<RO>>
* :NatName XPTBSH0S
* :UID PAUL
* :Mode S
* :CP
* :Date 20061128
* :Time 1959000
* <Natural Source Header /*<<RO>
/***********************************************************************
/*
/* яхярелю: ARM-K
/* опнцпюллю: онхяй б яопюбнвмхйе
/*
/* пюгпюанрвхй:
/* дюрю бшосяйю:
/*
/* мюгбюмхе: онхяй б яопюбнвмхйе днюцлюрепхюкнб
/* йнлюмдш:
/*  - LOCATE
/*  - SELECT
/*
/* хяопюбкемхъ:
/*
/***********************************************************************
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING XXCTXX0A
PARAMETER USING XPTBSH0A
/*
LOCAL USING XXXXEC0L
LOCAL USING XPTBSC0L
LOCAL USING XPTBSR0L
LOCAL USING STEKL
LOCAL USING XDTBSH0L
LOCAL
1 #COUNT      (I4)
1 #NUMBER     (P10)
1 #FLAG       (L)
1 #POSITION   (I4)
1 #SELECTED   (A30)
/*1 #TB-CODE    (N52)
/*
1 CNTST(N5) INIT < 200 >
1 LEN-ST-TB(B4) INIT < 63 >
1 STEKTB
2 TB-CODE   (N5)
2 TB-POD    (N5)
2 TB-FAM    (A20)
2 TB-NAME   (A10)
2 TB-OTCHES (A15)
2 TB-ID     (P15)
1 #CODE     (N5)
1 #FA-START (A21)
1 #FA-STOP  (A21)
1 #SORT-START (B4)
1 #SORT-STOP  (B4)
1 C-Z(C/7)
END-DEFINE
DEFINE SUBROUTINE XPTBSH0S
/*
DEFINE WINDOW WINDOW-RESULT
  SIZE 20*80
  BASE 5/1
  TITLE "мюидеммше янрпсдмхйх"
  FRAMED ON
/*
DEFINE WINDOW WINDOW-CRITERY
  SIZE 18*80
  BASE 7/1
  TITLE "оюпюлерпш нранпю янрпсдмхйнб"
  FRAMED ON
/*
SET KEY ALL
SET CONTROL 'MT'
RESET RETURN-CODE XPTBSH0A.TB-RESULT
/*
/*MOVE BY NAME XPTBSH0A TO XPTBSC0L
/*
DECIDE ON FIRST VALUE SH-COMMAND
  VALUE 'LOCATE'
     PERFORM TB-LOCATE
  VALUE 'SELECT'
     PERFORM TB-SELECT
  NONE VALUE
     INCLUDE XXERUS1C '2201'
END-DECIDE
/*
SET WINDOW OFF
/*
DEFINE SUBROUTINE TB-LOCATE
  MOVE XPTBSH0A.TB-SEARCH TO XPTBSC0L.TB-FAM
  IF NOT TB-SEARCH IS (N5) THEN
     EXAMINE TB-SEARCH FOR " " GIVING LENGTH #NUMBER
     IF #NUMBER < 2 THEN
        INCLUDE XXERUS1C '2413'
     END-IF
  END-IF
  PERFORM TB-SEARCH
  IF #COUNT EQ 0 THEN
     INCLUDE XXERUS1C '2401'
  ELSE
     IF #COUNT EQ 1 THEN
        MOVE BY NAME STEKTB TO XPTBSH0A
        ESCAPE ROUTINE
     END-IF
     PERFORM TB-SHOW
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE TB-SELECT
  RESET TB-SEARCH
  PERFORM TB-CRITERY
  IF *PF-KEY NE 'PF3' THEN
     PERFORM TB-SHOW
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE TB-SHOW
  SET WINDOW 'WINDOW-RESULT'
  SET KEY NAMED OFF
  SET KEY ENTR NAMED 'бшапр'
  SET KEY PF3 NAMED 'бшунд'
  SET KEY PF7 NAMED 'боепд'
  SET KEY PF8 NAMED 'мюгюд'
  SET KEY PF6 NAMED 'оюпюл'
  RESET #SELECTED
  #N := 1
  REPEAT
    PERFORM TB-LIST
     INPUT USING MAP 'XPTBSR0M'
     IF *PF-KEY EQ 'PF6' THEN
        PERFORM TB-CRITERY
        SET WINDOW 'WINDOW-RESULT'
        SET KEY NAMED OFF
        SET KEY ENTR NAMED 'бшапр'
        SET KEY PF3 NAMED 'бшунд'
        SET KEY PF7 NAMED 'боепд'
        SET KEY PF8 NAMED 'мюгюд'
        SET KEY PF6 NAMED 'оюпюл'
        RESET #SELECTED
     END-IF
     IF *PF-KEY EQ 'PF3' THEN
        RESET #SELECTED
        ESCAPE BOTTOM
     END-IF
     IF *PF-KEY EQ 'PF7' AND #N > 7
        ADD -7 TO #N
     END-IF
     IF *PF-KEY EQ 'PF8' AND #K < #COUNT
        ADD 7 TO #N
     END-IF
     IF *PF-KEY EQ 'ENTR' THEN
        FOR #I = 1 TO 7
           IF *CURS-FIELD EQ POS(CP-CMD(#I)) THEN
              #SELECTED := XPTBSR0L.TB-CODE(#I)
              XPTBSH0A.TB-ID := XPTBSH0A.TB-CODE := XPTBSR0L.TB-CODE(#I)
              XI := #N + #I - 1  CALL 'RWSX' XI STEKTB.TB-CODE XR XN1
              MOVE BY NAME STEKTB TO XPTBSH0A.TB-RESULT
              ESCAPE ROUTINE
           END-IF
        END-FOR
     END-IF
  END-REPEAT
END-SUBROUTINE
/*
DEFINE SUBROUTINE TB-CRITERY
  SET WINDOW 'WINDOW-CRITERY'
  SET KEY NAMED OFF
  SET KEY ENTR NAMED 'хяйюр'
  SET KEY PF3 NAMED 'бшунд'
  REPEAT
     INPUT USING MAP 'XPTBSC0M'
     IF *PF-KEY EQ 'PF3' THEN
        RESET #SELECTED
        ESCAPE BOTTOM
     END-IF
     IF *PF-KEY EQ 'ENTR'
        PERFORM TB-SEARCH
        ESCAPE ROUTINE
     END-IF
  END-REPEAT
END-SUBROUTINE
/*
DEFINE SUBROUTINE TB-LIST
  RESET XPTBSR0L.TB-LIST(*)
  #K := #N + 6  #L := 0  C-Z(*) := (AD=PN)
  FOR #I #N #K
    IF #I <= #COUNT  XI := #I  CALL 'RWSX' XI STEKTB.TB-CODE XR XN1
      #SELECTED := STEKTB.TB-CODE
      ADD 1 TO #L  RESET C-Z(#L)
      MOVE BY NAME STEKTB TO XPTBSR0L.TB-LIST(#L)
/*      XPTBSR0L.TB-NAME(#L) := STEKTB.TB-NAME
    END-IF
  END-FOR
END-SUBROUTINE
/*
DEFINE SUBROUTINE TB-SEARCH
  XI := CNTST  CALL 'GTSX' LEN-ST-TB XI XN1
  XW := #N := 1
  RESET #COUNT
  IF TB-SEARCH IS (N5) THEN
     #CODE := VAL(TB-SEARCH)
     FIND TABEL-VIEW TN-F EQ #CODE
        PERFORM TB2STEK
     END-FIND
  END-IF
  DECIDE FOR FIRST CONDITION
     WHEN XPTBSC0L.TB-FAM NE ' '
        COMPRESS XPTBSC0L.TB-FAM H'00' INTO #FA-START LEAVING NO SPACE
        COMPRESS XPTBSC0L.TB-FAM H'FF' INTO #FA-STOP LEAVING NO SPACE
        FIND TABEL-VIEW FA-F = #FA-START THRU #FA-STOP
           PERFORM TB2STEK
        END-FIND
     WHEN XPTBSC0L.TB-CODE NE 0 AND XPTBSC0L.TB-FAM = ' '
        FIND TABEL-VIEW TN-F = XPTBSC0L.TB-CODE
           PERFORM TB2STEK
        END-FIND
     WHEN XPTBSC0L.TB-POD NE 0
        FIND TABEL-VIEW PO-F = XPTBSC0L.TB-POD
           PERFORM TB2STEK
        END-FIND
     WHEN NONE
        FIND TABEL-VIEW TN-F NE 0
           PERFORM TB2STEK
        END-FIND
     END-DECIDE
  IF #COUNT > 0 THEN
     MOVE 1 TO #SORT-START
     MOVE 5 TO #SORT-STOP
     CALL "SRTX" #SORT-START #SORT-STOP XN1
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE TB2STEK
  MOVE TABEL-VIEW.TN-F TO STEKTB.TB-ID
  MOVE TABEL-VIEW.TN-F TO STEKTB.TB-CODE
  MOVE TABEL-VIEW.PO-F TO STEKTB.TB-POD
  MOVE TABEL-VIEW.FA-F TO STEKTB.TB-FAM
  MOVE TABEL-VIEW.IM-F TO STEKTB.TB-NAME
  MOVE TABEL-VIEW.OT-F TO STEKTB.TB-OTCHES
  ADD 1 TO #COUNT
  IF #COUNT > CNTST  #K := XI := CNTST  CALL 'GTSX' LEN-ST-TB XI XN2
    FOR #I 1 CNTST  XI := #I  CALL 'RWSX' XI STEKTB.TB-CODE XR XN1
      CALL 'RWSX' XI STEKTB.TB-CODE XW XN2
    END-FOR
    CALL 'FRSX' XN1
    ADD 200 TO CNTST  XI := CNTST  CALL 'GTSX' LEN-ST-TB XI XN1
    FOR #I 1 #K  XI := #I  CALL 'RWSX' XI STEKTB.TB-CODE XR XN2
      CALL 'RWSX' XI STEKTB.TB-CODE XW XN1
    END-FOR
    CALL 'FRSX' XN2
  END-IF
  XI := #COUNT  CALL 'RWSX' XI STEKTB.TB-CODE XW XN1
END-SUBROUTINE
/*
INCLUDE XXERSY1C
END-SUBROUTINE
END

