* >Natural Source Header 000000 /*<RO>>
* :NatName MTRXPM0P
* :UID INTECO
* :Mode S
* :CP
* :Date 20061002
* :Time 2335000
* <Natural Source Header /*<<RO>
DEFINE DATA
LOCAL USING XXERX00A
LOCAL USING XXCTXX0A
LOCAL USING UXCSXX0A
/*
LOCAL USING XXXXEC0L
/*
LOCAL USING UETXMN0A
/*LOCAL USING UEOPPC0A
LOCAL USING MERLHM0A
/*
LOCAL USING MERXMM0A
LOCAL USING MERXPLSA
LOCAL USING MERXPLSL
LOCAL USING MERXPM0A
LOCAL USING MERXPL0A
/*
LOCAL USING XMBMXX1A
LOCAL USING MERXHM0A
/*
LOCAL USING MEPHMN0A
LOCAL USING MEPMMN0A
/*
LOCAL USING MELKHM0A
/*
LOCAL USING MERLZL0A
LOCAL USING MERLZLSA
/*
LOCAL USING MBMTMN0A
LOCAL USING MBMOMN0A
LOCAL USING MBVOMN0A
LOCAL USING MBEIMN0A
LOCAL USING MBDMMN0A
LOCAL USING MBRLPL0A
LOCAL USING MBMZMN0A
LOCAL USING MBZKMN0A
LOCAL USING XABOXX0A
/*
LOCAL
1 #I          (I4)
1 #NUMBER     (N5)
1 #COUNT      (N4)
1 #RL-ID-1    (P15)
1 #RLM-ID-1   (P15)
1 #DM-1       (P15)
1 #EI-1       (P15)
1 #EI-999     (P15)
1 #VO-6146    (P15)
1 #TEST-FAIL  (I2)
1 #TEST-PASS  (I2)
1 #TESTNAME   (A70)
1 #LK-ID-1    (P15)
1 #LK-ID-2    (P15)
1 #MO-ID-1    (P15)
1 #MO-ID-2    (P15)
1 #MT-ID-1    (P15)
1 #MT-ID-2    (P15)
1 #ZK-ID-1    (P15)
/*
END-DEFINE
/*
XXCTXX0A.OG-ID := 1000
XXCTXX0A.VO-OG-ID := 1000
XXCTXX0A.MO-OG-ID := 1000
XXCTXX0A.MT-OG-ID := 1000
/*XXCTXX0A.TX-NOT-MANAGED := TRUE
XXCTXX0A.IS-OP-DEBUG := TRUE
/*
#TESTNAME := 'LOCATE EI 1'
ADD 1 TO #TEST-PASS
MOVE 1 TO MBEIMN0A.EI-CODE
MOVE "LOCATE" TO MBEIMN0A.BL-COMMAND
PERFORM MBEIMN0S XXERX00A XXCTXX0A MBEIMN0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
MOVE MBEIMN0A.EI-ID TO #EI-1
/*
#TESTNAME := 'LOCATE EI 999'
ADD 1 TO #TEST-PASS
MOVE 999 TO MBEIMN0A.EI-CODE
MOVE "LOCATE" TO MBEIMN0A.BL-COMMAND
PERFORM MBEIMN0S XXERX00A XXCTXX0A MBEIMN0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
MOVE MBEIMN0A.EI-ID TO #EI-999
/*
#TESTNAME := 'LOCATE ZK'
ADD 1 TO #TEST-PASS
MOVE "2510" TO MBZKMN0A.ZK-CODE
MOVE "LOCATE" TO MBZKMN0A.BL-COMMAND
PERFORM MBZKMN0S XXERX00A XXCTXX0A MBZKMN0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
MOVE MBZKMN0A.ZK-ID TO #ZK-ID-1
/*
#TESTNAME := 'locate mt 1'
ADD 1 TO #TEST-PASS
MOVE "0001606675" TO MBMTMN0A.MT-CODE
MOVE "LOCATE" TO MBMTMN0A.BL-COMMAND
PERFORM MBMTMN0S XXERX00A XXCTXX0A MBMTMN0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
MOVE MBMTMN0A.MT-ID TO #MT-ID-1
/*
#TESTNAME := 'locate mt 2'
ADD 1 TO #TEST-PASS
MOVE "4000009" TO MBMTMN0A.MT-CODE
MOVE "LOCATE" TO MBMTMN0A.BL-COMMAND
PERFORM MBMTMN0S XXERX00A XXCTXX0A MBMTMN0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
MOVE MBMTMN0A.MT-ID TO #MT-ID-2
/*
#TESTNAME := 'LOCATE MO 1'
ADD 1 TO #TEST-PASS
MOVE 15 TO MBMOMN0A.MO-CODE
MOVE "LOCATE" TO MBMOMN0A.BL-COMMAND
PERFORM MBMOMN0S XXERX00A XXCTXX0A MBMOMN0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
MOVE MBMOMN0A.MO-ID TO #MO-ID-1
/*
#TESTNAME := 'LOCATE MO 2'
ADD 1 TO #TEST-PASS
MOVE 16 TO MBMOMN0A.MO-CODE
MOVE "LOCATE" TO MBMOMN0A.BL-COMMAND
PERFORM MBMOMN0S XXERX00A XXCTXX0A MBMOMN0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
MOVE MBMOMN0A.MO-ID TO #MO-ID-2
/*
XXCTXX0A.US-MO-ID := #MO-ID-1
/*
#TESTNAME := 'OPEN TRANSACTION 1'
ADD 1 TO #TEST-PASS
UETXMN0A.ME-COMMAND := 'OPEN'
PERFORM UITXMN0S XXERX00A XXCTXX0A UETXMN0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*
MOVE 200 TO XXCTXX0A.OD-ID
/*
#TESTNAME := 'ADD À«  1'
ADD 1 TO #TEST-PASS
MOVE '123' TO MELKHM0A.LK-NUMBER
MOVE *DATX TO MELKHM0A.LK-DATE
MOVE *DATX TO MELKHM0A.LK-DT-START
MOVE *DATX TO MELKHM0A.LK-DT-STOP
SUBTRACT 10 FROM MELKHM0A.LK-DT-START
ADD 10 TO MELKHM0A.LK-DT-STOP
MOVE 23.1234 TO MELKHM0A.LK-COL
MOVE 45.46 TO MELKHM0A.LK-CENA
MOVE ' ŒÃÃ≈Õ“¿–»…' TO MELKHM0A.LK-PRIM
MOVE 1 TO MELKHM0A.EI-CODE
MOVE "0001606675" TO MELKHM0A.MT-CODE
MOVE '2510' TO MELKHM0A.ZK-CODE
MOVE 33 TO MELKHM0A.DP-CODE
MOVE 15 TO MELKHM0A.MO-CODE
MOVE 'SET' TO MELKHM0A.ME-COMMAND
PERFORM MELKHM0S XXERX00A XXCTXX0A MELKHM0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*
#TESTNAME := 'ADD À«  2'
ADD 1 TO #TEST-PASS
MOVE '1234' TO MELKHM0A.LK-NUMBER
MOVE MBMTMN0A.MT-CODE TO MELKHM0A.MT-CODE
MOVE 'SET' TO MELKHM0A.ME-COMMAND
PERFORM MELKHM0S XXERX00A XXCTXX0A MELKHM0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*
#TESTNAME := 'ADD MZ'
ADD 1 TO #TEST-PASS
MOVE #MT-ID-2 TO MBMZMN0A.FROM-MT-ID
MOVE #MT-ID-1 TO MBMZMN0A.TO-MT-ID
MOVE MELKHM0A.ZK-ID TO MBMZMN0A.ZK-ID
MOVE 2 TO MBMZMN0A.COL
MOVE *DATX TO MBMZMN0A.DT-START
SUBTRACT 10 FROM MBMZMN0A.DT-START
MOVE *DATX TO MBMZMN0A.DT-STOP
ADD 10 TO MBMZMN0A.DT-STOP
MOVE "ADD" TO MBMZMN0A.BL-COMMAND
PERFORM MBMZMN0S XXERX00A XXCTXX0A MBMZMN0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*
MOVE 303 TO XXCTXX0A.OD-ID
/*
#TESTNAME := 'INIT HEADER rl'
ADD 1 TO #TEST-PASS
MERLHM0A.ME-COMMAND := 'INIT'
PERFORM MERLHM0S XXERX00A XXCTXX0A MERLHM0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*
#TESTNAME := 'ADD HEADER rl 1'
ADD 1 TO #TEST-PASS
MOVE "TST123" TO MERLHM0A.RL-NUMBER
MERLHM0A.OUT-MO-ID := #MO-ID-2
MERLHM0A.ZK-ID := MELKHM0A.ZK-ID
MERLHM0A.ME-COMMAND := 'ADD'
PERFORM MERLHM0S XXERX00A XXCTXX0A MERLHM0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
#RL-ID-1 := MERLHM0A.RL-ID
/*
#TESTNAME := 'check limit position RL'
ADD 1 TO #TEST-PASS
MERXMM0A.RXM-DD-ID := 1702
MERXMM0A.RXP-DD-ID := 1703
MERXMM0A.RXH-ID := #RL-ID-1
MERXMM0A.MT-ID := #MT-ID-2
MERXMM0A.LK-ID := MELKHM0A.LK-ID
MERXMM0A.IN-MO-ID := MERLHM0A.IN-MO-ID
MOVE "CHECK-LIM" TO MERXMM0A.ME-COMMAND
PERFORM MERXMM0S XXERX00A XXCTXX0A MERXMM0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*WRITE MERXMM0A.MT-CODE MERXMM0A.LK-NUMBER MERXMM0A.LK-DATE MERXMM0A.ZK-CODE MERXMM0A.BS-CODE /
/*     MERXMM0A.BASE-COL MERXMM0A.BASE-EI-SHORT-NAME
/*     MERXMM0A.PLAN-COL MERXMM0A.PLAN-EI-SHORT-NAME MERXMM0A.CENA-SUMMA /
/*     MERXMM0A.BASE-COL-LIMIT MERXMM0A.PLAN-COL-LIMIT
/*
#TESTNAME := 'add position RL'
ADD 1 TO #TEST-PASS
MERXMM0A.RXH-ID := #RL-ID-1
MOVE "ADD" TO MERXMM0A.ME-COMMAND
PERFORM MERXMM0S XXERX00A XXCTXX0A MERXMM0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*WRITE MERXMM0A.MT-CODE MERXMM0A.LK-NUMBER MERXMM0A.LK-DATE MERXMM0A.ZK-CODE MERXMM0A.BS-CODE /
/*     MERXMM0A.BASE-COL MERXMM0A.BASE-EI-SHORT-NAME
/*             MERXMM0A.PLAN-COL MERXMM0A.PLAN-EI-SHORT-NAME MERXMM0A.CENA-SUMMA /
/*     MERXMM0A.BASE-COL-LIMIT MERXMM0A.PLAN-COL-LIMIT
/*
#TESTNAME := 'load saldo'
ADD 1 TO #TEST-PASS
MOVE #MO-ID-1 TO MERXPL0A.IN-MO-ID
MOVE #MT-ID-2 TO MERXPL0A.MT-ID
MOVE "LOAD" TO MERXPL0A.ME-COMMAND
PERFORM MERXPL0S XXERX00A XXCTXX0A MERXPLSA MERXPL0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*PERFORM SHOW-STACK
/*
#TESTNAME := 'read party 1'
ADD 1 TO #TEST-PASS
MOVE 1702 TO MERXPM0A.RXM-DD-ID
MOVE "READ" TO MERXPM0A.ME-COMMAND
MOVE 1 TO MERXPM0A.STACK-POS
PERFORM MERXPM0S XXERX00A XXCTXX0A MERXPLSA MERXPM0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*
#TESTNAME := 'add party pos 1'
ADD 1 TO #TEST-PASS
MOVE 1703 TO MERXPM0A.DD-ID
MOVE MERXMM0A.RXM-ID TO MERXPM0A.DR-UP-ID
MOVE "UPDATE" TO MERXPM0A.ME-COMMAND
MOVE 1 TO MERXPM0A.STACK-POS
MOVE "B" TO MERXPM0A.COL-TYPE
MOVE 10 TO MERXPM0A.COL
PERFORM MERXPM0S XXERX00A XXCTXX0A MERXPLSA MERXPM0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*PERFORM SHOW-STACK
/*
#TESTNAME := 'update party pos 1'
ADD 1 TO #TEST-PASS
MOVE 1703 TO MERXPM0A.DD-ID
MOVE MERXMM0A.RXM-ID TO MERXPM0A.DR-UP-ID
MOVE "UPDATE" TO MERXPM0A.ME-COMMAND
MOVE 1 TO MERXPM0A.STACK-POS
MOVE "B" TO MERXPM0A.COL-TYPE
MOVE 5 TO MERXPM0A.COL
PERFORM MERXPM0S XXERX00A XXCTXX0A MERXPLSA MERXPM0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*PERFORM SHOW-STACK
/*
#TESTNAME := 'VIEW position'
ADD 1 TO #TEST-PASS
/*MOVE BY NAME MERLHM0A TO MERXHM0A
/*MOVE 1702 TO MERXHM0A.RXM-DD-ID
/*MOVE 1703 TO MERXHM0A.RXP-DD-ID
/*MOVE MERXMM0A.RXH-ID TO MERXHM0A.RXH-ID
/*MOVE MERXMM0A.RXM-ID TO XMBMXX1A.BM-OBJECT
MOVE MERLHM0A.RL-ID TO XMBMXX1A.BM-OBJECT
MOVE "NEW" TO XMBMXX1A.BM-COMMAND
PERFORM MMRLNW0S XXERX00A XXCTXX0A XMBMXX1A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*PERFORM SHOW-STACK
/*
DEFINE SUBROUTINE SHOW-STACK
  WRITE "STACK"
  FOR #I = 1 TO MERXPLSA.STACK-LEN
     MOVE #I TO MERXPM0A.STACK-POS
     MOVE "READ" TO MERXPM0A.ME-COMMAND
     PERFORM MERXPM0S XXERX00A XXCTXX0A MERXPLSA MERXPM0A UXCSXX0A
     IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
     WRITE MERXPM0A.PR-CODE MERXPM0A.DD-ID MERXPM0A.DR-ID MERXPM0A.IX-ID  /
        MERXPM0A.BASE-COL MERXPM0A.BASE-COL-LIMIT MERXPM0A.BASE-EI-SHORT-NAME
        MERXPM0A.PRIH-COL MERXPM0A.PRIH-COL-LIMIT MERXPM0A.PRIH-EI-SHORT-NAME /
        MERXPM0A.PO-NUMBER MERXPM0A.PO-DATE MERXPM0A.VO-CODE MERXPM0A.VO-NAME (AL=20)
  END-FOR
END-SUBROUTINE
/*
#TESTNAME := 'ROLLBACK TRANSACTION'
ADD 1 TO #TEST-PASS
MOVE "ROLLBACK" TO UETXMN0A.ME-COMMAND
PERFORM UITXMN0S XXERX00A XXCTXX0A UETXMN0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*
END TRANSACTION
WRITE '¬—≈√Œ “≈—“Œ¬' #TEST-PASS 'Œÿ»¡Œ◊Õ€’' #TEST-FAIL
/*
INCLUDE XXSTMN4C "MERXPLSA" "MERXPLSL-CONST" "MERXPLSL"
        "STACK-INIT" "STACK-FREE" "STACK-REALLOC"
        "STACK-PUSH" "STACK-READ" "STACK-WRITE" "STACK-LOCATE"
/*
DEFINE SUBROUTINE DUMP-ERROR
  ADD 1 TO #TEST-FAIL
  WRITE 'Œÿ»¡ ¿ “≈—“' #TEST-PASS #TESTNAME
  PERFORM XPERVW0S XXERX00A
/*  PRINT RETURN-CODE ERROR-ADDITION(1) ERROR-ADDITION(2)
/*  WRITE ERROR-MODULE ERROR-LINE ERROR-NUMBER /
/*        ERROR-STACK-MODULE(1) ERROR-STACK-LINE(1) /
/*        ERROR-STACK-MODULE(2) ERROR-STACK-LINE(2) /
/*        ERROR-STACK-MODULE(3) ERROR-STACK-LINE(3) /
/*        ERROR-STACK-MODULE(4) ERROR-STACK-LINE(4) /
/*        ERROR-STACK-MODULE(5) ERROR-STACK-LINE(5)
END-SUBROUTINE
END


