* >Natural Source Header 000000 /*<RO>>
* :NatName MLKPCM0S
* :UID PAUL
* :Mode S
* :CP
* :Date 20070821
* :Time 2312000
* <Natural Source Header /*<<RO>
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING XXCTXX0A
PARAMETER USING UXCSXX0A
PARAMETER USING XMXPXX0A
PARAMETER USING MLKXCS0A
/*
LOCAL USING XXXXEC0L
LOCAL USING XPXXEC0L
/*
LOCAL USING XPMXSM0L
LOCAL USING XPCPXX0L
LOCAL USING MLKPCM0L
/*
LOCAL USING XPMOSH0A
LOCAL USING MBMOMN0A
LOCAL USING XPDPSH0A
LOCAL USING XBDPMN0A
LOCAL USING XPZKSH0A
LOCAL USING MBZKMN0A
LOCAL USING XPMTSH0A
LOCAL USING MBMTMN0A
LOCAL USING XPVOSH0A
LOCAL USING MBVOMN0A
/*
LOCAL
1 #RETURN-CODE (I4)
/*
END-DEFINE
DEFINE SUBROUTINE MLKPCM0S
RESET BM-COMMAND-PROCESS
/*
MX-EDITOR-NAME := 'Критерии поиска ЛЗК'
/*
PERFORM SCREEN-INIT
PERFORM SCREEN-PREPARE
#RETURN-CODE := RETURN-CODE
PERFORM OBJECT-TO-SCREEN
RETURN-CODE := #RETURN-CODE
PERFORM SCREEN-MAIN-LOOP
/*
MOVE CP-CMD-EXIT TO BM-COMMAND-PROCESS
/* Основной цикл
DEFINE SUBROUTINE SCREEN-MAIN-LOOP
  REPEAT
     PERFORM SCREEN-SHOW
     /* ПРОВЕРИТЬ КАКАЯ КОМАНДА
     PERFORM COMMAND-CHECK
     IF RETURN-CODE NE 0 THEN ESCAPE TOP END-IF
     /* ВЫПОЛНИТЬ КОМАНДУ
     IF CP-COMMAND NE ' ' THEN
        PERFORM COMMAND-PROCESS
        IF RETURN-CODE NE 0 THEN ESCAPE TOP END-IF
     END-IF
     UNTIL CP-CMD-EXIT NE " "
  END-REPEAT
END-SUBROUTINE
/* Управление экраном и обработка комманд
/* INCLUDE XPMFMN1C "'''MPRLHM0M'''"
DEFINE SUBROUTINE SCREEN-INIT
  CP-MSG-POS := 4
  XPMXSM0L.MX-FUNCTION-NAME := XMXPXX0A.MX-FUNCTION-NAME
  MX-EDITOR-PROGRAM := *PROGRAM
  COMPRESS XPMXSM0L.MX-FUNCTION-NAME '/' MX-EDITOR-NAME '/'
        MX-EDITOR-PROGRAM INTO MX-WINDOW-TITLE
  SET KEY ALL
  FOR CP-CMD-INDEX = 1 TO CK-LIST-C
     IF CK-PFKEY-CODE(CP-CMD-INDEX) NE 'PGUP' AND
        CK-PFKEY-CODE(CP-CMD-INDEX) NE 'PGDN'
        SET KEY DYNAMIC CK-PFKEY-CODE(CP-CMD-INDEX)
              NAMED CK-PFKEY-NAME(CP-CMD-INDEX)
     END-IF
  END-FOR
  FOR CP-BAR-INDEX = 1 TO 6
     IF CP-BAR-INDEX <= CB-LIST-C THEN
        RESET XPMXSM0L.CB-BAR-SELECT-C(CP-BAR-INDEX)
        XPMXSM0L.CB-BAR-NAME(CP-BAR-INDEX) :=
              XMXPXX0A.CB-BAR-NAME(CP-BAR-INDEX)
     ELSE
        MOVE (AD=PN) TO XPMXSM0L.CB-BAR-SELECT-C(CP-BAR-INDEX)
     END-IF
  END-FOR
END-SUBROUTINE
/*
INCLUDE XPMXXX1C "SCREEN-SHOW" "'MLKPCM0M'" "OFF" "3"
/* Параметры (им -подпрограммы, им -MAP, им -окна, номер-строки-сообщени )
/*
DEFINE SUBROUTINE COMMAND-CHECK
  RESET XXERX00A CP-COMMAND CP-CMD-EXIT
  IF XPCPXX0L.CP-PF-KEY = "ENTR" THEN
/*INCLUDE XPCBCH1C '3' '5' '13'
     IF XPCPXX0L.CP-CURS-LINE EQ 3 THEN
        CP-BAR-INDEX := (CP-CURS-COL + 5) / 13
        IF CP-BAR-INDEX > 0 AND CP-BAR-INDEX <= CB-LIST-C THEN
           CP-COMMAND  := CB-CMD-INT(CP-BAR-INDEX)
           CP-CMD-EXIT := CB-CMD-CODE(CP-BAR-INDEX)
        END-IF
        IF CP-COMMAND EQ ' ' THEN
           INCLUDE XXERUS2C 'EC-SCREEN-BAR-UNKNOW' 'CP-BAR-INDEX'
        END-IF
        ESCAPE ROUTINE
     END-IF
  END-IF
  INCLUDE XPCKCH0C
END-SUBROUTINE
/*
/* Стандартна  обработка команд
DEFINE SUBROUTINE COMMAND-PROCESS
/* В противном случае неопознанна  команда
  DECIDE ON FIRST VALUE CP-COMMAND
     VALUE 'SELECT'
        PERFORM OBJECT-SELECT
/*        PERFORM SCREEN-CHECK
     VALUE 'CHECK'
        PERFORM SCREEN-CHECK
     VALUE 'NEW'
        PERFORM SCREEN-CHECK
        IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
        PERFORM SCREEN-TO-OBJECT
        PERFORM OBJECT-ADD
        IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
        PERFORM OBJECT-TO-SCREEN
     VALUE 'SAVE'
        PERFORM SCREEN-CHECK
        IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
        PERFORM SCREEN-TO-OBJECT
        PERFORM OBJECT-UPDATE
        IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
        PERFORM OBJECT-TO-SCREEN
     VALUE "CONFIRM"
        PERFORM SCREEN-CHECK
        IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
        PERFORM SCREEN-TO-OBJECT
        PERFORM OBJECT-CONFIRM
        IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
        PERFORM OBJECT-TO-SCREEN
     VALUE 'EXIT'
        ESCAPE ROUTINE
     NONE VALUE
        MOVE CP-COMMAND TO ERROR-ADDITION(1)
        RETURN-CODE := EC-UNKNOW-COMMAND
  END-DECIDE
END-SUBROUTINE
/* Стандартные процедуры работы с записью
DEFINE SUBROUTINE OBJECT-INIT
  IGNORE
/*  &2&.ME-COMMAND := 'INIT'
/*  PERFORM &1& XXERX00A XXCTXX0A &2& UXCSXX0A
END-SUBROUTINE
/*
DEFINE SUBROUTINE OBJECT-ADD
  IGNORE
/*  &2&.ME-COMMAND := 'ADD'
/*  PERFORM &1& XXERX00A XXCTXX0A &2& UXCSXX0A
END-SUBROUTINE
/*
DEFINE SUBROUTINE OBJECT-READ
  IGNORE
/*  &2&.ME-COMMAND := 'READ'
/*  PERFORM &1& XXERX00A XXCTXX0A &2& UXCSXX0A
END-SUBROUTINE
/*
DEFINE SUBROUTINE OBJECT-UPDATE
  IGNORE
/*  &2&.ME-COMMAND := 'UPDATE'
/*  PERFORM &1& XXERX00A XXCTXX0A &2& UXCSXX0A
END-SUBROUTINE
/*
DEFINE SUBROUTINE OBJECT-CONFIRM
  IGNORE
/*  &2&.ME-COMMAND := "CONFIRM"
/*  WRITE 'ADD' &2&.PO-ID
/*  PERFORM &1& XXERX00A XXCTXX0A &2& UXCSXX0A
END-SUBROUTINE
/*
DEFINE SUBROUTINE SCREEN-PREPARE
  DECIDE ON EVERY VALUE MX-COMMAND
  VALUE "EDIT", "SHOW"
     IGNORE
/*     MOVE (AD=P) TO DC-PACKAGE-C
/*     CP-CURS-FIELD := POS(CB-BAR-SELECT(1))
  NONE VALUE
     MOVE MX-COMMAND TO ERROR-ADDITION(1)
     *ERROR-NR := EC-UNKNOW-COMMAND
  END-DECIDE
END-SUBROUTINE
/*
DEFINE SUBROUTINE OBJECT-TO-SCREEN
  MOVE BY NAME MLKXCS0A TO MLKPCM0L
  MOVE EDITED MLKXCS0A.LK-DT-START (EM=YYYYMMDD) TO MLKPCM0L.LK-DT-START-A
  MOVE EDITED MLKXCS0A.LK-DT-STOP (EM=YYYYMMDD) TO MLKPCM0L.LK-DT-STOP-A
  MOVE EDITED MLKXCS0A.LK-DT-WORK (EM=YYYYMMDD) TO MLKPCM0L.LK-DT-WORK-A
  IF MLKPCM0L.MO-ID NE 0 THEN
     MOVE MLKPCM0L.MO-ID TO MBMOMN0A.MO-ID
     MOVE "READ" TO MBMOMN0A.BL-COMMAND
     PERFORM MBMOMN0S XXERX00A XXCTXX0A MBMOMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE MBMOMN0A.MO-ID TO MLKPCM0L.MO-ID
     MOVE MBMOMN0A.MO-CODE TO MLKPCM0L.MO-CODE
     MOVE MBMOMN0A.MO-CODE TO MLKPCM0L.MO-SEARCH
     MOVE MBMOMN0A.MO-NAME TO MLKPCM0L.MO-NAME
  END-IF
  IF MLKPCM0L.DP-ID NE 0 THEN
     MOVE MLKPCM0L.DP-ID TO XBDPMN0A.DP-ID
     MOVE "READ" TO XBDPMN0A.BL-COMMAND
     PERFORM XBDPMN0S XXERX00A XXCTXX0A XBDPMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE XBDPMN0A.DP-ID TO MLKPCM0L.DP-ID
     MOVE XBDPMN0A.DP-CODE TO MLKPCM0L.DP-CODE
     MOVE XBDPMN0A.DP-CODE TO MLKPCM0L.DP-SEARCH
     MOVE XBDPMN0A.DP-NAME TO MLKPCM0L.DP-NAME
  END-IF
  IF MLKPCM0L.ZK-ID NE 0 THEN
     MOVE MLKPCM0L.ZK-ID TO MBZKMN0A.ZK-ID
     MOVE "READ" TO MBZKMN0A.BL-COMMAND
     PERFORM MBZKMN0S XXERX00A XXCTXX0A MBZKMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE BY NAME MBZKMN0A TO MLKPCM0L
     MOVE MBZKMN0A.ZK-CODE TO MLKPCM0L.ZK-SEARCH
  END-IF
  IF MLKPCM0L.MT-ID NE 0 THEN
     MOVE MLKPCM0L.MT-ID TO MBMTMN0A.MT-ID
     MOVE "READ" TO MBMTMN0A.BL-COMMAND
     PERFORM MBMTMN0S XXERX00A XXCTXX0A MBMTMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE MBMTMN0A.MT-CODE TO MLKPCM0L.MT-CODE
     MOVE MBMTMN0A.MT-CODE TO MLKPCM0L.MT-SEARCH
     MOVE MBMTMN0A.MT-NAME TO MLKPCM0L.MT-NAME
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE SCREEN-TO-OBJECT
  MOVE BY NAME MLKPCM0L TO MLKXCS0A
  IF MLKPCM0L.LK-DT-START-N NE 0 THEN
  MOVE EDITED MLKPCM0L.LK-DT-START-A TO MLKXCS0A.LK-DT-START (EM=YYYYMMDD)
END-IF
IF MLKPCM0L.LK-DT-STOP-N NE 0 THEN
  MOVE EDITED MLKPCM0L.LK-DT-STOP-A TO MLKXCS0A.LK-DT-STOP (EM=YYYYMMDD)
END-IF
IF MLKPCM0L.LK-DT-WORK-N NE 0 THEN
  MOVE EDITED MLKPCM0L.LK-DT-WORK-A TO MLKXCS0A.LK-DT-WORK (EM=YYYYMMDD)
END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE SCREEN-CHECK
  IF MLKPCM0L.LK-DT-WORK-N EQ 0 THEN
     INCLUDE XPDTCH0C "MLKPCM0L.LK-DT-START-N" "TRUE"
     INCLUDE XPDTCH0C "MLKPCM0L.LK-DT-STOP-N" "TRUE"
  ELSE
     INCLUDE XPDTCH0C "MLKPCM0L.LK-DT-START-N" "FALSE"
     INCLUDE XPDTCH0C "MLKPCM0L.LK-DT-STOP-N" "FALSE"
  END-IF
  IF MLKPCM0L.LK-DT-STOP-N < MLKPCM0L.LK-DT-START-N THEN
     CP-CURS-FIELD := POS(MLKPCM0L.LK-DT-STOP-N)
     RETURN-CODE := 2306
     ESCAPE ROUTINE
  END-IF
  IF MLKPCM0L.LK-DT-STOP-N EQ 0 THEN
     INCLUDE XPDTCH0C "MLKPCM0L.LK-DT-WORK-N" "TRUE"
  ELSE
     INCLUDE XPDTCH0C "MLKPCM0L.LK-DT-WORK-N" "FALSE"
  END-IF
  MOVE MLKPCM0L.MO-CODE TO CP-CHECK-SEARCH
  IF MLKPCM0L.MO-SEARCH NE CP-CHECK-SEARCH THEN
     MOVE "LOCATE" TO XPMOSH0A.SH-COMMAND
     PERFORM SEARCH-MO
     IF RETURN-CODE NE 0 THEN
        CP-CURS-FIELD := POS(MLKPCM0L.MO-SEARCH)
        ESCAPE ROUTINE END-IF
  END-IF
  MOVE MLKPCM0L.DP-CODE TO CP-CHECK-SEARCH
  IF MLKPCM0L.DP-SEARCH NE CP-CHECK-SEARCH THEN
     MOVE "LOCATE" TO XPDPSH0A.SH-COMMAND
     PERFORM SEARCH-DP
     IF RETURN-CODE NE 0 THEN
        CP-CURS-FIELD := POS(MLKPCM0L.DP-SEARCH)
        ESCAPE ROUTINE END-IF
  END-IF
  MOVE MLKPCM0L.ZK-CODE TO CP-CHECK-SEARCH
  IF MLKPCM0L.ZK-SEARCH NE CP-CHECK-SEARCH THEN
     MOVE "LOCATE" TO XPZKSH0A.SH-COMMAND
     PERFORM SEARCH-ZK
     IF RETURN-CODE NE 0 THEN
        CP-CURS-FIELD := POS(MLKPCM0L.ZK-SEARCH)
        ESCAPE ROUTINE END-IF
  END-IF
  MOVE MLKPCM0L.MT-CODE TO CP-CHECK-SEARCH
  IF MLKPCM0L.MT-SEARCH NE CP-CHECK-SEARCH THEN
     MOVE "LOCATE" TO XPMTSH0A.SH-COMMAND
     PERFORM SEARCH-MT
     IF RETURN-CODE NE 0 THEN
        CP-CURS-FIELD := POS(MLKPCM0L.MT-SEARCH)
        ESCAPE ROUTINE END-IF
  END-IF
  RESET STATUS
  IF STATE-IS-GE THEN
     STATUS := ">="
     RESET STATE-IS-GT STATE-IS-EQUAL STATE-IS-LT STATE-IS-ZERO
  END-IF
  IF STATE-IS-GT THEN
     STATUS := ">"
     RESET STATE-IS-GE STATE-IS-EQUAL STATE-IS-LT STATE-IS-ZERO
  END-IF
  IF STATE-IS-EQUAL THEN
     STATUS := "="
     RESET STATE-IS-GE STATE-IS-GT  STATE-IS-LT STATE-IS-ZERO
  END-IF
  IF STATE-IS-LT THEN
     STATUS := "<"
     RESET STATE-IS-GE STATE-IS-GT STATE-IS-EQUAL STATE-IS-ZERO
  END-IF
  IF STATE-IS-ZERO THEN
     STATUS := "0"
     RESET STATE-IS-GE STATE-IS-GT STATE-IS-EQUAL STATE-IS-LT
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE OBJECT-SELECT
  IF CP-CURS-FIELD EQ POS(MLKPCM0L.MO-SEARCH) THEN
     MOVE "SELECT" TO XPMOSH0A.SH-COMMAND
     PERFORM SEARCH-MO
     IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
  END-IF
  IF CP-CURS-FIELD EQ POS(MLKPCM0L.DP-SEARCH) THEN
     MOVE "SELECT" TO XPMOSH0A.SH-COMMAND
     PERFORM SEARCH-DP
     IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
  END-IF
  IF CP-CURS-FIELD EQ POS(MLKPCM0L.ZK-SEARCH) THEN
     MOVE "SELECT" TO XPZKSH0A.SH-COMMAND
     PERFORM SEARCH-ZK
     IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
  END-IF
  IF CP-CURS-FIELD EQ POS(MLKPCM0L.MT-SEARCH) THEN
     MOVE "SELECT" TO XPMTSH0A.SH-COMMAND
     PERFORM SEARCH-MT
     IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE SEARCH-MO
  IF XPMOSH0A.SH-COMMAND EQ "LOCATE" AND
     MLKPCM0L.MO-SEARCH EQ " " THEN
     RESET MLKPCM0L.MO-ID MLKPCM0L.MO-CODE
           MLKPCM0L.MO-NAME MLKPCM0L.MO-SEARCH
     ESCAPE ROUTINE
  END-IF
  RESET XPMOSH0A.MO-ID
  MOVE MLKPCM0L.MO-SEARCH TO XPMOSH0A.MO-SEARCH
  PERFORM XPMOSH0S XXERX00A XXCTXX0A XPMOSH0A
  IF RETURN-CODE EQ 0 AND XPMOSH0A.MO-ID NE 0 THEN
     MOVE XPMOSH0A.MO-ID TO MLKPCM0L.MO-ID
     MOVE XPMOSH0A.MO-CODE TO MLKPCM0L.MO-CODE
     MOVE XPMOSH0A.MO-NAME TO MLKPCM0L.MO-NAME
     MOVE XPMOSH0A.MO-CODE TO MLKPCM0L.MO-SEARCH
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE SEARCH-DP
  IF XPDPSH0A.SH-COMMAND EQ "LOCATE" AND
     MLKPCM0L.DP-SEARCH EQ " " THEN
     RESET MLKPCM0L.DP-ID MLKPCM0L.DP-CODE
           MLKPCM0L.DP-NAME MLKPCM0L.DP-SEARCH
     ESCAPE ROUTINE
  END-IF
  RESET XPDPSH0A.DP-ID
  MOVE MLKPCM0L.DP-SEARCH TO XPDPSH0A.DP-SEARCH
  PERFORM XPDPSH0S XXERX00A XXCTXX0A XPDPSH0A
  IF RETURN-CODE EQ 0 AND XPDPSH0A.DP-ID NE 0 THEN
     MOVE XPDPSH0A.DP-ID TO MLKPCM0L.DP-ID
     MOVE XPDPSH0A.DP-CODE TO MLKPCM0L.DP-CODE
     MOVE XPDPSH0A.DP-NAME TO MLKPCM0L.DP-NAME
     MOVE XPDPSH0A.DP-CODE TO MLKPCM0L.DP-SEARCH
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE SEARCH-ZK
  IF XPZKSH0A.SH-COMMAND EQ "LOCATE" AND
     MLKPCM0L.ZK-SEARCH EQ " " THEN
     RESET MLKPCM0L.ZK-ID MLKPCM0L.ZK-CODE
           MLKPCM0L.ZK-NAME MLKPCM0L.ZK-SEARCH
     ESCAPE ROUTINE
  END-IF
  RESET XPZKSH0A.ZK-ID
  MOVE MLKPCM0L.ZK-SEARCH TO XPZKSH0A.ZK-SEARCH
  PERFORM XPZKSH0S XXERX00A XXCTXX0A XPZKSH0A
  IF RETURN-CODE EQ 0 AND XPZKSH0A.ZK-ID NE 0 THEN
     MOVE XPZKSH0A.ZK-ID TO MLKPCM0L.ZK-ID
     MOVE XPZKSH0A.ZK-CODE TO MLKPCM0L.ZK-CODE
     MOVE XPZKSH0A.ZK-NAME TO MLKPCM0L.ZK-NAME
     MOVE XPZKSH0A.ZK-CODE TO MLKPCM0L.ZK-SEARCH
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE SEARCH-MT
  IF XPMTSH0A.SH-COMMAND EQ "LOCATE" AND
     MLKPCM0L.MT-SEARCH EQ " " THEN
     RESET MLKPCM0L.MT-ID MLKPCM0L.MT-CODE MLKPCM0L.MT-NAME
     ESCAPE ROUTINE
  END-IF
  RESET MBMTMN0A.MT-ID
  MOVE MLKPCM0L.MT-SEARCH TO XPMTSH0A.MT-SEARCH
  PERFORM XPMTSH0S XXERX00A XXCTXX0A XPMTSH0A MBMTMN0A
  IF RETURN-CODE NE 0 THEN ESCAPE ROUTINE END-IF
  IF MBMTMN0A.MT-ID NE 0 THEN
     MOVE MBMTMN0A.MT-ID TO MLKPCM0L.MT-ID
     MOVE MBMTMN0A.MT-CODE TO MLKPCM0L.MT-CODE
     MOVE MBMTMN0A.MT-CODE TO MLKPCM0L.MT-SEARCH
     MOVE MBMTMN0A.MT-NAME TO MLKPCM0L.MT-NAME
  END-IF
END-SUBROUTINE
/*
INCLUDE XXERSY1C
END-SUBROUTINE
END
