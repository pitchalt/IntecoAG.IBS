* >Natural Source Header 000000 /*<RO>>
* :NatName READOSTP
* :UID ARMK523
* :Mode S
* :CP
* :Date 20090504
* :Time 1611000
* <Natural Source Header /*<<RO>
DEFINE DATA
LOCAL USING XXERX00A
LOCAL USING XXCTXX0A
LOCAL USING XABOXX0A
/*
LOCAL USING UXCSXX0A
/*
LOCAL USING XXXXEC0L
/*
LOCAL USING DOCUMENT
/*
LOCAL USING MBMOMN0A
LOCAL USING MBZKMN0A
LOCAL USING MBSASH0A
LOCAL USING MBMTMN0A
LOCAL USING MBSAST0A
LOCAL USING MBSAST0L
LOCAL USING MBEIMN0A
LOCAL USING UBITMN0A
LOCAL USING XPMXXX1A
LOCAL USING MBSARK0A
LOCAL USING MBPRMN0A
LOCAL USING XPPBXX0A
LOCAL
1 #RECORD
2 MO-CODE (N5)
2 BS-CODE (N5)
2 GR-CODE (N5)
2 MT-CODE (A22)
2 DT-ID   (N8)
2 KP-ND   (N11)
2 KP-STR  (N3)
2 MO-CODE2 (N5)
2 ZACNUM  (A15)
2 BASE-COL (N9.6)
2 BALC-SUMMA (N13.6)
LOCAL
1 #I       (I4)
1 #COMPARE
2 COMPARE-KEY (A56)
2 REDEFINE COMPARE-KEY
3 MO-CODE   (N5)
3 MT-CODE   (A22)
3 KP-ND     (N11)
3 KP-STR    (N3)
3 PR-ID     (N15)
2 BUH-COL   (P8.7)
2 BUH-SUMMA (P13.2)
2 ARMK-COL   (P8.7)
2 ARMK-SUMMA (P13.2)
/*
1 #COMPARE2
2 COMPARE-KEY-G
3 MO-CODE   (N5)
3 MT-CODE   (A22)
3 KP-ND     (N11)
3 KP-STR    (N3)
3 PR-ID     (N15)
2 REDEFINE COMPARE-KEY-G
3 COMPARE-KEY (A56)
2 BUH-COL   (P8.7)
2 BUH-SUMMA (P13.2)
2 ARMK-COL   (P8.7)
2 ARMK-SUMMA (P13.2)
2 DC-NUMBER (N6)
2 DC-DATE   (N8)
END-DEFINE
XXCTXX0A.US-MO-ID := 0
XXCTXX0A.OG-ID := 1000
XXCTXX0A.VO-OG-ID := 1000
XXCTXX0A.MO-OG-ID := 1000
XXCTXX0A.MT-OG-ID := 1000
XXCTXX0A.GM-OG-ID := 1000
XXCTXX0A.IS-OP-DEBUG := FALSE
XXCTXX0A.IS-OP-CALC-DEBUG := FALSE
/*
  RESET XXERX00A
  MOVE 121    TO MBSASH0A.IT-ID(1)
  MOVE 124    TO MBSASH0A.IT-ID(2)
/*  MOVE 123    TO MBSASH0A.IT-ID(3)
/*  MOVE 124    TO MBSASH0A.IT-ID(4)
/*  MOVE 125    TO MBSASH0A.IT-ID(5)
  MOVE 902    TO MBSASH0A.SA-DT-ATTR-ID
/*
  INCLUDE XPCPRS0C
/* COMMON COMMAND
  INCLUDE XPCKAD0C "'EXIT'"    "'EXIT'"   "'PF3'"  '"Выход"'
  INCLUDE XPCKAD0C "'EXIT'"    "'EXIT'"   "'CLR'"  '"Выход"'
  INCLUDE XPCKAD0C "'SELECT'"  "' '"      "'PF11'" '"Bыбор"'
  INCLUDE XPCKAD0C "'CHECK'"   "' '"      "'ENTR'" '"Провр"'
  INCLUDE XPCKAD0C "'FIND'"    "'EXPORT'" "'PF5'"  '"Далее"'
  MOVE 'Выгрузка остатков' TO MX-FUNCTION-NAME
  MOVE "NEW" TO XPMXXX1A.MX-COMMAND
  PERFORM MPSARK0S XXERX00A XXCTXX0A XPMXXX1A MBSASH0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  IF BM-COMMAND-PROCESS EQ "EXIT" THEN ESCAPE ROUTINE END-IF
/*
  PERFORM SALDO-STACK-INIT
  /* читаем лимит остатков
  MOVE "SEARCH" TO MBSASH0A.BL-COMMAND
  PERFORM MBSASH3S XXERX00A XXCTXX0A MBSASH0A MBSAST0A UXCSXX0A
/*  WRITE 'limit' RETURN-CODE mbsash0a.PR-ID mbsash0a.PRIH-COL mbsash0a.PRIH-EI-ID mbsash0a.BASE-COL mbsash0a.BASE-EI-ID mbsash0a.BALC-SUMMA
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  IF MBSAST0A.STACK-LEN EQ 0 THEN
     WRITE 'Данных не найдено'
     PERFORM SALDO-STACK-FREE
/*     RETURN-CODE := 2412
     ESCAPE ROUTINE
  END-IF
  INCLUDE XPPBIN0C "MBSAST0A.STACK-LEN" '"Выгрузка сальдо"'
  FOR #I = 1 TO MBSAST0A.STACK-LEN
     MOVE #I TO MBSAST0L.STACK-POS PERFORM SALDO-READ
     IF RETURN-CODE NE 0 THEN *ERROR-NR := RETURN-CODE END-IF
     INCLUDE XPPBST0C "#I"
     /*
     IF MBSAST0L.PR-ID NE 0 THEN
        MOVE MBSAST0L.PR-ID TO MBPRMN0A.PR-ID
        MOVE "READ" TO MBPRMN0A.BL-COMMAND
        PERFORM MBPRMN0S XXERX00A XXCTXX0A MBPRMN0A
        IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     ELSE
        RESET MBPRMN0A
     END-IF
     /*
     IF MBSAST0L.MT-ID NE 0 THEN
       MOVE MBSAST0L.MT-ID TO MBMTMN0A.MT-ID
       MOVE "READ" TO MBMTMN0A.BL-COMMAND
       PERFORM MBMTMN0S XXERX00A XXCTXX0A MBMTMN0A
       IF ERROR-NUMBER EQ EC-OBJECT-NOT-FOUND THEN
         WRITE 'MATEPИAЛ HE HAЙДEH' MBMTMN0A.MT-ID
         RESET MBMTMN0A
       ELSE
        IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
       END-IF
     ELSE
       RESET MBMTMN0A
     END-IF
     /*
     IF MBSAST0L.MO-ID NE 0 THEN
     MOVE MBSAST0L.MO-ID TO MBMOMN0A.MO-ID
     MOVE "READ" TO MBMOMN0A.BL-COMMAND
     PERFORM MBMOMN0S XXERX00A XXCTXX0A MBMOMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     ELSE RESET MBMOMN0A
     END-IF
     /*
     RESET #COMPARE
     /*
/*   IF MBMTMN0A.MT-CODE EQ "302884" THEN
/*      WRITE MBSAST0L.MO-ID MBSAST0L.MT-ID MBSAST0L.PR-ID
/*            MBSAST0L.BASE-COL
/*   END-IF
     MOVE MBSAST0L.PR-ID TO #COMPARE.PR-ID
     MOVE MBMOMN0A.MO-CODE TO #COMPARE.MO-CODE
     MOVE MBMTMN0A.MT-CODE TO #COMPARE.MT-CODE
     MOVE MBPRMN0A.PR-ASUM-INT-NUM TO #COMPARE.KP-ND
     MOVE MBPRMN0A.PR-ASUM-LINE TO #COMPARE.KP-STR
     MOVE MBSAST0L.BASE-COL   TO #COMPARE.ARMK-COL
     MOVE MBSAST0L.BALC-SUMMA TO #COMPARE.ARMK-SUMMA
     WRITE WORK FILE 3 #COMPARE
     MOVE BY NAME #COMPARE TO #COMPARE2
     WRITE WORK FILE 9 #COMPARE2
  END-FOR
  PERFORM SALDO-STACK-FREE
/* Считаем остатки ASUM из рабочего файла
READ WORK FILE 7 #RECORD
     /*
     RESET #COMPARE
     /*
     MOVE #RECORD.MO-CODE TO #COMPARE.MO-CODE
     MOVE #RECORD.MT-CODE TO #COMPARE.MT-CODE
     MOVE #RECORD.KP-ND TO #COMPARE.KP-ND
     MOVE #RECORD.KP-STR TO #COMPARE.KP-STR
     MOVE #RECORD.BASE-COL   TO #COMPARE.BUH-COL
     MOVE #RECORD.BALC-SUMMA TO #COMPARE.BUH-SUMMA
     RESET MBPRMN0A
     MOVE #RECORD.KP-ND TO MBPRMN0A.PR-ASUM-INT-NUM
     MOVE #RECORD.KP-STR TO MBPRMN0A.PR-ASUM-LINE
     MOVE "LOCATE" TO MBPRMN0A.BL-COMMAND
     PERFORM MBPRMN0S XXERX00A XXCTXX0A MBPRMN0A
     IF RETURN-CODE EQ 0 THEN
        MOVE MBPRMN0A.PR-ID TO #COMPARE.PR-ID
     END-IF
     WRITE WORK FILE 3 #COMPARE
END-WORK
/*
CLOSE WORK FILE 7
CLOSE WORK FILE 3
/*
READ WORK FILE 3 #COMPARE
END-ALL
SORT #COMPARE.COMPARE-KEY USING #COMPARE.BUH-COL #COMPARE.BUH-SUMMA
              #COMPARE.ARMK-COL #COMPARE.ARMK-SUMMA
  AT BREAK #COMPARE.COMPARE-KEY
     MOVE OLD(#COMPARE.COMPARE-KEY) TO #COMPARE2.COMPARE-KEY
     MOVE SUM(#COMPARE.BUH-COL)  TO #COMPARE2.BUH-COL
     MOVE SUM(#COMPARE.BUH-SUMMA)  TO #COMPARE2.BUH-SUMMA
     MOVE SUM(#COMPARE.ARMK-COL)  TO #COMPARE2.ARMK-COL
     MOVE SUM(#COMPARE.ARMK-SUMMA)  TO #COMPARE2.ARMK-SUMMA
     IF #COMPARE2.BUH-COL NE #COMPARE2.ARMK-COL OR
        #COMPARE2.BUH-SUMMA NE #COMPARE2.ARMK-SUMMA THEN
        RESET DOCUMENT
        FIND DOCUMENT WITH NUM_ZAP EQ #COMPARE2.KP-ND
           MOVE ND-F TO #COMPARE2.DC-NUMBER
           MOVE DT-F TO #COMPARE2.DC-DATE
        END-FIND
        WRITE WORK FILE 7 #COMPARE2
     END-IF
  END-BREAK
END-SORT
CLOSE WORK FILE 7
/*
INCLUDE XXSTMN4C "MBSAST0A" "MBSAST0L-CONST" "MBSAST0L"
        "SALDO-STACK-INIT" "SALDO-STACK-FREE" "SALDO-STACK-REALLOC"
        "SALDO-PUSH" "SALDO-READ" "SALDO-WRITE" "SALDO-LOCATE"
/*
DEFINE SUBROUTINE ERROR-RECOVER
  PERFORM SALDO-STACK-FREE
  CLOSE WORK FILE 7
  PERFORM XPERVW0S XXERX00A
END-SUBROUTINE
/*
INCLUDE XXERSY2C
END
