* >Natural Source Header 000000 /*<RO>>
* :NatName UDODOC0S
* :UID PAUL
* :Mode S
* :CP
* :Date 20061120
* :Time 2243000
* <Natural Source Header /*<<RO>
/***********************************************************************
/*
/* —»—“≈Ã¿:
/* œ–Œ√–¿ÃÃ¿:
/*
/* –¿«–¿¡Œ“◊» :  ”«Œ–»Õ œ.¿.
/* ƒ¿“¿ ¬€œ”— ¿:
/*
/* Õ¿«¬¿Õ»≈:  ”–Œ¬≈Õ‹ ƒ¿ÕÕ€’ –¿¡Œ“¿ — «¿œ»—‹ﬁ Œœ»—¿Õ»ﬂ «¿œ»—» ƒŒ ”Ã≈Õ“¿
/*
/*  ŒÃ¿Õƒ€:
/*   SET
/*   READ
/*
/* »—œ–¿¬À≈Õ»ﬂ:
/*
/***********************************************************************
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING UDODOC0A
/*
LOCAL USING XXXXEC0L
LOCAL USING UXXXEC0L
LOCAL USING UXMRXX0L
LOCAL USING UDODOC0L
/*
LOCAL
1 #I       (I4)
1 #POS1    (I4)
1 #POS2    (I4)
END-DEFINE
DEFINE SUBROUTINE UDODOC0S
RESET XXERX00A
/*
PERFORM RECORD-PREPARE
/*
DECIDE ON FIRST VALUE DL-COMMAND
VALUE 'SET'
  PERFORM RECORD-SET
  PERFORM RECORD-READ
VALUE 'READ'
  PERFORM RECORD-READ
NONE VALUE
  MOVE DL-COMMAND TO ERROR-ADDITION(1)
  *ERROR-NR := EC-UNKNOW-COMMAND
END-DECIDE
/*
DEFINE SUBROUTINE RECORD-PREPARE
  IF UDODOC0A.OD-ID EQ 0 THEN *ERROR-NR := EC-OBJECT-ID-REQUIRED END-IF
  IF UDODOC0A.DD-ID EQ 0 THEN *ERROR-NR := EC-OBJECT-ID-REQUIRED END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-READ
  MOVE BY NAME UDODOC0A TO OC-OD-DD-SUPER-G(1)
  MOVE BY NAME UDODOC0A TO OC-OD-DD-SUPER-G(2)
  MOVE 0 TO OC-OD-DD-SUPER.OC-SEQ-NUM(1)
  MOVE 999 TO OC-OD-DD-SUPER.OC-SEQ-NUM(2)
  RESET UDODOC0A.OC-C UDODOC0A.OC-G(*)
  RESET UDODOC0A.OD-RULE-POS-C UDODOC0A.OD-RULE-POS-LIST(*)
  READ UR-OPER-CODE-VIEW LOGICAL SEQUENCE BY OC-OD-DD-SUPER
                         STARTING FROM OC-OD-DD-SUPER(1)
     IF UDODOC0A.OD-ID NE UR-OPER-CODE-VIEW.OD-ID OR
        UDODOC0A.DD-ID NE UR-OPER-CODE-VIEW.DD-ID THEN
        ESCAPE BOTTOM
     END-IF
     IF *COUNTER EQ 1 THEN
        MOVE 1 TO UDODOC0A.OC-C
        MOVE UR-OPER-CODE-VIEW.OD-RULE-POS-LIST(*) TO
              UDODOC0A.OD-RULE-POS-LIST(*)
        MOVE C*OD-RULE-POS-LIST TO UDODOC0A.OD-RULE-POS-C
     END-IF
     #POS1 := C*OC-G
     #POS2 := UDODOC0A.OC-C + C*OC-G - 1
/*     WRITE UDODOC0A-OC-C #POS1 #POS2
     MOVE BY NAME UR-OPER-CODE-VIEW.OC-G(1:#POS1) TO
                  UDODOC0A.OC-G(UDODOC0A-OC-C:#POS2)
     ADD C*OC-G TO UDODOC0A.OC-C
  END-READ
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-SET
  MOVE BY NAME UDODOC0A TO OC-OD-DD-SUPER-G(1)
  FOR #I = 1 TO 4
     #POS1 := (#I - 1) * 128 + 1
     MOVE #I TO OC-OD-DD-SUPER.OC-SEQ-NUM(1)
FL1.
     FIND UR-OPER-CODE-VIEW WITH OC-OD-DD-SUPER EQ OC-OD-DD-SUPER(1)
        IF NO RECORD FOUND
           MOVE UDODOC0A.OD-ID TO UR-OPER-CODE-VIEW.OD-ID
           MOVE UDODOC0A.DD-ID TO UR-OPER-CODE-VIEW.DD-ID
        END-NOREC
        IF UDODOC0A.OC-CODE(#POS1) EQ ' ' THEN
           IF *NUMBER(FL1.) NE 0 THEN
              DELETE
           END-IF
           ESCAPE BOTTOM
        END-IF
        IF #I = 1 THEN
           MOVE UDODOC0A.OD-RULE-POS-LIST(*) TO
                UR-OPER-CODE-VIEW.OD-RULE-POS-LIST(*)
        ELSE
           RESET UR-OPER-CODE-VIEW.OD-RULE-POS-LIST(*)
        END-IF
        MOVE #I TO UR-OPER-CODE-VIEW.OC-SEQ-NUM
        MOVE BY NAME UDODOC0A.OC-G(#POS1:#POS1 + 127) TO
                     UR-OPER-CODE-VIEW.OC-G(1:128)
        IF *NUMBER(FL1.) EQ 0 THEN
           STORE UR-OPER-CODE-VIEW
        ELSE
           UPDATE
        END-IF
     END-FIND
  END-FOR
END-SUBROUTINE
/*
INCLUDE XXERSY1C
END-SUBROUTINE
END

