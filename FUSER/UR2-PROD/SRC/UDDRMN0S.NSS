* >Natural Source Header 000000 /*<RO>>
* :NatName UDDRMN0S
* :UID PAUL
* :Mode S
* :CP
* :Date 20100405
* :Time 1046000
* <Natural Source Header /*<<RO>
/***********************************************************************
/*
/* ÑÈÑÒÅÌÀ:
/* ÏÐÎÃÐÀÌÌÀ:
/*
/* ÐÀÇÐÀÁÎÒ×ÈÊ:  ÓÇÎÐÈÍ Ï.À.
/* ÄÀÒÀ ÂÛÏÓÑÊÀ:
/*
/* ÍÀÇÂÀÍÈÅ:  ÓÐÎÂÅÍÜ ÄÀÍÍÛÕ ÐÀÁÎÒÀ Ñ ÇÀÏÈÑÜÞ ÄÎÊÓÌÅÍÒÀ
/*
/* ÊÎÌÀÍÄÛ:
/*   READ
/*   HOLD
/*   ADD
/*   UPDATE
/*   DELETE
/*
/* ÈÑÏÐÀÂËÅÍÈß:
/*
/***********************************************************************
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING UDDRMN0A
/*
LOCAL USING XXXXEC0L
LOCAL USING UDXXID0L
LOCAL USING UDDRMN0L
/*
LOCAL
1 #I          (I4)
1 #J          (I4)
1 #K          (I4)
1 #L          (I4)
1 #M          (I4)
1 #NUMBER     (P10)
1 #IS-DELETED (L)
1 #IS-ADDED   (L)
1 #RECORDSET  (A8)
END-DEFINE
DEFINE SUBROUTINE UDDRMN0S
RESET XXERX00A
/*
PERFORM RECORD-PREPARE
/*
DECIDE ON FIRST VALUE DL-COMMAND
VALUE 'READ'
  PERFORM RECORD-READ
VALUE "READ-TR"
  PERFORM RECORD-READ
VALUE 'LOCATE'
  PERFORM RECORD-LOCATE
VALUE 'ADD'
  IF DD-TX-IS-REQUIRED THEN
     PERFORM RECORD-ADD
  ELSE
     PERFORM RECORD-ADD-DIRECT
  END-IF
VALUE 'UPDATE', 'HOLD', 'DELETE'
  IF DD-TX-IS-REQUIRED THEN
     PERFORM RECORD-PROCESS
  ELSE
     PERFORM RECORD-PROCESS-DIRECT
  END-IF
NONE VALUE
  MOVE DL-COMMAND TO ERROR-ADDITION(1)
  *ERROR-NR := EC-UNKNOW-COMMAND
END-DECIDE
/*
DEFINE SUBROUTINE RECORD-LOCATE
  RESET #J
  FOR #I = 1 TO 30
     IF UDDRMN0A.DR-AP-IS-INDEX(#I) AND
        UDDRMN0A.DR-AP-VALUE(#I) NE 0 THEN
        ADD 1 TO #J
        DR-AP-SUPER-G.DR-TYPE-ID(#J) := UDDRMN0A.DR-TYPE-ID
        DR-AP-SUPER-G.DR-AP-IS-INDEX(#J) := TRUE
        DR-AP-SUPER-G.DR-AP-ATTR-ID(#J) := UDDRMN0A.DR-AP-ATTR-ID(#I)
        DR-AP-SUPER-G.DR-AP-VALUE(#J) := UDDRMN0A.DR-AP-VALUE(#I)
     END-IF
  END-FOR
  RESET #K
  FOR #I = 1 TO 10
     IF UDDRMN0A.DR-AS-IS-INDEX(#I) AND
        UDDRMN0A.DR-AS-VALUE(#I) NE ' ' THEN
        ADD 1 TO #K
        DR-AS-SUPER-G.DR-TYPE-ID(#K) := UDDRMN0A.DR-TYPE-ID
        DR-AS-SUPER-G.DR-AS-IS-INDEX(#K) := TRUE
        DR-AS-SUPER-G.DR-AS-ATTR-ID(#K) := UDDRMN0A.DR-AS-ATTR-ID(#I)
        DR-AS-SUPER-G.DR-AS-VALUE(#K) := UDDRMN0A.DR-AS-VALUE(#I)
     END-IF
  END-FOR
  RESET #NUMBER
  IF #J = 0 AND #K = 0 THEN
     *ERROR-NR := EC-OBJECT-ATTRIBUTE-REQUIRED
  END-IF
  IF #J = 0 AND #K = 1 THEN
FR1. FIND NUMBER UR-DOC-DATA-VIEW
           WITH DR-AS-SUPER EQ DR-AS-SUPER(1)
           RETAIN AS 'UDDRMN0S'
       MOVE *NUMBER(FR1.) TO #NUMBER
       #L := 1 #M := 2
  END-IF
  IF #J = 0 AND #K = 2 THEN
FR2. FIND NUMBER UR-DOC-DATA-VIEW
           WITH DR-AS-SUPER EQ DR-AS-SUPER(1) AND
                DR-AS-SUPER EQ DR-AS-SUPER(2)
           RETAIN AS 'UDDRMN0S'
       MOVE *NUMBER(FR2.) TO #NUMBER
       #L := 1 #M := 3
  END-IF
  IF #J = 0 AND #K > 2 THEN
FR3. FIND NUMBER UR-DOC-DATA-VIEW
           WITH DR-AS-SUPER EQ DR-AS-SUPER(1) AND
                DR-AS-SUPER EQ DR-AS-SUPER(2) AND
                DR-AS-SUPER EQ DR-AS-SUPER(3)
           RETAIN AS 'UDDRMN0S'
       MOVE *NUMBER(FR3.) TO #NUMBER
       #L := 1 #M := 4
  END-IF
  IF #J = 1 AND #K = 0 THEN
FR4. FIND NUMBER UR-DOC-DATA-VIEW
           WITH DR-AP-SUPER EQ DR-AP-SUPER(1)
           RETAIN AS 'UDDRMN0S'
       MOVE *NUMBER(FR4.) TO #NUMBER
       #L := 2 #M := 1
  END-IF
  IF #J = 1 AND #K = 1 THEN
FR5. FIND NUMBER UR-DOC-DATA-VIEW
           WITH DR-AP-SUPER EQ DR-AP-SUPER(1) AND
                DR-AS-SUPER EQ DR-AS-SUPER(1)
           RETAIN AS 'UDDRMN0S'
       MOVE *NUMBER(FR5.) TO #NUMBER
       #L := 2 #M := 2
/*       WRITE *PROGRAM #NUMBER /
/*       DR-AS-SUPER-G.DR-TYPE-ID (1)
/*       DR-AS-SUPER-G.DR-AS-IS-INDEX   (1)
/*       DR-AS-SUPER-G.DR-AS-ATTR-ID (1)
/*       DR-AS-SUPER-G.DR-AS-VALUE (1) /
/*       DR-AP-SUPER-G.DR-TYPE-ID (1)
/*       DR-AP-SUPER-G.DR-AP-IS-INDEX (1)
/*       DR-AP-SUPER-G.DR-AP-ATTR-ID  (1)
/*       DR-AP-SUPER-G.DR-AP-VALUE (1)
  END-IF
  IF #J = 1 AND #K > 1 THEN
FR6. FIND NUMBER UR-DOC-DATA-VIEW
           WITH DR-AP-SUPER EQ DR-AP-SUPER(1) AND
                DR-AS-SUPER EQ DR-AS-SUPER(1) AND
                DR-AS-SUPER EQ DR-AS-SUPER(2)
           RETAIN AS 'UDDRMN0S'
       MOVE *NUMBER(FR6.) TO #NUMBER
       #L := 2 #M := 3
  END-IF
  IF #J = 2 AND #K = 0 THEN
FR7. FIND NUMBER UR-DOC-DATA-VIEW
           WITH DR-AP-SUPER EQ DR-AP-SUPER(1) AND
                DR-AP-SUPER EQ DR-AP-SUPER(2)
           RETAIN AS 'UDDRMN0S'
       MOVE *NUMBER(FR7.) TO #NUMBER
       #L := 3 #M := 1
  END-IF
  IF #J > 1 AND #K = 1 THEN
FR8. FIND NUMBER UR-DOC-DATA-VIEW
           WITH DR-AP-SUPER EQ DR-AP-SUPER(1) AND
                DR-AP-SUPER EQ DR-AP-SUPER(2) AND
                DR-AS-SUPER EQ DR-AS-SUPER(1)
           RETAIN AS 'UDDRMN0S'
       MOVE *NUMBER(FR8.) TO #NUMBER
       #L := 3 #M := 2
  END-IF
  IF #J > 2 AND #K = 0 THEN
FR9. FIND NUMBER UR-DOC-DATA-VIEW
           WITH DR-AP-SUPER EQ DR-AP-SUPER(1) AND
                DR-AP-SUPER EQ DR-AP-SUPER(2) AND
                DR-AP-SUPER EQ DR-AP-SUPER(3)
           RETAIN AS 'UDDRMN0S'
       MOVE *NUMBER(FR9.) TO #NUMBER
       #L := 4 #M := 1
  END-IF
  IF #J > 1 AND #K > 1 THEN
FR10. FIND NUMBER UR-DOC-DATA-VIEW
           WITH DR-AP-SUPER EQ DR-AP-SUPER(1) AND
                DR-AP-SUPER EQ DR-AP-SUPER(2) AND
                DR-AS-SUPER EQ DR-AS-SUPER(1) AND
                DR-AS-SUPER EQ DR-AS-SUPER(2)
           RETAIN AS 'UDDRMN0S'
       MOVE *NUMBER(FR10.) TO #NUMBER
       #L := 3 #M := 3
  END-IF
  IF #NUMBER = 0 THEN
     RETURN-CODE := EC-OBJECT-NOT-FOUND
     ESCAPE ROUTINE
  END-IF
  FOR #I = #L TO #J
FR11.
     FIND NUMBER UR-DOC-DATA-VIEW
           WITH 'UDDRMN0S' AND DR-AP-SUPER EQ DR-AP-SUPER(#I)
           RETAIN AS 'UDDRMN0S'
     MOVE *NUMBER(FR11.) TO #NUMBER
     IF #NUMBER = 0 THEN
        RETURN-CODE := EC-OBJECT-NOT-FOUND
        ESCAPE ROUTINE
     END-IF
  END-FOR
  FOR #I = #M TO #K
FR12.
     FIND NUMBER UR-DOC-DATA-VIEW
           WITH 'UDDRMN0S' AND DR-AS-SUPER EQ DR-AS-SUPER(#I)
           RETAIN AS 'UDDRMN0S'
     MOVE *NUMBER(FR12.) TO #NUMBER
     IF #NUMBER = 0 THEN
        RETURN-CODE := EC-OBJECT-NOT-FOUND
        ESCAPE ROUTINE
     END-IF
  END-FOR
/*  WRITE 'LOCATE'
/*  FIND UR-DOC-DATA-VIEW WITH 'UDDRMN0S'
/*     WRITE UR-DOC-DATA-VIEW.OD-ID UR-DOC-DATA-VIEW.DR-ID
/* UR-DOC-DATA-VIEW.DR-TYPE-ID UR-DOC-DATA-VIEW.DR-LEVEL
/* UR-DOC-DATA-VIEW.DR-TX-STATUS UR-DOC-DATA-VIEW.DR-TX-CREATE-ID
/* UR-DOC-DATA-VIEW.DR-TX-CURRENT-ID
/*  END-FIND
FR13.
  FIND UR-DOC-DATA-VIEW WITH 'UDDRMN0S'
/*   IF *USER EQ "ARMK01" THEN WRITE UR-DOC-DATA-VIEW.DR-ID END-IF
/*   WRITE *PROGRAM *NUMBER(FR13.)
     IF *NUMBER(FR13.) > 2 THEN
        PERFORM RECORD-BACK
/*        *ERROR-NR := EC-RECORD-COUNT-MISMATCH
        RETURN-CODE := EC-RECORD-COUNT-MISMATCH
        ESCAPE ROUTINE
     END-IF
/*   WRITE *PROGRAM UR-DOC-DATA-VIEW.DR-ID
/* UR-DOC-DATA-VIEW.DR-TX-STATUS UDDRMN0A.TX-ID
/*  UR-DOC-DATA-VIEW.DR-TX-CREATE-ID
/*  UR-DOC-DATA-VIEW.DR-TX-CURRENT-ID
     DECIDE ON FIRST VALUE UR-DOC-DATA-VIEW.DR-TX-STATUS
        VALUE 'N'
/*         IF *USER NE "ARMK01" THEN
           IF *NUMBER(FR13.) NE 1 THEN
/*         WRITE *PROGRAM "N"
/*              *ERROR-NR := EC-RECORD-COUNT-MISMATCH
              PERFORM RECORD-BACK
              RETURN-CODE := EC-RECORD-COUNT-MISMATCH
              ESCAPE ROUTINE
           END-IF
/*         END-IF
           PERFORM RECORD-BACK
        VALUE 'D'
           IF UDDRMN0A.TX-ID EQ UR-DOC-DATA-VIEW.DR-TX-CURRENT-ID
              #IS-DELETED := TRUE
           ELSE
              PERFORM RECORD-BACK
           END-IF
        VALUE 'A'
           IF UDDRMN0A.TX-ID EQ UR-DOC-DATA-VIEW.DR-TX-CURRENT-ID
              PERFORM RECORD-BACK
              #IS-ADDED := TRUE
           ELSE
              RETURN-CODE := EC-OBJECT-NOT-FOUND
              ESCAPE ROUTINE
           END-IF
        NONE VALUE
           IGNORE
     END-DECIDE
     IF FALSE THEN UPDATE END-IF
  END-FIND
  IF #IS-DELETED AND NOT #IS-ADDED THEN
     RETURN-CODE := EC-OBJECT-NOT-FOUND
     ESCAPE ROUTINE
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-PREPARE
  IF UDDRMN0A.DR-TYPE-ID EQ 0 THEN
     *ERROR-NR := EC-RECORD-TYPE-REQUIRED
  END-IF
  IF UDDRMN0A.TX-ID EQ 0 AND DL-COMMAND NE 'READ' AND
     DD-TX-IS-REQUIRED THEN
     *ERROR-NR := EC-TRANSACTION-REQUIRED
  END-IF
  IF DL-COMMAND NE 'ADD' AND  DL-COMMAND NE 'LOCATE' THEN
     IF UDDRMN0A.DR-ID EQ 0 THEN
        *ERROR-NR := EC-OBJECT-ID-REQUIRED
     END-IF
     DR-ID-START.DR-ID := UDDRMN0A.DR-ID
     DR-ID-START.DR-TYPE-ID := UDDRMN0A.DR-TYPE-ID
     DR-ID-START.DR-TX-STATUS := H'00'
     DR-ID-STOP.DR-ID := UDDRMN0A.DR-ID
     DR-ID-STOP.DR-TYPE-ID := UDDRMN0A.DR-TYPE-ID
     DR-ID-STOP.DR-TX-STATUS := H'FF'
  END-IF
  IF DL-COMMAND EQ 'ADD' OR EQ 'UPDATE' THEN
     FOR #I = 1 TO 30
        IF UDDRMN0A.DR-AP-ATTR-ID(#I) EQ 0 THEN
           RESET UDDRMN0A.DR-AP-G(#I)
        END-IF
     END-FOR
     FOR #I = 1 TO 10
        IF UDDRMN0A.DR-AS-ATTR-ID(#I) EQ 0 THEN
           RESET UDDRMN0A.DR-AS-G(#I)
        END-IF
     END-FOR
     FOR #I = UDDRMN0A.DR-LEVEL TO 5
        UDDRMN0A.DR-UP-LEVEL-IDS(#I) := 0
     END-FOR
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-BACK
  MOVE BY NAME UR-DOC-DATA-VIEW TO UDDRMN0A
/*  WRITE *PROGRAM UR-DOC-DATA-VIEW.DR-AP-G(*)
  MOVE C*DR-AP-G TO UDDRMN0A.DR-AP-C
  MOVE C*DR-AS-G TO UDDRMN0A.DR-AS-C
  MOVE UR-DOC-DATA-VIEW.DR-ASUM-DOC(*) TO UDDRMN0A.ASUM-DOC(*)
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-READ
  RESET #NUMBER
FM1.
  FIND UR-DOC-DATA-VIEW WITH DR-ID-SUPER EQ DR-ID-START THRU DR-ID-STOP
     IF *NUMBER(FM1.) > 2 THEN
        *ERROR-NR := EC-RECORD-COUNT-MISMATCH
     END-IF
/* WRITE 'READ' UR-DOC-DATA-VIEW.DR-ID UR-DOC-DATA-VIEW.DR-TYPE-ID
/* UR-DOC-DATA-VIEW.DR-TX-STATUS UR-DOC-DATA-VIEW.DR-TX-CURRENT-ID /
/* UR-DOC-DATA-VIEW.DR-AP-ATTR-ID(1) UR-DOC-DATA-VIEW.DR-AP-VALUE(1) /
/* UR-DOC-DATA-VIEW.DR-AP-ATTR-ID(2) UR-DOC-DATA-VIEW.DR-AP-VALUE(2) /
/* UR-DOC-DATA-VIEW.DR-AP-ATTR-ID(3) UR-DOC-DATA-VIEW.DR-AP-VALUE(3)
     DECIDE ON FIRST VALUE UR-DOC-DATA-VIEW.DR-TX-STATUS
        VALUE 'N'
           IF *NUMBER(FM1.) NE 1 THEN
              *ERROR-NR := EC-RECORD-COUNT-MISMATCH
           END-IF
           PERFORM RECORD-BACK
           ADD 1 TO #NUMBER
        VALUE 'D'
           IF UDDRMN0A.TX-ID EQ UR-DOC-DATA-VIEW.DR-TX-CURRENT-ID
              #IS-DELETED := TRUE
           ELSE
              PERFORM RECORD-BACK
              ADD 1 TO #NUMBER
           END-IF
        VALUE 'A'
           IF UDDRMN0A.TX-ID EQ UR-DOC-DATA-VIEW.DR-TX-CURRENT-ID
              PERFORM RECORD-BACK
              #IS-ADDED := TRUE
              ADD 1 TO #NUMBER
           END-IF
        NONE VALUE
           IGNORE
     END-DECIDE
  END-FIND
  IF (#IS-DELETED AND NOT #IS-ADDED) OR #NUMBER EQ 0 THEN
     IF UDDRMN0A.DL-COMMAND NE "READ-TR" THEN
        MOVE UDDRMN0A.DR-ID TO ERROR-ADDITION(1)
        *ERROR-NR := EC-OBJECT-NOT-FOUND
     ELSE
        RETURN-CODE := EC-OBJECT-NOT-FOUND
        ESCAPE ROUTINE
     END-IF
  END-IF
  IF #NUMBER > 1 THEN
     *ERROR-NR := EC-RECORD-COUNT-MISMATCH
  END-IF
/*  WRITE *PROGRAM UR-DOC-DATA-VIEW.DR-COL-RECORD
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-PROCESS
FM3.
  FIND UR-DOC-DATA-VIEW WITH DR-ID-SUPER EQ DR-ID-START THRU DR-ID-STOP
     IF NO RECORD FOUND
        MOVE UDDRMN0A.DR-ID TO ERROR-ADDITION(1)
        *ERROR-NR := EC-OBJECT-NOT-FOUND
     END-NOREC
     IF *NUMBER(FM3.) > 2 THEN
        *ERROR-NR := EC-RECORD-COUNT-MISMATCH
     END-IF
     DECIDE ON FIRST VALUE UR-DOC-DATA-VIEW.DR-TX-STATUS
        VALUE 'N'
           IF *NUMBER(FM3.) NE 1 THEN
              *ERROR-NR := EC-RECORD-COUNT-MISMATCH
           END-IF
           IF DL-COMMAND EQ 'UPDATE' OR EQ 'DELETE' THEN
              MOVE 'D' TO UR-DOC-DATA-VIEW.DR-TX-STATUS
              MOVE UDDRMN0A.TX-ID TO UR-DOC-DATA-VIEW.DR-TX-CURRENT-ID
              UPDATE
           END-IF
           IF DL-COMMAND EQ 'UPDATE' THEN
              MOVE BY NAME UDDRMN0A TO UR-DOC-DATA-VIEW
              MOVE 'A' TO UR-DOC-DATA-VIEW.DR-TX-STATUS
              MOVE UDDRMN0A.TX-ID TO UR-DOC-DATA-VIEW.DR-TX-CREATE-ID
              MOVE UDDRMN0A.TX-ID TO UR-DOC-DATA-VIEW.DR-TX-CURRENT-ID
SM2.
              STORE UR-DOC-DATA-VIEW
              GET UR-DOC-DATA-VIEW *ISN(SM2.)
              PERFORM RECORD-BACK
           END-IF
           IF DL-COMMAND EQ 'HOLD'
              PERFORM RECORD-BACK
           END-IF
        VALUE 'D'
           IF UDDRMN0A.TX-ID EQ UR-DOC-DATA-VIEW.DR-TX-CURRENT-ID
              #IS-DELETED := TRUE
           ELSE
              *ERROR-NR := EC-TRANSACTION-CONFLICT
           END-IF
        VALUE 'A'
           IF UDDRMN0A.TX-ID EQ UR-DOC-DATA-VIEW.DR-TX-CURRENT-ID
              IF DL-COMMAND EQ 'UPDATE' THEN
                 MOVE BY NAME UDDRMN0A TO UR-DOC-DATA-VIEW
                 UPDATE
                 GET UR-DOC-DATA-VIEW *ISN
                 PERFORM RECORD-BACK
              END-IF
              IF DL-COMMAND EQ 'DELETE' THEN
                 DELETE
              END-IF
              IF DL-COMMAND EQ 'HOLD' THEN
                 PERFORM RECORD-BACK
              END-IF
              #IS-ADDED := TRUE
           ELSE
              *ERROR-NR := EC-TRANSACTION-CONFLICT
           END-IF
        NONE VALUE
           IGNORE
     END-DECIDE
  END-FIND
  IF #IS-DELETED AND NOT #IS-ADDED THEN
     MOVE UDDRMN0A.DR-ID TO ERROR-ADDITION(1)
     *ERROR-NR := EC-OBJECT-NOT-FOUND
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-ADD
  RESET UR-DOC-DATA-VIEW
  MOVE BY NAME UDDRMN0A TO UR-DOC-DATA-VIEW
  MOVE 'A' TO UR-DOC-DATA-VIEW.DR-TX-STATUS
  MOVE UDDRMN0A.TX-ID TO UR-DOC-DATA-VIEW.DR-TX-CREATE-ID
  MOVE UDDRMN0A.TX-ID TO UR-DOC-DATA-VIEW.DR-TX-CURRENT-ID
SM1.
  STORE UR-DOC-DATA-VIEW
  IF UDDRMN0A.DR-ID EQ 0 THEN
     INCLUDE UDXXID0C 'UR-DOC-DATA-VIEW.DR-ID' '*ISN(SM1.)'
     UPDATE (SM1.)
  END-IF
  GET UR-DOC-DATA-VIEW *ISN(SM1.)
  PERFORM RECORD-BACK
/*  WRITE 'ADD' UR-DOC-DATA-VIEW.DR-ID UR-DOC-DATA-VIEW.DR-TYPE-ID
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-ADD-DIRECT
  RESET UR-DOC-DATA-VIEW
  MOVE BY NAME UDDRMN0A TO UR-DOC-DATA-VIEW
  MOVE 'N' TO UR-DOC-DATA-VIEW.DR-TX-STATUS
  MOVE UDDRMN0A.TX-ID TO UR-DOC-DATA-VIEW.DR-TX-CREATE-ID
  RESET UR-DOC-DATA-VIEW.DR-TX-CURRENT-ID
SM3.
  STORE UR-DOC-DATA-VIEW
  IF UDDRMN0A.DR-ID EQ 0 THEN
     INCLUDE UDXXID0C 'UR-DOC-DATA-VIEW.DR-ID' '*ISN(SM3.)'
     UPDATE (SM3.)
  END-IF
  GET UR-DOC-DATA-VIEW *ISN(SM3.)
  PERFORM RECORD-BACK
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-PROCESS-DIRECT
  DR-ID-START.DR-TX-STATUS := 'N'
  FIND UR-DOC-DATA-VIEW WITH DR-ID-SUPER EQ DR-ID-START
     IF NO RECORD FOUND
        MOVE UDDRMN0A.DR-ID TO ERROR-ADDITION(1)
        *ERROR-NR := EC-OBJECT-NOT-FOUND
     END-NOREC
     IF *NUMBER(FM3.) > 1 THEN
        *ERROR-NR := EC-RECORD-COUNT-MISMATCH
     END-IF
     DECIDE ON FIRST VALUE DL-COMMAND
        VALUE 'UPDATE'
           MOVE BY NAME UDDRMN0A TO UR-DOC-DATA-VIEW
           UPDATE
           GET UR-DOC-DATA-VIEW *ISN
           PERFORM RECORD-BACK
        VALUE 'DELETE'
           DELETE
        VALUE 'HOLD'
           PERFORM RECORD-BACK
        NONE VALUE
           IGNORE
     END-DECIDE
  END-FIND
END-SUBROUTINE
/*
INCLUDE XXERSY1C
END-SUBROUTINE
END
