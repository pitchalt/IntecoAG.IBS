* >Natural Source Header 000000 /*<RO>>
* :NatName READDR0P
* :UID ARMK01
* :Mode S
* :CP
* :Date 20070131
* :Time 0834000
* <Natural Source Header /*<<RO>
DEFINE DATA
LOCAL USING XXERX00A
/*LOCAL USING CXUSCT0A
/*LOCAL USING CXCLCT0A
LOCAL USING XXCTXX0A
LOCAL USING UDDRLS0L
LOCAL USING UXCSXX0A
LOCAL USING MBLKHM0A
LOCAL USING MBLKRM0A
LOCAL USING MBRLHM0A
LOCAL USING MBRLMM0A
LOCAL USING MBRLPM0A
LOCAL USING UETXMN0A
LOCAL USING MBMZMN0A
LOCAL USING XXXXEC0L
LOCAL USING XPPBXX0A
LOCAL
1 #DVL     (I4)
1 #CURRENT (I4)
1 #COUNT   (I4)
1 #TXC     (I4)
END-DEFINE
US-MO-ID := 0
OG-ID := 1000
VO-OG-ID := 1000
MO-OG-ID := 1000
MT-OG-ID := 1000
GM-OG-ID := 1000
XXCTXX0A.IS-OP-DEBUG := FALSE
XXCTXX0A.IS-OP-CALC-DEBUG := FALSE
READ UR-DOC-DATA-LIST IN PHYSICAL SEQUENCE
  ACCEPT (UR-DOC-DATA-LIST.DR-TX-STATUS EQ "N" ) AND
          UR-DOC-DATA-LIST.DR-SORT NE 0 AND
          UR-DOC-DATA-LIST.OD-ID NE 0
  IF UR-DOC-DATA-LIST.DR-TYPE-ID EQ 1703 THEN
/*     WRITE UR-DOC-DATA-LIST.DR-TYPE-ID UR-DOC-DATA-LIST.OD-ID
/*           UR-DOC-DATA-LIST.DR-SORT
     WRITE WORK FILE 1 UR-DOC-DATA-LIST.OD-ID UR-DOC-DATA-LIST.DR-ID
     ADD 1 TO #COUNT
  END-IF
END-READ
INCLUDE XPPBIN0C "#COUNT" '"Конвертаци  расходов"'
READ WORK FILE 1 UR-DOC-DATA-LIST.OD-ID UR-DOC-DATA-LIST.DR-ID
  ADD 1 TO #CURRENT
  INCLUDE XPPBST0C "#CURRENT"
  IF #TXC = 0 THEN
     MOVE "OPEN" TO UETXMN0A.ME-COMMAND
     PERFORM UITXMN0S XXERX00A XXCTXX0A UETXMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  END-IF
  ADD 1 TO #TXC
  MOVE UR-DOC-DATA-LIST.OD-ID TO XXCTXX0A.OD-ID
  IF XXCTXX0A.OD-ID EQ 353 THEN ADD 1 TO #DVL END-IF
  PERFORM UPDATE-RLX
  IF #TXC > 100 THEN
     RESET #TXC
     MOVE "COMMIT" TO UETXMN0A.ME-COMMAND
     PERFORM UITXMN0S XXERX00A XXCTXX0A UETXMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  END-IF
END-WORK
IF #TXC > 0 THEN
  MOVE "COMMIT" TO UETXMN0A.ME-COMMAND
  PERFORM UITXMN0S XXERX00A XXCTXX0A UETXMN0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
END-IF
/* WRITE #DVL
/*
DEFINE SUBROUTINE UPDATE-RLX
  MOVE UR-DOC-DATA-LIST.DR-ID TO MBRLPM0A.RLP-ID
  MOVE "READ" TO MBRLPM0A.BL-COMMAND
  PERFORM MBRLPM0S XXERX00A XXCTXX0A MBRLPM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE  END-IF
/*
  MOVE MBRLPM0A.RLM-ID TO MBRLMM0A.RLM-ID
  MOVE "READ" TO MBRLMM0A.BL-COMMAND
  PERFORM MBRLMM0S XXERX00A XXCTXX0A MBRLMM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE  END-IF
/*
  IF MBRLMM0A.MZ-ID NE 0 THEN
     MOVE MBRLMM0A.MZ-ID TO MBMZMN0A.MZ-ID
     MOVE "READ" TO MBMZMN0A.BL-COMMAND
     PERFORM MBMZMN0S XXERX00A XXCTXX0A MBMZMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE  END-IF
     IF MBMZMN0A.MZ-CHANGE-ID EQ 0 THEN
        MBMZMN0A.COL := 1
        MOVE "UPDATE" TO MBMZMN0A.BL-COMMAND
        PERFORM MBMZMN0S XXERX00A XXCTXX0A MBMZMN0A
        IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE  END-IF
     END-IF
  ELSE
     RESET MBMZMN0A
  END-IF
/*
  MOVE MBRLMM0A.RL-ID TO MBRLHM0A.RL-ID
  MOVE "READ" TO MBRLHM0A.BL-COMMAND
  PERFORM MBRLHM0S XXERX00A XXCTXX0A MBRLHM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE  END-IF
/*
  MOVE MBRLPM0A.LKR-ID TO MBLKRM0A.LKR-ID
  MOVE "READ" TO MBLKRM0A.BL-COMMAND
  PERFORM MBLKRM0S XXERX00A XXCTXX0A MBLKRM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE  END-IF
/*
  MOVE MBLKRM0A.LKH-ID TO MBLKHM0A.LK-ID
  MOVE "READ" TO MBLKHM0A.BL-COMMAND
  PERFORM MBLKHM0S XXERX00A XXCTXX0A MBLKHM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE  END-IF
/*
  MOVE "LOCK" TO MBLKHM0A.BL-COMMAND
  PERFORM MBLKHM0S XXERX00A XXCTXX0A MBLKHM0A UXCSXX0A
  IF RETURN-CODE EQ EC-OBJECT-ALREADY-LOCKED THEN
     WRITE "LZK LOCKED" MBLKHM0A.LK-NUMBER MBLKHM0A.LK-DATE
     ESCAPE ROUTINE
  END-IF
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE  END-IF
/*
  MOVE "LOCK" TO MBRLHM0A.BL-COMMAND
  PERFORM MBRLHM0S XXERX00A XXCTXX0A MBRLHM0A UXCSXX0A
  IF RETURN-CODE EQ EC-OBJECT-ALREADY-LOCKED THEN
     WRITE "RL LOCKED" MBRLHM0A.RL-NUMBER MBRLHM0A.RL-DATE
     ESCAPE ROUTINE
  END-IF
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE  END-IF
/*
  IF MBRLMM0A.MZ-ID NE 0 AND MBMZMN0A.MZ-CHANGE-ID EQ 0 THEN
     MOVE MBLKRM0A.BASE-COL TO MBLKRM0A.PLAN-COL
  END-IF
  MOVE "UPDATE" TO MBLKRM0A.BL-COMMAND
  PERFORM MBLKRM0S XXERX00A XXCTXX0A MBLKRM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE  END-IF
/*
  IF MBRLMM0A.MZ-ID NE 0 AND MBMZMN0A.MZ-CHANGE-ID EQ 0 THEN
     MOVE MBRLPM0A.BASE-COL TO MBRLPM0A.PLAN-COL
  END-IF
  MOVE "UPDATE" TO MBRLPM0A.BL-COMMAND
  PERFORM MBRLPM0S XXERX00A XXCTXX0A MBRLPM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE  END-IF
/*
/*  WRITE MBRLHM0A.RL-ID MBRLMM0A.RLM-ID MBRLPM0A.RLP-ID
/*        MBLKHM0A.LK-ID MBLKRM0A.LKR-ID
END-SUBROUTINE
DEFINE SUBROUTINE ERROR-RECOVER
  PERFORM XPERVW0S XXERX00A
  IF #TXC > 0 THEN
     MOVE "ROLLBACK" TO UETXMN0A.ME-COMMAND
     PERFORM UITXMN0S XXERX00A XXCTXX0A UETXMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  END-IF
END-SUBROUTINE
/*
INCLUDE XXERSY2C
END
