* >Natural Source Header 000000 /*<RO>>
* :NatName MBSODO0S
* :UID ARMK01
* :Mode S
* :CP
* :Date 20071211
* :Time 1147000
* <Natural Source Header /*<<RO>
/* √ŒÀŒ¬Õ¿ﬂ œ–Œ√–¿ÃÃ¿ «¿œŒÀÕ≈Õ»ﬂ Œ—ÕŒ¬ÕŒ√Œ —“≈ ¿ » ”œ–¿¬À≈Õ»ﬂ ¬—œŒÃŒ√¿“≈À‹Õ€Ã» —“≈ ¿Ã»
/* Õ¿ Œ—ÕŒ¬≈ Œœ»—¿Õ»ﬂ
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING XXCTXX0A
PARAMETER USING MBXXSS0A
PARAMETER USING MBSOST0A
PARAMETER USING MBXXOP0A
LOCAL USING MBXXDS0A
LOCAL USING MBXXOP0L
LOCAL USING MBXXDO0L
/*LOCAL USING CXXXS0CA
LOCAL USING MBSOST0L
LOCAL USING XPPBXX0A
/*
LOCAL USING XXXXEC0L
LOCAL USING MBXXDO1L
LOCAL
/*
1 #I (I4)
/* 1 #J (I4)
1 #RECORD-A (B8)
1 REDEFINE #RECORD-A
  2 #REC-1  (B4)
  2 #REC-2  (B4)
1 #K   (I4)
1 #VALUE-N    (N20/1:40)
1 REDEFINE #VALUE-N
  2 #VALUE-A (A20/1:40)
1 #VALUE-N1   (N16)
1 REDEFINE #VALUE-N1
  2 #VALUE-A1 (A16)
1 #KOL-POK    (I4)
1 #KOL-AN     (I4)
1 #KOL-EA     (I4)  /*  ŒÀ-¬Œ ›À≈Ã≈Õ“Œ¬ —“≈ ¿ œŒƒ ¿Õ¿À»“» »
1 #FLAG-A     (L)   INIT <FALSE>
1 #Q          (I4)
1 #W          (I2)
1 #EL-M       (I4)
1 #AN-ELEM    (I4)
1 #OUT-STEK   (B4)
1 #STEK       (B4)
1 #STACK      (I4)
/*
1 #STRING (A14)
1 REDEFINE #STRING
  2 #OP-ATTR   (A10)
  2 #OP-CODE-AT(P7)
1 #STRING1 (A14/1:20)
1 REDEFINE #STRING1
  2 STRUCT-A  (1:20)
  3 #OP-ATTR-A  (A10)
  3 #OP-CODE-AT-A (P7)
1 #POKAZAT7    (N15)
1 REDEFINE #POKAZAT7
  2 #POK-N7    (N8.7)
1 #POKAZAT2    (N15)
1 REDEFINE #POKAZAT2
  2 #POK-N2    (N13.2)
1 #BS-ID1  (N15)
1 REDEFINE #BS-ID1
2 BLANK (N5)
2 OG-ID1 (N5)
2 BS-ID1 (N5)
END-DEFINE
DEFINE SUBROUTINE MBSODO0S
 #BS-ID1.OG-ID1 := 1000
 #BS-ID1.BS-ID1 := 311
MOVE FALSE TO MBXXOP0A.OP-PRIZNAK(*)
/* ¬€◊»“€¬¿≈Ã Œœ»—¿Õ»≈
  MOVE 'LOCATE' TO MBXXOP0A.OP-COMMAND
  MOVE XXCTXX0A.OP-ID TO MBXXOP0A.OP-ID
  PERFORM MBXXOP0S XXERX00A MBXXOP0A
/*
INCLUDE MBXXDO0C /* ƒÀ»Õ¿ «¿œ»—»
/* ‡ÒÔÂ‰ÂÎÂÌËÂ ÒÚÂÍ‡
  EXAMINE MBXXSS0A.DS-TYPE-STEK(*) FOR 'ONCE' GIVING INDEX #STACK
  IF #STACK = 0 THEN
     CALL 'GTNX' #OUT-STEK
     ADD 1 TO MBXXSS0A.C-STACK
     #STACK := MBXXSS0A.C-STACK
     MOVE #OUT-STEK TO MBXXSS0A.STACK-NUMBER(#STACK)
     MOVE 'ONCE' TO MBXXSS0A.DS-TYPE-STEK(#STACK)
  ELSE
     MOVE MBXXSS0A.STACK-NUMBER(#STACK) TO #OUT-STEK
  END-IF
  MOVE MBXXDO0L.STACK-REC-LENR TO MBXXDO0L.STACK-FIELD-LEN
  MOVE MBSOST0A.STACK-LEN TO MBXXDO0L.STACK-FIELD-POS
  CALL 'GTSX' MBXXDO0L.STACK-FIELD-LEN MBXXDO0L.STACK-FIELD-POS #OUT-STEK
  MOVE MBSOST0A.STACK-LEN TO MBXXSS0A.STACK-COUNT(#STACK)
  RESET MBXXSS0A.STACK-LEN(#STACK)
/*
/* ◊»“¿≈Ã »—’ŒƒÕ€… —“≈ 
INCLUDE XPPBIN0C "MBSOST0A.STACK-LEN" '"–‡Ò¯ËÙÓ‚Í‡ ÒÔ‡‚Ó˜ÌËÍÓ‚"'
/*
FOR  MBSOST0L.STACK-POS-I = 1 TO MBSOST0A.STACK-LEN
  /*
  INCLUDE XPPBST0C "MBSOST0L.STACK-POS-I"
  /*
  MOVE  MBSOST0L.STACK-POS-I TO MBSOST0L.STACK-POS
  CALL "RWSX" MBSOST0L.STACK-POS MBSOST0L.STACK-REC-B(1) MBXXDO0L.STACK-READ
              MBSOST0A.STACK-NUMBER
/*  MOVE #BS-ID1 TO MBSOST0L.BS-ID
/*  IF MBSOST0L.PRIH-COL EQ 0 AND MBSOST0L.BASE-COL EQ 0 AND
/*     MBSOST0L.PLAN-COL EQ 0 AND MBSOST0L.BALC-SUMMA EQ 0 THEN
/*     ESCAPE TOP
/*  END-IF
  RESET MBXXDO0L.OS-NPP MBXXDO0L.OS-SORT
  RESET MBXXDO0L.ANALITIK(1:#KOL-AN)
  RESET MBXXDO0L.POKAZAT(#KOL-EA+1:75)
/*
  PERFORM RECORD-PACK
  IF MBXXDO1L.ATTR-COUNTER = 0 ESCAPE TOP END-IF
/***********************************************************************
/* Õ¿ Œ—ÕŒ¬¿Õ»» Œœ»—¿Õ»ﬂ ‘Œ–Ã»–”≈Ã ¿Õ¿À»“»◊≈— »≈ —“≈ »
/***********************************************************************
  FOR MBXXOP0A.OP-ID-ARRAY = 1 TO MBXXOP0L-CONST.OP-ARRAY-ELEM
     IF MBXXOP0A.OP-POR-NUMBER(OP-ID-ARRAY) = 0
        ESCAPE BOTTOM
     END-IF
     DECIDE ON FIRST VALUE MBXXOP0A.OP-ATTR-SHOT(OP-ID-ARRAY)
     VALUE "AN"
        PERFORM FIND-ELEM-STACK
        IF MBXXDS0A.SEARCH-ID NE 0
           MOVE TRUE TO MBXXOP0A.OP-PRIZNAK(OP-ID-ARRAY)
           MOVE MBXXOP0A.OP-TYPE-STEK(OP-ID-ARRAY) TO MBXXDS0A.OP-TYPE-STEK
           MOVE 'LOCATE' TO MBXXDS0A.DS-COMMAND
           PERFORM MBXXDS0S XXERX00A MBXXDS0A MBXXSS0A MBXXOP0A XXCTXX0A
           IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
           /* «¿œŒÀÕﬂ≈Ã «¿œ»—‹ ƒÀﬂ «¿œ»—» ¬ —“≈ 
           MOVE MBXXOP0A.OP-ID-ARRAY TO #K
           IF MBXXDS0A.DS-ELEM-STEK NE 0
              #EL-M := MBXXOP0A.OP-POR-NUMBER(#K)
              MOVE MBXXDS0A.DS-ELEM-STEK TO MBXXDO0L.ANALITIK(#EL-M)
           ELSE
              WRITE '›À≈Ã≈Õ“ Õ≈ Õ¿…ƒ≈Õ ¬ —“≈ ≈'
           END-IF
/*      ELSE
/*         WRITE 'O¯Ë·Í‡ ‚Ó ‚ıÓ‰ÌÓÏ Ì‡·ÓÂ.
/*         HÂ ÓÔÂ‰ÂÎÂÌ ‡ÚË·ÛÚ ‡Ì‡ÎËÚËÍË. '
        END-IF
     VALUE "EI" , "PK"
        #EL-M := (MBXXOP0A.OP-POR-NUMBER(OP-ID-ARRAY) - #KOL-AN) + #KOL-EA
        PERFORM FIND-ELEM-STACK
        MOVE MBXXDS0A.SEARCH-ID TO MBXXDO0L.POKAZAT(#EL-M)
     NONE VALUE
        WRITE 'Œÿ»¡ ¿ ¬ Œœ»—¿Õ»»!!!'
     END-DECIDE
  END-FOR
  /*
  /* «¿œŒÀÕ≈Õ»≈ Œ—ÕŒ¬ÕŒ√Œ —“≈ ¿
  MOVE MBXXSS0A.STACK-LEN(#STACK) TO MBXXDO0L.STACK-POS-I
  ADD 1 TO MBXXDO0L.STACK-POS-I
  MOVE MBXXDO0L.STACK-POS-I TO MBXXSS0A.STACK-LEN(#STACK)
  MOVE MBXXDO0L.STACK-POS-I TO MBXXDO0L.OS-NPP
  MOVE MBXXDO0L.STACK-POS-I TO MBXXDO0L.OS-SORT
  /*
  CALL 'RWSX' MBXXSS0A.STACK-LEN(#STACK) MBXXDO0L.STACK-REC-B(1)
        MBXXDO0L.STACK-WRITE  MBXXSS0A.STACK-NUMBER(#STACK)
END-FOR
/* Û‰‡ÎÂÌËÂ ‚ıÓ‰ÌÓ„Ó ÒÚÂÍ‡
CALL "FRSX" MBSOST0A.STACK-NUMBER
RESET MBSOST0A
/*
DEFINE SUBROUTINE FIND-ELEM-STACK
  RESET MBXXDS0A.SEARCH-ID #I
  MOVE MBXXOP0A.OP-CODE-AT(OP-ID-ARRAY) TO #OP-CODE-AT
  MOVE MBXXOP0A.OP-ATTR(OP-ID-ARRAY)    TO #OP-ATTR
  MOVE MBXXDO1L.ATTR-CODE(*)  TO #OP-CODE-AT-A(*)
  MOVE MBXXDO1L.OP-ATTR(*)    TO #OP-ATTR-A(*)
/*
  EXAMINE #STRING1(*) FOR #STRING GIVING INDEX #I
  IF #I NE 0
     MOVE ATTR-VALUE(#I) TO MBXXDS0A.SEARCH-ID
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-PACK
  RESET MBXXDO1L.ATTR-COUNTER MBXXDO1L.ATTR-G(*)
  INCLUDE MBXXDO2C "MBSOST0L.MO-ID" "10003" "'AN'"
  INCLUDE MBXXDO2C "MBSOST0L.MT-ID" "10050" "'AN'"
  INCLUDE MBXXDO2C "MBSOST0L.GM-ID" "10061" "'AN'"
  INCLUDE MBXXDO2C "MBSOST0L.PR-ID" "10060" "'AN'"
  INCLUDE MBXXDO2C "MBSOST0L.LK-ID" "10065" "'AN'"
  INCLUDE MBXXDO2C "MBSOST0L.ZK-ID" "10066" "'AN'"
  INCLUDE MBXXDO2C "MBSOST0L.BS-ID" "10009" "'AN'"
  INCLUDE MBXXDO2C "MBSOST0L.DF-ID" "10067" "'AN'"
  INCLUDE MBXXDO2C "MBSOST0L.BASE-EI-ID" "10103" "'EI'"
  MOVE MBSOST0L.BASE-COL-IN TO #POK-N7
  INCLUDE MBXXDO2C "#POKAZAT7" "10103" "'PK'"
  MOVE MBSOST0L.BASE-COL-OUT TO #POK-N7
  INCLUDE MBXXDO2C "#POKAZAT7" "10103" "'PK2'"
  MOVE MBSOST0L.BASE-COL-OP-D TO #POK-N7
  INCLUDE MBXXDO2C "#POKAZAT7" "10103" "'PK3'"
  MOVE MBSOST0L.BASE-COL-OP-K TO #POK-N7
  INCLUDE MBXXDO2C "#POKAZAT7" "10103" "'PK4'"
  INCLUDE MBXXDO2C "MBSOST0L.PRIH-EI-ID" "10102" "'EI'"
  MOVE MBSOST0L.PRIH-COL-IN TO #POK-N7
  INCLUDE MBXXDO2C "#POKAZAT7" "10102" "'PK1'"
  MOVE MBSOST0L.PRIH-COL-OUT TO #POK-N7
  INCLUDE MBXXDO2C "#POKAZAT7" "10102" "'PK2'"
  MOVE MBSOST0L.PRIH-COL-OP-D TO #POK-N7
  INCLUDE MBXXDO2C "#POKAZAT7" "10102" "'PK3'"
  MOVE MBSOST0L.PRIH-COL-OP-K TO #POK-N7
  INCLUDE MBXXDO2C "#POKAZAT7" "10102" "'PK4'"
  INCLUDE MBXXDO2C "MBSOST0L.PLAN-EI-ID" "10104" "'EI'"
  MOVE MBSOST0L.PLAN-COL-IN TO #POK-N7
  INCLUDE MBXXDO2C "#POKAZAT7" "10104" "'PK1'"
  MOVE MBSOST0L.PLAN-COL-OUT TO #POK-N7
  INCLUDE MBXXDO2C "#POKAZAT7" "10104" "'PK2'"
  MOVE MBSOST0L.PLAN-COL-OP-D TO #POK-N7
  INCLUDE MBXXDO2C "#POKAZAT7" "10104" "'PK3'"
  MOVE MBSOST0L.PLAN-COL-OP-K TO #POK-N7
  INCLUDE MBXXDO2C "#POKAZAT7" "10104" "'PK4'"
  MOVE MBSOST0L.BALC-SUMMA-IN TO #POK-N2
  INCLUDE MBXXDO2C "#POKAZAT2" "10105" "'PK1'"
  MOVE MBSOST0L.BALC-SUMMA-OUT TO #POK-N2
  INCLUDE MBXXDO2C "#POKAZAT2" "10105" "'PK2'"
  MOVE MBSOST0L.BALC-SUMMA-OP-D TO #POK-N2
  INCLUDE MBXXDO2C "#POKAZAT2" "10105" "'PK3'"
  MOVE MBSOST0L.BALC-SUMMA-OP-K TO #POK-N2
  INCLUDE MBXXDO2C "#POKAZAT2" "10105" "'PK4'"
  INCLUDE MBXXDO2C "MBSOST0L.IT-ID" "50000" "'AN'"
END-SUBROUTINE
INCLUDE XXERSY1C
END-SUBROUTINE
END
