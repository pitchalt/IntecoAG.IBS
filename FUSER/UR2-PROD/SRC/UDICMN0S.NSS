* >Natural Source Header 000000 /*<RO>>
* :NatName UDICMN0S
* :UID INTECO
* :Mode S
* :CP
* :Date 20000102
* :Time 0000000
* <Natural Source Header /*<<RO>
/***********************************************************************
/*
/* —»—“≈Ã¿:
/* œ–Œ√–¿ÃÃ¿:
/*
/* –¿«–¿¡Œ“◊» :  ”«Œ–»Õ œ.¿.
/* ƒ¿“¿ ¬€œ”— ¿:
/*
/* Õ¿«¬¿Õ»≈:  ”–Œ¬≈Õ‹ ƒ¿ÕÕ€’ –¿¡Œ“¿ —  Œ¡¡»Õ¿“Œ–ŒÃ ¿Õ¿À»“» »
/*
/*  ŒÃ¿Õƒ€:
/*   ADD
/*
/* »—œ–¿¬À≈Õ»ﬂ:
/*
/***********************************************************************
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING UDICMN0A
/*
LOCAL USING XXXXEC0L
LOCAL USING UXXXEC0L
LOCAL USING UDXXID0L
LOCAL USING UDICMN0L
/*
LOCAL
1 #I          (I4)
1 #J          (I4)
1 #K          (I4)
1 #IS-FOUND   (L)
1 #IS-DIFF    (L)
1 #COUNT      (I2)
/*
1 #AT-G          (1:30)
2 AT-ATTR-ID     (P7)
2 AT-ATTR-TYPE   (A1)
2 AT-EDIZ-ID     (P15)
2 AT-VALUE-E     (P1)
2 AT-VALUE       (P15)
END-DEFINE
DEFINE SUBROUTINE UDICMN0S
RESET XXERX00A
/*
DECIDE ON FIRST VALUE DL-COMMAND
VALUE 'LOCATE'
  PERFORM RECORD-LOCATE
VALUE 'ADD'
  PERFORM RECORD-ADD
NONE VALUE
  MOVE DL-COMMAND TO ERROR-ADDITION(1)
  *ERROR-NR := EC-UNKNOW-COMMAND
END-DECIDE
/*
DEFINE SUBROUTINE RECORD-LOCATE
  IF UDICMN0A.CL-ID EQ 0 THEN *ERROR-NR := EC-OBJECT-ID-REQUIRED END-IF
  IF UDICMN0A.IT-ID EQ 0 THEN *ERROR-NR := EC-OBJECT-ID-REQUIRED END-IF
  MOVE UDICMN0A.CL-ID TO UD-IC-AT-SUPER.CL-ID
  MOVE UDICMN0A.IT-ID TO UD-IC-AT-SUPER.IC-IT-ID
  MOVE -1 TO UD-IC-AT-SUPER.IC-AT-VALUE(*)
  FOR #I = 1 TO 30
     IF UDICMN0A.AT-COMB-INDEX-NUM(#I) NE 0 THEN
        MOVE UDICMN0A.AT-COMB-INDEX-NUM(#I) TO #COUNT
        MOVE UDICMN0A.AT-VALUE(#I) TO UD-IC-AT-SUPER.IC-AT-VALUE(#COUNT)
     END-IF
  END-FOR
  #IS-FOUND := FALSE
  FIND UR-ACC-COMB-VIEW WITH UD-IC-AT-SUPER EQ UD-IC-AT-SUPER
     IF NO RECORD FOUND
        ESCAPE BOTTOM
     END-NOREC
     #IS-DIFF := FALSE
     RESET #AT-G(*)
     FOR #I = 1 TO 30
        IF UDICMN0A.AT-ATTR-ID(#I) EQ 0 THEN ESCAPE BOTTOM END-IF
/*        WRITE 'FIND' #I UDICMN0A.AT-ATTR-ID(#I) UDICMN0A.AT-ATTR-TYPE(#I)
        MOVE BY NAME UDICMN0A.AT-G(#I) TO #AT-G(#I)
        #IS-DIFF := TRUE
        FOR #J = 1 TO C*AT-G
           IF UDICMN0A.AT-ATTR-ID(#I) EQ
                 UR-ACC-COMB-VIEW.AT-ATTR-ID(#J) THEN
              DECIDE ON FIRST VALUE UDICMN0A.AT-ATTR-TYPE(#I)
                 VALUE 'A'
                    IF UDICMN0A.AT-VALUE(#I) EQ
                       UR-ACC-COMB-VIEW.AT-VALUE(#J)
                       #IS-DIFF := FALSE
                    END-IF
                 VALUE 'M'
                    IF UDICMN0A.AT-EDIZ-ID(#I) EQ
                       UR-ACC-COMB-VIEW.AT-EDIZ-ID(#J)
                       #IS-DIFF := FALSE
                    END-IF
                 VALUE 'I'
                    MOVE UR-ACC-COMB-VIEW.AT-VALUE(#J) TO
                          #AT-G.AT-VALUE(#I)
                    MOVE UR-ACC-COMB-VIEW.AT-VALUE-E(#J) TO
                          #AT-G.AT-VALUE-E(#I)
                    #IS-DIFF := FALSE
                 NONE VALUE
                    #IS-DIFF := FALSE
              END-DECIDE
              ESCAPE BOTTOM
           END-IF
        END-FOR
        IF UDICMN0A.AT-ATTR-TYPE(#I) EQ 'A' OR EQ 'M' THEN
           IF #IS-DIFF THEN ESCAPE BOTTOM END-IF
        END-IF
     END-FOR
     IF NOT #IS-DIFF THEN
        #IS-FOUND := TRUE
        ESCAPE BOTTOM
     END-IF
  END-FIND
  IF #IS-FOUND THEN
     RESET UDICMN0A
     MOVE UR-ACC-COMB-VIEW.CL-ID TO UDICMN0A.CL-ID
     MOVE UR-ACC-COMB-VIEW.MD-IT-ID(1) TO UDICMN0A.IT-ID
     MOVE UR-ACC-COMB-VIEW.MD-IX-ID(1) TO UDICMN0A.IX-ID
/*     RESET UDICMN0A.AT-G(*)
     MOVE BY NAME #AT-G(*) TO UDICMN0A.AT-G(*)
  ELSE
     RETURN-CODE := EC-OBJECT-NOT-FOUND
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-ADD
  IF UDICMN0A.CL-ID EQ 0 THEN *ERROR-NR := EC-OBJECT-ID-REQUIRED END-IF
  IF UDICMN0A.IT-ID EQ 0 THEN *ERROR-NR := EC-OBJECT-ID-REQUIRED END-IF
  MOVE 1 TO UR-ACC-COMB-VIEW.UD-RECORD-TYPE
  MOVE UDICMN0A.CL-ID TO UR-ACC-COMB-VIEW.CL-ID
  MOVE UDICMN0A.CL-ID TO UR-ACC-COMB-VIEW.IC-CL-ID
  MOVE UDICMN0A.IT-ID TO UR-ACC-COMB-VIEW.MD-IT-ID(1)
  MOVE UDICMN0A.IT-ID TO UR-ACC-COMB-VIEW.IC-IT-ID(1)
  MOVE UDICMN0A.IT-SALDO-TYPE TO UR-ACC-COMB-VIEW.MD-MODIF(1)
  MOVE UDICMN0A.IT-SALDO-TYPE TO UR-ACC-COMB-VIEW.MD-IT-SALDO-TYPE(1)
  MOVE -1 TO UR-ACC-COMB-VIEW.IC-AT-VALUE1(1)
  MOVE -1 TO UR-ACC-COMB-VIEW.IC-AT-VALUE2(1)
  MOVE -1 TO UR-ACC-COMB-VIEW.IC-AT-VALUE3(1)
  RESET #K
  FOR #I = 1 TO 30
     IF UDICMN0A.AT-ATTR-ID(#I) EQ 0 THEN ESCAPE BOTTOM END-IF
     DECIDE ON EVERY VALUE UDICMN0A.AT-ATTR-TYPE(#I)
        VALUE 'A', 'M', 'I'
           ADD 1 TO #K
           MOVE UDICMN0A.AT-ATTR-TYPE(#I) TO UR-ACC-COMB-VIEW.AT-ATTR-TYPE(#K)
           MOVE UDICMN0A.AT-ATTR-ID(#I) TO UR-ACC-COMB-VIEW.AT-ATTR-ID(#K)
           MOVE #K TO UR-ACC-COMB-VIEW.AT-INT-NUM(#K)
           MOVE 1 TO UR-ACC-COMB-VIEW.AT-MD-INT-NUM(#K,1)
/*           MOVE UDICMN0A.AT-TYPE-ID(#I) TO UR-ACC-COMB-VIEW.AT-TYPE-ID(#I)
        VALUE 'A', 'I'
           MOVE UDICMN0A.AT-VALUE-E(#I) TO UR-ACC-COMB-VIEW.AT-VALUE-E(#K)
           MOVE UDICMN0A.AT-VALUE(#I) TO UR-ACC-COMB-VIEW.AT-VALUE(#K)
        VALUE 'M'
           MOVE UDICMN0A.AT-EDIZ-ID(#I) TO UR-ACC-COMB-VIEW.AT-EDIZ-ID(#K)
        VALUE 'C'
           IGNORE
        NONE VALUE
           *ERROR-NR := EC-ATTR-TYPE-UNKNOW
     END-DECIDE
     IF UDICMN0A.AT-COMB-INDEX-NUM(#I) NE 0 THEN
        DECIDE ON FIRST VALUE UDICMN0A.AT-COMB-INDEX-NUM(#I)
           VALUE 1
              MOVE UDICMN0A.AT-VALUE(#I) TO UR-ACC-COMB-VIEW.IC-AT-VALUE1(1)
           VALUE 2
              MOVE UDICMN0A.AT-VALUE(#I) TO UR-ACC-COMB-VIEW.IC-AT-VALUE2(1)
           VALUE 3
              MOVE UDICMN0A.AT-VALUE(#I) TO UR-ACC-COMB-VIEW.IC-AT-VALUE3(1)
           NONE VALUE
              *ERROR-NR := EC-ATTR-VALUE-UNKNOW
        END-DECIDE
     END-IF
  END-FOR
/*  WRITE UR-ACC-COMB-VIEW.IC-CL-ID UR-ACC-COMB-VIEW.IC-IT-ID(1)
/*     UR-ACC-COMB-VIEW.IC-AT-VALUE1(1)
/*     UR-ACC-COMB-VIEW.IC-AT-VALUE2(1)
/*     UR-ACC-COMB-VIEW.IC-AT-VALUE3(1)
SL.
  STORE UR-ACC-COMB-VIEW
GL1.
  GET UR-ACC-COMB-ID-VIEW *ISN(SL.)
  INCLUDE UDXXID0C 'UR-ACC-COMB-ID-VIEW.UD-ID' '*ISN(SL.)'
  MOVE UR-ACC-COMB-ID-VIEW.UD-ID TO UR-ACC-COMB-ID-VIEW.MD-IX-ID(1)
  UPDATE (GL1.)
  MOVE UR-ACC-COMB-ID-VIEW.UD-ID TO UDICMN0A.IX-ID
END-SUBROUTINE
/*
INCLUDE XXERSY1C
END-SUBROUTINE
END

