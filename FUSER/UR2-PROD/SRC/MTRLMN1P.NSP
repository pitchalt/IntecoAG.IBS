* >Natural Source Header 000000 /*<RO>>
* :NatName MTRLMN1P
* :UID INTECO
* :Mode S
* :CP
* :Date 20060629
* :Time 1350000
* <Natural Source Header /*<<RO>
DEFINE DATA
LOCAL USING XXERX00A
LOCAL USING XXCTXX0A
LOCAL USING UXCSXX0A
/*
LOCAL USING UETXMN0A
/*LOCAL USING UEOPPC0A
LOCAL USING MERLHM0A
LOCAL USING MERLMM0A
LOCAL USING MERLPM0A
/*
LOCAL USING MEPHMN0A
LOCAL USING MEPMMN0A
/*
LOCAL USING XMBMXX1A
/*
LOCAL USING MELKHM0A
/*
LOCAL USING MERLZL0A
LOCAL USING MERLZLSA
/*
LOCAL USING MBMTMN0A
LOCAL USING MBMOMN0A
LOCAL USING MBVOMN0A
LOCAL USING MBEIMN0A
LOCAL USING MBDMMN0A
LOCAL USING MBRLPL0A
LOCAL USING MBMZMN0A
LOCAL USING MBZKMN0A
/*
LOCAL
1 #I          (I4)
1 #NUMBER     (N5)
1 #COUNT      (N4)
1 #RL-ID-1    (P15)
1 #RLM-ID-1   (P15)
1 #DM-1       (P15)
1 #EI-1       (P15)
1 #EI-999     (P15)
1 #VO-6146    (P15)
1 #TEST-FAIL  (I2)
1 #TEST-PASS  (I2)
1 #TESTNAME   (A70)
1 #LK-ID-1    (P15)
1 #LK-ID-2    (P15)
1 #MT-CODE    (A22)
1 #MT-CODE2   (A22)
1 #ZK-ID-1    (P15)
/*
END-DEFINE
/*
XXCTXX0A.OG-ID := 1000
XXCTXX0A.VO-OG-ID := 1000
XXCTXX0A.MO-OG-ID := 1000
XXCTXX0A.MT-OG-ID := 1000
XXCTXX0A.TX-NOT-MANAGED := TRUE
XXCTXX0A.IS-OP-DEBUG := FALSE
/*
#TESTNAME := 'LOCATE EI 1'
ADD 1 TO #TEST-PASS
MOVE 1 TO MBEIMN0A.EI-CODE
MOVE "LOCATE" TO MBEIMN0A.BL-COMMAND
PERFORM MBEIMN0S XXERX00A XXCTXX0A MBEIMN0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
MOVE MBEIMN0A.EI-ID TO #EI-1
/*
#TESTNAME := 'LOCATE EI 999'
ADD 1 TO #TEST-PASS
MOVE 999 TO MBEIMN0A.EI-CODE
MOVE "LOCATE" TO MBEIMN0A.BL-COMMAND
PERFORM MBEIMN0S XXERX00A XXCTXX0A MBEIMN0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
MOVE MBEIMN0A.EI-ID TO #EI-999
/*
#TESTNAME := 'LOCATE VO 6146'
ADD 1 TO #TEST-PASS
MOVE 6146 TO MBVOMN0A.VO-CODE
MOVE "LOCATE" TO MBVOMN0A.BL-COMMAND
PERFORM MBVOMN0S XXERX00A XXCTXX0A MBVOMN0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
MOVE MBVOMN0A.VO-ID TO #VO-6146
/*
#TESTNAME := 'LOCATE DM 1'
ADD 1 TO #TEST-PASS
MOVE 1 TO MBDMMN0A.DM-CODE
MOVE "LOCATE" TO MBDMMN0A.BL-COMMAND
PERFORM MBDMMN0S XXERX00A XXCTXX0A MBDMMN0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
MOVE MBDMMN0A.DM-ID TO #DM-1
/*
#TESTNAME := 'LOCATE ZK'
ADD 1 TO #TEST-PASS
MOVE "2510" TO MBZKMN0A.ZK-CODE
MOVE "LOCATE" TO MBZKMN0A.BL-COMMAND
PERFORM MBZKMN0S XXERX00A XXCTXX0A MBZKMN0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
MOVE MBZKMN0A.ZK-ID TO #ZK-ID-1
/*
#TESTNAME := 'read mt'
ADD 1 TO #TEST-PASS
MOVE 6089 TO MBMTMN0A.MT-ID
MOVE "READ" TO MBMTMN0A.BL-COMMAND
PERFORM MBMTMN0S XXERX00A XXCTXX0A MBMTMN0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
MOVE MBMTMN0A.MT-CODE TO #MT-CODE2
/*
#TESTNAME := 'read mt'
ADD 1 TO #TEST-PASS
MOVE 6088 TO MBMTMN0A.MT-ID
MOVE "READ" TO MBMTMN0A.BL-COMMAND
PERFORM MBMTMN0S XXERX00A XXCTXX0A MBMTMN0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
MOVE MBMTMN0A.MT-CODE TO #MT-CODE
/*
#TESTNAME := 'read mt'
ADD 1 TO #TEST-PASS
MOVE 6087 TO MBMTMN0A.MT-ID
MOVE "READ" TO MBMTMN0A.BL-COMMAND
PERFORM MBMTMN0S XXERX00A XXCTXX0A MBMTMN0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*
#TESTNAME := 'ADD MZ'
ADD 1 TO #TEST-PASS
MOVE 6087 TO MBMZMN0A.FROM-MT-ID
MOVE 6088 TO MBMZMN0A.TO-MT-ID
MOVE #ZK-ID-1 TO MBMZMN0A.ZK-ID
MOVE 2 TO MBMZMN0A.COL
MOVE *DATX TO MBMZMN0A.DT-START
SUBTRACT 10 FROM MBMZMN0A.DT-START
MOVE *DATX TO MBMZMN0A.DT-STOP
ADD 10 TO MBMZMN0A.DT-STOP
MOVE "ADD" TO MBMZMN0A.BL-COMMAND
PERFORM MBMZMN0S XXERX00A XXCTXX0A MBMZMN0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*
#TESTNAME := 'LOCATE MO'
ADD 1 TO #TEST-PASS
MOVE 15 TO MBMOMN0A.MO-CODE
MOVE "LOCATE" TO MBMOMN0A.BL-COMMAND
PERFORM MBMOMN0S XXERX00A XXCTXX0A MBMOMN0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*
XXCTXX0A.US-MO-ID := MBMOMN0A.MO-ID
/*
#TESTNAME := 'LOCATE MO'
ADD 1 TO #TEST-PASS
MOVE 16 TO MBMOMN0A.MO-CODE
MOVE "LOCATE" TO MBMOMN0A.BL-COMMAND
PERFORM MBMOMN0S XXERX00A XXCTXX0A MBMOMN0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*
#TESTNAME := 'OPEN TRANSACTION 1'
ADD 1 TO #TEST-PASS
UETXMN0A.ME-COMMAND := 'OPEN'
PERFORM UETXMN0S XXERX00A XXCTXX0A UETXMN0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*
XXCTXX0A.OD-ID := 301
/*
#TESTNAME := 'INIT HEADER PO 1'
ADD 1 TO #TEST-PASS
MEPHMN0A.ME-COMMAND := 'INIT'
PERFORM MEPHMN0S XXERX00A XXCTXX0A MEPHMN0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*
#TESTNAME := 'ADD HEADER PO 1'
ADD 1 TO #TEST-PASS
MEPHMN0A.VO-ID := #VO-6146
MEPHMN0A.TP-ID := 1
MEPHMN0A.TT-NUMBER := 'TTH 123'
MEPHMN0A.TT-DATE := *DATX
MEPHMN0A.ME-COMMAND := 'ADD'
PERFORM MEPHMN0S XXERX00A XXCTXX0A MEPHMN0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*
ADD 1 TO #TEST-PASS
#TESTNAME := 'ADD POSITION po 1'
MEPMMN0A.PO-ID := MEPHMN0A.PO-ID
MEPMMN0A.MT-ID := 6087
MEPMMN0A.EI-ID := #EI-999
MEPMMN0A.ND-ID := 5
MEPMMN0A.DR-CENA := 10
MEPMMN0A.DR-COL := 5
MEPMMN0A.DR-CENA-SUMMA := 112
MEPMMN0A.DR-NDS := 2
MEPMMN0A.DR-NDS-SUMMA := 22.4
MEPMMN0A.DM-ID(1) := #DM-1
MEPMMN0A.DM-EI-ID(1) := #EI-1
MEPMMN0A.DM-COL(1) := 5
MEPMMN0A.BASE-COL := 100
MEPMMN0A.ME-COMMAND := 'ADD'
PERFORM MEPMMN0S XXERX00A XXCTXX0A MEPMMN0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*WRITE MEPMMN0A.DR-COL MEPMMN0A.EI-SHORT-NAME MEPMMN0A.BASE-COL MEPMMN0A.BASE-EI-SHORT-NAME
/*
ADD 1 TO #TEST-PASS
#TESTNAME := 'ADD POSITION po 2'
MEPMMN0A.ME-COMMAND := 'ADD'
PERFORM MEPMMN0S XXERX00A XXCTXX0A MEPMMN0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*
ADD 1 TO #TEST-PASS
#TESTNAME := 'ADD POSITION po 3'
MEPMMN0A.ME-COMMAND := 'ADD'
PERFORM MEPMMN0S XXERX00A XXCTXX0A MEPMMN0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*
ADD 1 TO #TEST-PASS
#TESTNAME := 'ADD POSITION po 4'
MEPMMN0A.DR-CENA := 20
MEPMMN0A.DR-COL := 10
MEPMMN0A.DR-CENA-SUMMA := 200
MEPMMN0A.DR-NDS := 2
MEPMMN0A.DR-NDS-SUMMA := 36
MOVE 6088 TO MEPMMN0A.MT-ID
MEPMMN0A.ME-COMMAND := 'ADD'
PERFORM MEPMMN0S XXERX00A XXCTXX0A MEPMMN0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*
MOVE 200 TO XXCTXX0A.OD-ID
/*
#TESTNAME := 'ADD À« '
ADD 1 TO #TEST-PASS
MOVE '123' TO MELKHM0A.LK-NUMBER
MOVE *DATX TO MELKHM0A.LK-DATE
MOVE *DATX TO MELKHM0A.LK-DT-START
MOVE *DATX TO MELKHM0A.LK-DT-STOP
SUBTRACT 10 FROM MELKHM0A.LK-DT-START
ADD 10 TO MELKHM0A.LK-DT-STOP
MOVE 23.1234 TO MELKHM0A.LK-COL
MOVE 45.46 TO MELKHM0A.LK-CENA
MOVE ' ŒÃÃ≈Õ“¿–»…' TO MELKHM0A.LK-PRIM
MOVE 1 TO MELKHM0A.EI-CODE
MOVE MBMTMN0A.MT-CODE TO MELKHM0A.MT-CODE
MOVE '2510' TO MELKHM0A.ZK-CODE
MOVE 100 TO MELKHM0A.DP-CODE
MOVE 'SET' TO MELKHM0A.ME-COMMAND
PERFORM MELKHM0S XXERX00A XXCTXX0A MELKHM0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
MOVE MELKHM0A.LK-ID TO #LK-ID-1
/*WRITE "LZK 1" MELKHM0A.LK-ID
/*
#TESTNAME := 'ADD À«  2'
ADD 1 TO #TEST-PASS
MOVE "125" TO MELKHM0A.LK-NUMBER
MOVE "SET" TO MELKHM0A.ME-COMMAND
PERFORM MELKHM0S XXERX00A XXCTXX0A MELKHM0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
MOVE MELKHM0A.LK-ID TO #LK-ID-2
/*WRITE "LZK 2" MELKHM0A.LK-ID
/*
FOR #NUMBER = 201 TO 203
  COMPRESS 'ADD À«  2' #NUMBER INTO #TESTNAME
  ADD 1 TO #TEST-PASS
  MOVE #NUMBER TO MELKHM0A.LK-NUMBER
  MOVE #MT-CODE2 TO MELKHM0A.MT-CODE
  MOVE "SET" TO MELKHM0A.ME-COMMAND
  PERFORM MELKHM0S XXERX00A XXCTXX0A MELKHM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
END-FOR
/*
MOVE 303 TO XXCTXX0A.OD-ID
/*
#TESTNAME := 'New RL'
ADD 1 TO #TEST-PASS
MOVE "NEW" TO XMBMXX1A.BM-COMMAND
PERFORM MMRLNW0S XXERX00A XXCTXX0A XMBMXX1A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*
IF XMBMXX1A.BM-OBJECT NE 0 THEN
  #TESTNAME := 'Edit RL'
  ADD 1 TO #TEST-PASS
  MOVE "VIEW" TO XMBMXX1A.BM-COMMAND
  PERFORM MMRLVW0S XXERX00A XXCTXX0A XMBMXX1A UXCSXX0A
  IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
END-IF
/*
#TESTNAME := 'INIT HEADER rl'
ADD 1 TO #TEST-PASS
MERLHM0A.ME-COMMAND := 'INIT'
PERFORM MERLHM0S XXERX00A XXCTXX0A MERLHM0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*
#TESTNAME := 'ADD HEADER rl 1'
ADD 1 TO #TEST-PASS
MOVE "TST123" TO MERLHM0A.RL-NUMBER
MERLHM0A.OUT-MO-ID := MBMOMN0A.MO-ID
MERLHM0A.ZK-ID := MELKHM0A.ZK-ID
MERLHM0A.ME-COMMAND := 'ADD'
PERFORM MERLHM0S XXERX00A XXCTXX0A MERLHM0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
#RL-ID-1 := MERLHM0A.RL-ID
/*WRITE MERLHM0A.RL-ID MERLHM0A.RL-NUMBER MERLHM0A.RL-DATE MERLHM0A.RL-DATE-OTR /
/*     MERLHM0A.IN-MO-ID MERLHM0A.IN-MO-CODE MERLHM0A.IN-MO-NAME MERLHM0A.IN-DP-ID MERLHM0A.IN-DP-CODE MERLHM0A.IN-DP-NAME /
/*     MERLHM0A.OUT-MO-ID MERLHM0A.OUT-MO-CODE MERLHM0A.OUT-MO-NAME MERLHM0A.OUT-DP-ID MERLHM0A.OUT-DP-CODE MERLHM0A.OUT-DP-NAME /
/*     MERLHM0A.ZK-ID MERLHM0A.ZK-CODE MERLHM0A.BS-ID MERLHM0A.BS-CODE MERLHM0A.BS-NAME /
/*     MERLHM0A.MT-ID MERLHM0A.MT-CODE MERLHM0A.MT-NAME (AL=50) /
/*     MERLHM0A.IS-CONFIRM-REQUIRED
/*
#TESTNAME := 'update HEADER 1'
ADD 1 TO #TEST-PASS
MERLHM0A.ME-COMMAND := "UPDATE"
PERFORM MERLHM0S XXERX00A XXCTXX0A MERLHM0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*
#TESTNAME := 'check limit position RL'
ADD 1 TO #TEST-PASS
MERLMM0A.RL-ID := #RL-ID-1
MERLMM0A.MT-ID := 6087
MERLMM0A.LK-ID := MELKHM0A.LK-ID
MOVE "CHECK-LIM" TO MERLMM0A.ME-COMMAND
PERFORM MERLMM0S XXERX00A XXCTXX0A MERLMM0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*WRITE MERLMM0A.MT-CODE MERLMM0A.LK-NUMBER MERLMM0A.LK-DATE MERLMM0A.ZK-CODE MERLMM0A.BS-CODE /
/*     MERLMM0A.COL MERLMM0A.EI-SHORT-NAME MERLMM0A.BASE-COL MERLMM0A.BASE-EI-SHORT-NAME
/*             MERLMM0A.PLAN-COL MERLMM0A.PLAN-EI-SHORT-NAME MERLMM0A.CENA-SUMMA /
/*     MERLMM0A.COL-LIMIT MERLMM0A.BASE-COL-LIMIT MERLMM0A.PLAN-COL-LIMIT
/*
#TESTNAME := 'add position RL'
ADD 1 TO #TEST-PASS
MERLMM0A.RL-ID := #RL-ID-1
MERLMM0A.MT-ID := 6087
MERLMM0A.LK-ID := #LK-ID-1
MERLMM0A.BASE-COL := 100
MOVE "ADD" TO MERLMM0A.ME-COMMAND
PERFORM MERLMM0S XXERX00A XXCTXX0A MERLMM0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*WRITE MERLMM0A.MT-CODE MERLMM0A.LK-NUMBER MERLMM0A.LK-DATE MERLMM0A.ZK-CODE MERLMM0A.BS-CODE /
/*     MERLMM0A.BASE-COL MERLMM0A.BASE-EI-SHORT-NAME
/*             MERLMM0A.PLAN-COL MERLMM0A.PLAN-EI-SHORT-NAME MERLMM0A.CENA-SUMMA /
/*     MERLMM0A.BASE-COL-LIMIT MERLMM0A.PLAN-COL-LIMIT
/*
#TESTNAME := 'READ position rl'
ADD 1 TO #TEST-PASS
MOVE MERLMM0A.RLM-ID TO MBRLPL0A.RLM-ID
MOVE "TOP" TO MBRLPL0A.BL-COMMAND
MOVE 20 TO MBRLPL0A.DR-LIST-READ
REPEAT
  PERFORM MBRLPL0S XXERX00A XXCTXX0A MBRLPL0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
  MOVE "NEXT" TO MBRLPL0A.BL-COMMAND
  FOR #I = 1 TO MBRLPL0A.DR-LIST-C
     MOVE MBRLPL0A.RLP-ID(#I) TO MERLPM0A.RLP-ID
     MOVE "READ" TO MERLPM0A.ME-COMMAND
     PERFORM MERLPM0S XXERX00A XXCTXX0A MERLPM0A UXCSXX0A
     IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*     WRITE MBRLPL0A.RLP-ID(#I) MBRLPL0A.RLP-SORT(#I) MERLPM0A.LKR-ID MERLPM0A.PR-CODE MERLPM0A.CENA MERLPM0A.CENA-SUMMA
/*           MERLPM0A.COL MERLPM0A.BASE-COL MERLPM0A.PLAN-COL
  END-FOR
  UNTIL MBRLPL0A.IS-TOP
END-REPEAT
/*
#TESTNAME := 'update position RL'
ADD 1 TO #TEST-PASS
MERLMM0A.BASE-COL := 30
MOVE "UPDATE" TO MERLMM0A.ME-COMMAND
PERFORM MERLMM0S XXERX00A XXCTXX0A MERLMM0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*WRITE MERLMM0A.MT-CODE MERLMM0A.LK-NUMBER MERLMM0A.LK-DATE MERLMM0A.ZK-CODE MERLMM0A.BS-CODE /
/*     MERLMM0A.BASE-COL MERLMM0A.BASE-EI-SHORT-NAME
/*             MERLMM0A.PLAN-COL MERLMM0A.PLAN-EI-SHORT-NAME MERLMM0A.CENA-SUMMA /
/*     MERLMM0A.BASE-COL-LIMIT MERLMM0A.PLAN-COL-LIMIT
/*
#TESTNAME := 'READ position rl 2'
ADD 1 TO #TEST-PASS
MOVE MERLMM0A.RLM-ID TO MBRLPL0A.RLM-ID
MOVE "TOP" TO MBRLPL0A.BL-COMMAND
MOVE 20 TO MBRLPL0A.DR-LIST-READ
REPEAT
  PERFORM MBRLPL0S XXERX00A XXCTXX0A MBRLPL0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
  MOVE "NEXT" TO MBRLPL0A.BL-COMMAND
  FOR #I = 1 TO MBRLPL0A.DR-LIST-C
     MOVE MBRLPL0A.RLP-ID(#I) TO MERLPM0A.RLP-ID
     MOVE "READ" TO MERLPM0A.ME-COMMAND
     PERFORM MERLPM0S XXERX00A XXCTXX0A MERLPM0A UXCSXX0A
     IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*     WRITE MBRLPL0A.RLP-ID(#I) MBRLPL0A.RLP-SORT(#I) MERLPM0A.LKR-ID MERLPM0A.PR-CODE MERLPM0A.CENA MERLPM0A.CENA-SUMMA
/*           MERLPM0A.COL MERLPM0A.BASE-COL MERLPM0A.PLAN-COL
  END-FOR
  UNTIL MBRLPL0A.IS-TOP
END-REPEAT
/*
#TESTNAME := 'check limit LZK'
ADD 1 TO #TEST-PASS
MERLMM0A.BASE-COL := 30
MERLMM0A.LK-ID := #LK-ID-1
MOVE "ADD" TO MERLMM0A.ME-COMMAND
PERFORM MERLMM0S XXERX00A XXCTXX0A MERLMM0A UXCSXX0A
IF RETURN-CODE NE 2416 THEN PERFORM DUMP-ERROR END-IF
/*WRITE MERLMM0A.MT-CODE MERLMM0A.LK-NUMBER MERLMM0A.LK-DATE MERLMM0A.ZK-CODE MERLMM0A.BS-CODE /
/*      MERLMM0A.BASE-COL MERLMM0A.BASE-EI-SHORT-NAME
/*             MERLMM0A.PLAN-COL MERLMM0A.PLAN-EI-SHORT-NAME MERLMM0A.CENA-SUMMA /
/*     MERLMM0A.BASE-COL-LIMIT MERLMM0A.PLAN-COL-LIMIT
/*
#TESTNAME := 'add position RL 2'
ADD 1 TO #TEST-PASS
MERLMM0A.BASE-COL := 40
MERLMM0A.LK-ID := #LK-ID-2
MOVE "ADD" TO MERLMM0A.ME-COMMAND
PERFORM MERLMM0S XXERX00A XXCTXX0A MERLMM0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*
#TESTNAME := 'add position RL 3'
ADD 1 TO #TEST-PASS
MOVE 6088 TO MERLMM0A.MT-ID
MOVE MBMZMN0A.MZ-ID TO MERLMM0A.MZ-ID
MERLMM0A.BASE-COL := 40
MERLMM0A.LK-ID := #LK-ID-2
MOVE "ADD" TO MERLMM0A.ME-COMMAND
PERFORM MERLMM0S XXERX00A XXCTXX0A MERLMM0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*WRITE MERLMM0A.MT-CODE MERLMM0A.LK-NUMBER MERLMM0A.LK-DATE MERLMM0A.ZK-CODE MERLMM0A.BS-CODE /
/*      MERLMM0A.BASE-COL MERLMM0A.BASE-EI-SHORT-NAME
/*             MERLMM0A.PLAN-COL MERLMM0A.PLAN-EI-SHORT-NAME MERLMM0A.CENA-SUMMA /
/*     MERLMM0A.BASE-COL-LIMIT MERLMM0A.PLAN-COL-LIMIT
/*
#TESTNAME := 'read position rl 2'
ADD 1 TO #TEST-PASS
MOVE MERLMM0A.RLM-ID TO MBRLPL0A.RLM-ID
MOVE "TOP" TO MBRLPL0A.BL-COMMAND
MOVE 20 TO MBRLPL0A.DR-LIST-READ
REPEAT
  PERFORM MBRLPL0S XXERX00A XXCTXX0A MBRLPL0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
  MOVE "NEXT" TO MBRLPL0A.BL-COMMAND
  FOR #I = 1 TO MBRLPL0A.DR-LIST-C
     MOVE MBRLPL0A.RLP-ID(#I) TO MERLPM0A.RLP-ID
     MOVE "READ" TO MERLPM0A.ME-COMMAND
     PERFORM MERLPM0S XXERX00A XXCTXX0A MERLPM0A UXCSXX0A
     IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*     WRITE MBRLPL0A.RLP-ID(#I) MBRLPL0A.RLP-SORT(#I) MERLPM0A.LKR-ID MERLPM0A.PR-CODE MERLPM0A.CENA MERLPM0A.CENA-SUMMA
/*           MERLPM0A.COL MERLPM0A.BASE-COL MERLPM0A.PLAN-COL
  END-FOR
  UNTIL MBRLPL0A.IS-TOP
END-REPEAT
/*
#TESTNAME := 'load stack'
ADD 1 TO #TEST-PASS
MOVE #RL-ID-1 TO MERLZL0A.RL-ID
MOVE #LK-ID-1 TO MERLZL0A.LK-ID
MOVE "LOAD" TO MERLZL0A.ME-COMMAND
PERFORM MERLZL0S XXERX00A XXCTXX0A MERLZL0A MERLZLSA UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
MOVE "FREE" TO MERLZL0A.ME-COMMAND
PERFORM MERLZL0S XXERX00A XXCTXX0A MERLZL0A MERLZLSA UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*
#TESTNAME := 'ROLLBACK TRANSACTION'
ADD 1 TO #TEST-PASS
UETXMN0A.ME-COMMAND := 'ROLLBACK'
PERFORM UETXMN0S XXERX00A XXCTXX0A UETXMN0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*
BACKOUT TRANSACTION
WRITE '¬—≈√Œ “≈—“Œ¬' #TEST-PASS 'Œÿ»¡Œ◊Õ€’' #TEST-FAIL
DEFINE SUBROUTINE DUMP-ERROR
  ADD 1 TO #TEST-FAIL
  WRITE 'Œÿ»¡ ¿ “≈—“' #TEST-PASS #TESTNAME
  PERFORM XPERVW0S XXERX00A
/*  PRINT RETURN-CODE ERROR-ADDITION(1) ERROR-ADDITION(2)
/*  WRITE ERROR-MODULE ERROR-LINE ERROR-NUMBER /
/*        ERROR-STACK-MODULE(1) ERROR-STACK-LINE(1) /
/*        ERROR-STACK-MODULE(2) ERROR-STACK-LINE(2) /
/*        ERROR-STACK-MODULE(3) ERROR-STACK-LINE(3) /
/*        ERROR-STACK-MODULE(4) ERROR-STACK-LINE(4) /
/*        ERROR-STACK-MODULE(5) ERROR-STACK-LINE(5)

END-SUBROUTINE
END


