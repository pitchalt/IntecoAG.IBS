* >Natural Source Header 000000 /*<RO>>
* :NatName XPZKSH0S
* :UID INTECO
* :Mode S
* :CP
* :Date 20060606
* :Time 1934000
* <Natural Source Header /*<<RO>
/***********************************************************************
/*
/* яхярелю: ARM-K
/* опнцпюллю: онхяй б яопюбнвмхйе
/*
/* пюгпюанрвхй:
/* дюрю бшосяйю:
/*
/* мюгбюмхе: онхяй б яопюбнвмхйе гюйюгнб
/* йнлюмдш:
/*  - LOCATE
/*  - SELECT
/*
/* хяопюбкемхъ:
/*
/***********************************************************************
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING XXCTXX0A
PARAMETER USING XPZKSH0A
/*
LOCAL USING XXXXEC0L
LOCAL USING XPZKSC0L
LOCAL USING XPZKSR0L
LOCAL USING STEKL
LOCAL USING LCLZKL
/*
LOCAL USING MBBSMN0A
/*
LOCAL
1 #COUNT      (I4)
1 #FLAG       (L)
1 #POSITION   (I4)
1 #SELECTED   (A30)
1 #ZK-CODE    (A22)
/*
1 CNTST(N5) INIT < 200 >
1 LEN-ST-ZK(B4) CONST < 120 >
1 STEKZK
2 ZK-CODE  (A22)
2 ZK-ID    (P15)
2 ZK-NAME  (A80)
2 ZK-BS    (N5)
1 C-Z(C/7)
1 #KEYLEN (I4)  1 FLGZ(N1)
1 ZK-KEY-LEN (I2)
1 ZK-START (A10)
1 REDEFINE ZK-START
2 ZK-START-B (B1/1:10)
1 ZK-STOP  (A10)
1 REDEFINE ZK-STOP
2 ZK-STOP-B (B1/1:10)
1 SORT-START (B4)
1 SORT-STOP  (B4)
END-DEFINE
DEFINE SUBROUTINE XPZKSH0S
/*
DEFINE WINDOW WINDOW-RESULT
  SIZE 20*80
  BASE 5/1
  TITLE 'мюидеммше гюйюгш'
  FRAMED ON
/*
DEFINE WINDOW WINDOW-CRITERY
  SIZE 18*80
  BASE 7/1
  TITLE 'оюпюлерпш нранпю гюйюгнб'
  FRAMED ON
/*
SET KEY ALL
SET CONTROL 'MT'
RESET XXERX00A XPZKSH0A.ZK-RESULT
MOVE BY NAME XPZKSH0A TO XPZKSC0L
MOVE ZK-SEARCH TO XPZKSC0L.ZK-CODE
/*
DECIDE ON FIRST VALUE SH-COMMAND
  VALUE 'LOCATE'
     PERFORM ZK-LOCATE
  VALUE 'SELECT'
     PERFORM ZK-SELECT
  NONE VALUE
     INCLUDE XXERUS1C '2201'
END-DECIDE
/*
SET WINDOW OFF
IF XPZKSH0A.ZK-ID NE 0 THEN
  MOVE STEKZK.ZK-BS TO MBBSMN0A.BS-CODE
  MOVE "LOCATE" TO MBBSMN0A.BL-COMMAND
  PERFORM MBBSMN0S XXERX00A XXCTXX0A MBBSMN0A
  IF RETURN-CODE EQ EC-OBJECT-NOT-FOUND THEN
     RESET XPZKSH0A.BS-ID XPZKSH0A.BS-CODE XPZKSH0A.BS-NAME
  ELSE
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE BY NAME MBBSMN0A TO XPZKSH0A
  END-IF
END-IF
/*
DEFINE SUBROUTINE ZK-LOCATE
  PERFORM ZK-SEARCH
  IF #COUNT EQ 0 THEN
     INCLUDE XXERUS1C '2410'
  ELSE
     IF #COUNT EQ 1 THEN
        MOVE BY NAME STEKZK TO XPZKSH0A
        ESCAPE ROUTINE
     END-IF
     PERFORM ZK-SHOW
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE ZK-SELECT
  PERFORM ZK-CRITERY
  IF *PF-KEY NE 'PF3' THEN
     PERFORM ZK-SHOW
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE ZK-SHOW
  SET WINDOW 'WINDOW-RESULT'
  SET KEY NAMED OFF
  SET KEY ENTR NAMED 'бшапр'
  SET KEY PF3 NAMED 'бшунд'
  SET KEY PF7 NAMED 'мюгюд'
  SET KEY PF8 NAMED 'боепед'
  SET KEY PF6 NAMED 'оюпюл'
  RESET #SELECTED
  #N := 1
  REPEAT
    PERFORM ZK-LIST
     INPUT USING MAP 'XPZKSR0M'
     IF *PF-KEY EQ 'PF6' THEN
        PERFORM ZK-CRITERY
        SET WINDOW 'WINDOW-RESULT'
        SET KEY NAMED OFF
        SET KEY ENTR NAMED 'бшапр'
        SET KEY PF3 NAMED 'бшунд'
        SET KEY PF7 NAMED 'боепд'
        SET KEY PF8 NAMED 'мюгюд'
        SET KEY PF6 NAMED 'оюпюл'
        RESET #SELECTED
     END-IF
     IF *PF-KEY EQ 'PF3' THEN
        RESET #SELECTED
        ESCAPE BOTTOM
     END-IF
     IF *PF-KEY EQ 'PF7' AND #N > 7
        ADD -7 TO #N
     END-IF
     IF *PF-KEY EQ 'PF8' AND #K < #COUNT
        ADD 7 TO #N
     END-IF
     IF *PF-KEY EQ 'ENTR' THEN
        FOR #I = 1 TO 7
           IF *CURS-FIELD EQ POS(CP-CMD(#I)) THEN
              #SELECTED := XPZKSR0L.ZK-CODE(#I)
              XPZKSH0A.ZK-CODE := XPZKSR0L.ZK-CODE(#I)
              XI := #N + #I - 1  CALL 'RWSX' XI STEKZK.ZK-CODE XR XN1
              MOVE BY NAME STEKZK TO XPZKSH0A
              ESCAPE ROUTINE
           END-IF
        END-FOR
     END-IF
  END-REPEAT
END-SUBROUTINE
/*
DEFINE SUBROUTINE ZK-CRITERY
  SET WINDOW 'WINDOW-CRITERY'
  SET KEY NAMED OFF
  SET KEY ENTR NAMED 'хяйюр'
  SET KEY PF3 NAMED 'бшунд'
  REPEAT
     INPUT USING MAP 'XPZKSC0M'
     IF *PF-KEY EQ 'PF3' THEN
        RESET #SELECTED
        ESCAPE BOTTOM
     END-IF
     IF *PF-KEY EQ 'ENTR'
        PERFORM ZK-SEARCH
        ESCAPE ROUTINE
     END-IF
  END-REPEAT
END-SUBROUTINE
/*
DEFINE SUBROUTINE ZK-LIST
  RESET XPZKSR0L.ZK-LIST(*)
  #K := #N + 6  #L := 0  C-Z(*) := (AD=PN)
  FOR #I #N #K
    IF #I <= #COUNT  XI := #I  CALL 'RWSX' XI STEKZK.ZK-CODE XR XN1
      #SELECTED := STEKZK.ZK-CODE
      ADD 1 TO #L  RESET C-Z(#L)
      MOVE BY NAME STEKZK TO XPZKSR0L.ZK-LIST(#L)
      XPZKSR0L.ZK-NAME(#L) := STEKZK.ZK-NAME
    END-IF
  END-FOR
END-SUBROUTINE
/*
DEFINE SUBROUTINE ZK-SEARCH
  XI := CNTST  CALL 'GTSX' LEN-ST-ZK XI XN1
  XW := #N := 1  RESET #COUNT
  DECIDE FOR FIRST CONDITION
    WHEN XPZKSC0L.ZK-CODE NE ' '
FL1.
     FIND ZAKAZ ZK-F = XPZKSC0L.ZK-CODE
       PERFORM ZK2STEK
     END-FIND
     IF *NUMBER(FL1.) EQ 0 THEN
        MOVE XPZKSC0L.ZK-CODE TO ZK-START
        MOVE XPZKSC0L.ZK-CODE TO ZK-STOP
        EXAMINE ZK-START FOR ' ' GIVING LENGTH ZK-KEY-LEN
        IF ZK-KEY-LEN < 10 THEN ADD 1 TO ZK-KEY-LEN END-IF
        MOVE H'00' TO ZK-START-B(ZK-KEY-LEN)
        MOVE H'FF' TO ZK-STOP-B(ZK-KEY-LEN)
        FIND ZAKAZ ZK-F = ZK-START THRU ZK-STOP
           PERFORM ZK2STEK
        END-FIND
     END-IF
    WHEN XPZKSC0L.ZK-BS NE 0 AND XPZKSC0L.ZK-NAME = ' '
     FIND ZAKAZ BS-F = XPZKSC0L.ZK-BS
       ACCEPT IF XPZKSC0L.ZK-CODE = ' ' OR = ZK-F AND ZK-F NE ' '
       PERFORM ZK2STEK
     END-FIND
    WHEN  XPZKSC0L.ZK-NAME NE ' '  RESET FLGZ
     READ ZAKAZ
       IF LH-F = XPZKSC0L.ZK-NAME AND ZK-F NE ' '  FLGZ := 1
         PERFORM ZK2STEK
       END-IF
     END-READ
     IF FLGZ = 0
       READ ZAKAZ
         IF ZK-F NE ' '
           EXAMINE LH-F XPZKSC0L.ZK-NAME GIVING POSITION #I
           IF #I NE 0  PERFORM ZK2STEK  END-IF
         END-IF
     END-READ
     END-IF
    WHEN NONE
     READ ZAKAZ
       IF ZK-F NE ' '  PERFORM ZK2STEK  END-IF
     END-READ
   END-DECIDE
   MOVE 1 TO SORT-START
   MOVE 9 TO SORT-STOP
   CALL "SRTX" SORT-START SORT-STOP XN1
END-SUBROUTINE
/*
DEFINE SUBROUTINE ZK2STEK
  STEKZK.ZK-CODE := ZAKAZ.ZK-F
  STEKZK.ZK-ID := ZAKAZ.INT-NUM-ZK
  STEKZK.ZK-BS := ZAKAZ.BS-F
  COMPRESS ZAKAZ.LH-F TO STEKZK.ZK-NAME
  ADD 1 TO #COUNT
  IF #COUNT > CNTST  #K := XI := CNTST  CALL 'GTSX' LEN-ST-ZK XI XN2
    FOR #I 1 CNTST  XI := #I  CALL 'RWSX' XI STEKZK.ZK-CODE XR XN1
      CALL 'RWSX' XI STEKZK.ZK-CODE XW XN2
    END-FOR
    CALL 'FRSX' XN1
    ADD 200 TO CNTST  XI := CNTST  CALL 'GTSX' LEN-ST-ZK XI XN1
    FOR #I 1 #K  XI := #I  CALL 'RWSX' XI STEKZK.ZK-CODE XR XN2
      CALL 'RWSX' XI STEKZK.ZK-CODE XW XN1
    END-FOR
    CALL 'FRSX' XN2
  END-IF
  XI := #COUNT  CALL 'RWSX' XI STEKZK.ZK-CODE XW XN1
END-SUBROUTINE
/*
INCLUDE XXERSY1C
END-SUBROUTINE
END

