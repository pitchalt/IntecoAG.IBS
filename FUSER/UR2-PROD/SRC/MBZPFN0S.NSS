* >Natural Source Header 000000 /*<RO>>
* :NatName MBZPFN0S
* :UID PAUL
* :Mode S
* :CP
* :Date 20070118
* :Time 1404000
* <Natural Source Header /*<<RO>
/* œ–Œ√–¿ÃÃ¿ œŒ»— ¿ ƒ¿ÕÕ€’ œŒ  –»“≈–»ﬁ
/*
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING XXCTXX0A
PARAMETER USING MPXXFN0A
PARAMETER USING XPMXXX0A
LOCAL USING STEKL
/* —“≈ 
LOCAL USING MPOSST0L
LOCAL USING XXSTMN0L
/*
LOCAL USING XXXXEC0L
LOCAL USING XBDRSX0L
LOCAL USING MXDRAT0L
LOCAL USING UDDRMN0L
LOCAL USING UBDRMN0A
/* ‡Ò¯ËÙÓ‚Í‡
LOCAL USING MBMOMN0A
LOCAL USING MBZKMN0A
LOCAL USING MBVOMN0A
LOCAL USING UDDDMN0A
LOCAL USING UBODMN0A
LOCAL USING XPPBXX0A
/*
LOCAL
1 #DR-UP-START   (B16)
1 REDEFINE #DR-UP-START
2 DR-UP-ID       (P15)
2 DR-TRAIL       (B1)
1 #DR-UP-STOP    (B16)
1 REDEFINE #DR-UP-STOP
2 DR-UP-ID       (P15)
2 DR-TRAIL       (B1)
1 #DATE     (D)
1 #DATA-A   (A8)
1 REDEFINE #DATA-A
  2 #DATA-N   (N8)
/*1 #LEN-ELEMENT   (B4)
/*1 #ALLOC-COUNTER (B4)
1 SUPER-SB (B23)
1 REDEFINE SUPER-SB
  2 #OP-CL-ID    (P7)
  2 #AT-IS-INDEX (L)
  2 #AT-ATTR-ID  (P7)
  2 #AT-VALUE    (P15)
  2 #DT-INDEX    (P11)
1 #STACK-POS     (I4)
1 #CUR-TYPE-DOC  (P7)
1 #CUR-TYPE-REC  (P7)
1 #LEVELS        (L/1:5)
1 #FOUND         (L/1:5)
1 #NUMBER        (P10/1:5)
1 #RETAIN        (A8/1:5)
1 #LEVEL         (I4)
1 #SUBNUMBER     (P10)
1 #HEADER        (A50)
END-DEFINE
DEFINE SUBROUTINE MBZPFN0S
/* RESET
/*MOVE 0 TO LS-VO-ID LS-SUPPLIER-MO-ID LS-CUSTOMER-MO-ID LS-ZAKAZ-ID
/*CALL 'GTNX' MPXXFN0A.STACK-NUMBER
/*MOVE MPOSST0LS.LEN-ELEMENT TO #LEN-ELEMENT
/*MOVE MPOSST0LS.STACK-ALLOC-COUNT TO #ALLOC-COUNTER
/*CALL 'GTSX' #LEN-ELEMENT #ALLOC-COUNTER MPXXFN0A.STACK-NUMBER
/*CALL 'NULX' H'00000000' MPXXFN0A.STACK-NUMBER
PERFORM STACK-INIT
/*
MOVE "MBSPFN01" TO #RETAIN(1)
MOVE "MBSPFN02" TO #RETAIN(2)
MOVE "MBSPFN03" TO #RETAIN(3)
MOVE "MBSPFN04" TO #RETAIN(4)
MOVE "MBSPFN05" TO #RETAIN(5)
/*
#CUR-TYPE-DOC := MN-TYPE-NABOR(1)
#CUR-TYPE-REC := MN-TYPE-REC(1)
FOR #I = 1 TO 100
  IF #CUR-TYPE-REC NE MN-TYPE-REC(#I) THEN
     #CUR-TYPE-REC := MN-TYPE-REC(#I)
  END-IF
  IF #CUR-TYPE-DOC NE MN-TYPE-NABOR(#I) THEN
     PERFORM DOC-FIND
     #CUR-TYPE-DOC := MN-TYPE-NABOR(#I)
     FOR #J = 1 TO 5
        IF #NUMBER(#J) NE 0 THEN
           RELEASE SET #RETAIN(#J)
        END-IF
     END-FOR
     RESET #NUMBER(*) #LEVELS(*)
  END-IF
  IF MN-TYPE-NABOR(#I) EQ 0 THEN ESCAPE BOTTOM END-IF
  PERFORM DOC-RECORD-FIND
END-FOR
/*
/* ≈—À» Õ≈ «¿œŒÀÕ≈Õ —“≈ 
IF MPXXFN0A.STACK-LEN = 0
  RETURN-CODE := 2501
END-IF
/* MOVE MPOSST0LS.STACK-ALLOC-COUNT TO MPXXFN0A.STACK-COUNT
/* MOVE #STACK-POS TO MPXXFN0A.STACK-LEN
/*
DEFINE SUBROUTINE DOC-RECORD-FIND
/*  WRITE "FR" MN-LEVEL(#I) MN-TYPE-REC(#I) MN-CODE(#I,1) MN-ARIFM(#I)
/*             MN-VALUE-P(#I,1) MN-VALUE-P(#I,2) MN-VALUE-A(#I) (AL=40)
  #LEVEL := MN-LEVEL(#I)
  IF #LEVELS(#LEVEL) AND #NUMBER(#LEVEL) EQ 0 THEN
     ESCAPE ROUTINE
  END-IF
  MOVE TRUE TO #LEVELS(#LEVEL)
  /*
  MOVE MN-TYPE-REC(#I) TO DR-AS-SUPER-G.DR-TYPE-ID(1)
  MOVE TRUE TO DR-AS-SUPER-G.DR-AS-IS-INDEX(1)
  MOVE MN-CODE(#I,1) TO DR-AS-SUPER-G.DR-AS-ATTR-ID(1)
  MOVE MN-VALUE-A(#I) TO DR-AS-SUPER-G.DR-AS-VALUE(1)
  /*
  MOVE MN-TYPE-REC(#I) TO DR-AP-SUPER-G.DR-TYPE-ID(1)
  MOVE TRUE TO DR-AP-SUPER-G.DR-AP-IS-INDEX(1)
  MOVE MN-CODE(#I,1) TO DR-AP-SUPER-G.DR-AP-ATTR-ID(1)
  MOVE MN-VALUE-P(#I,1) TO DR-AP-SUPER-G.DR-AP-VALUE(1)
  /*
  MOVE MN-TYPE-REC(#I) TO DR-AP-SUPER-G.DR-TYPE-ID(2)
  MOVE TRUE TO DR-AP-SUPER-G.DR-AP-IS-INDEX(2)
  MOVE MN-CODE(#I,1) TO DR-AP-SUPER-G.DR-AP-ATTR-ID(2)
  MOVE MN-VALUE-P(#I,2) TO DR-AP-SUPER-G.DR-AP-VALUE(2)
  /*
  MOVE MN-TYPE-REC(#I) TO DR-AP-SUPER-G.DR-TYPE-ID(3)
  MOVE TRUE TO DR-AP-SUPER-G.DR-AP-IS-INDEX(3)
  MOVE MN-CODE(#I,2) TO DR-AP-SUPER-G.DR-AP-ATTR-ID(3)
  MOVE MN-VALUE-P(#I,1) TO DR-AP-SUPER-G.DR-AP-VALUE(3)
  /*
  DECIDE ON FIRST VALUE MN-ARIFM(#I)
     VALUE "SE"
        IF #NUMBER(#LEVEL) NE 0 THEN
FL5.
           FIND NUMBER UR-DOC-DATA-VIEW WITH #RETAIN(#LEVEL) AND
                           DR-AS-SUPER EQ DR-AS-SUPER(1)
                    RETAIN AS #RETAIN(#LEVEL)
           MOVE *NUMBER(FL5.) TO #NUMBER(#LEVEL)
        ELSE
FL6.
           FIND NUMBER UR-DOC-DATA-VIEW WITH  DR-AS-SUPER EQ DR-AS-SUPER(1)
                    RETAIN AS #RETAIN(#LEVEL)
           MOVE *NUMBER(FL6.) TO #NUMBER(#LEVEL)
        END-IF
     VALUE "TH"
        IF #NUMBER(#LEVEL) NE 0 THEN
FL1.
           FIND NUMBER UR-DOC-DATA-VIEW WITH #RETAIN(#LEVEL) AND
                           DR-AP-SUPER EQ DR-AP-SUPER(1) THRU DR-AP-SUPER(2)
                    RETAIN AS #RETAIN(#LEVEL)
           MOVE *NUMBER(FL1.) TO #NUMBER(#LEVEL)
        ELSE
FL2.
           FIND NUMBER UR-DOC-DATA-VIEW WITH
                           DR-AP-SUPER EQ DR-AP-SUPER(1) THRU DR-AP-SUPER(2)
                    RETAIN AS #RETAIN(#LEVEL)
           MOVE *NUMBER(FL2.) TO #NUMBER(#LEVEL)
        END-IF
     VALUE "EQ"
      IF MN-CODE(#I,2) EQ 0 THEN
        IF #NUMBER(#LEVEL) NE 0 THEN
FL3.
           FIND NUMBER UR-DOC-DATA-VIEW WITH #RETAIN(#LEVEL) AND
                           DR-AP-SUPER EQ DR-AP-SUPER(1)
                    RETAIN AS #RETAIN(#LEVEL)
           MOVE *NUMBER(FL3.) TO #NUMBER(#LEVEL)
        ELSE
FL4.
           FIND NUMBER UR-DOC-DATA-VIEW WITH  DR-AP-SUPER EQ DR-AP-SUPER(1)
                    RETAIN AS #RETAIN(#LEVEL)
           MOVE *NUMBER(FL4.) TO #NUMBER(#LEVEL)
        END-IF
      ELSE
        IF #NUMBER(#LEVEL) NE 0 THEN
FL7.
           FIND NUMBER UR-DOC-DATA-VIEW WITH #RETAIN(#LEVEL) AND
                          (DR-AP-SUPER EQ DR-AP-SUPER(1) OR
                             DR-AP-SUPER EQ DR-AP-SUPER(3))
                    RETAIN AS #RETAIN(#LEVEL)
           MOVE *NUMBER(FL7.) TO #NUMBER(#LEVEL)
        ELSE
FL8.
           FIND NUMBER UR-DOC-DATA-VIEW WITH  DR-AP-SUPER EQ DR-AP-SUPER(1) OR
                                              DR-AP-SUPER EQ DR-AP-SUPER(3)
                    RETAIN AS #RETAIN(#LEVEL)
           MOVE *NUMBER(FL8.) TO #NUMBER(#LEVEL)
        END-IF
      END-IF
     NONE VALUE
        IGNORE
  END-DECIDE
/*  WRITE #LEVEL #NUMBER(#LEVEL) #RETAIN(#LEVEL)
END-SUBROUTINE
/*
DEFINE SUBROUTINE DOC-FIND
/*  WRITE "FD" #CUR-TYPE-DOC #LEVELS(1) #NUMBER(1) #LEVELS(2) #NUMBER(2)
  IF #NUMBER(1) NE 0 THEN
     FIND UR-DOC-DATA-VIEW WITH #RETAIN(1)
        AT START OF DATA
           MOVE UR-DOC-DATA-VIEW.DR-TYPE-ID TO UDDDMN0A.DD-ID
           MOVE "READ" TO UDDDMN0A.DL-COMMAND
           PERFORM UDDDMN0S XXERX00A UDDDMN0A
           COMPRESS '«‡„ÛÁÍ‡ ‰ÓÍÛÏÂÌÚÓ‚' UDDDMN0A.DD-NAME INTO #HEADER
           INCLUDE XPPBIN0C "*NUMBER" "#HEADER"
        END-START
        INCLUDE XPPBST0C "*COUNTER"
        DECIDE ON FIRST VALUE UR-DOC-DATA-VIEW.DR-TX-STATUS
        VALUE 'N', 'D'
           IGNORE
        VALUE 'A'
           ESCAPE TOP
        NONE VALUE
           IGNORE
        END-DECIDE
        IF #LEVELS(2) THEN
           RESET #SUBNUMBER
           IF #NUMBER(2) NE 0 THEN
              MOVE UR-DOC-DATA-VIEW.DR-ID TO #DR-UP-START.DR-UP-ID
              MOVE H'00' TO #DR-UP-START.DR-TRAIL
              MOVE UR-DOC-DATA-VIEW.DR-ID TO #DR-UP-STOP.DR-UP-ID
              MOVE H'FF' TO #DR-UP-STOP.DR-TRAIL
FL10.
              FIND NUMBER UR-DOC-DATA-VIEW WITH
                    DR-CONT-SUPER EQ #DR-UP-START THRU #DR-UP-STOP AND #RETAIN(2)
              MOVE *NUMBER(FL10.) TO #SUBNUMBER
           END-IF
           IF #SUBNUMBER NE 0 THEN
              MOVE BY NAME UR-DOC-DATA-VIEW TO UBDRMN0A
              MOVE C*DR-AP-G TO UBDRMN0A.DR-AP-C
              MOVE C*DR-AS-G TO UBDRMN0A.DR-AS-C
              PERFORM DOC-PARSE
           END-IF
        ELSE
           MOVE BY NAME UR-DOC-DATA-VIEW TO UBDRMN0A
           MOVE C*DR-AP-G TO UBDRMN0A.DR-AP-C
           MOVE C*DR-AS-G TO UBDRMN0A.DR-AS-C
           PERFORM DOC-PARSE
       END-IF
     END-FIND
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE DOC-PARSE
  RESET STACK-REC-G
  MOVE UR-DOC-DATA-VIEW.DR-ID TO LS-DOC-ID
  MOVE UR-DOC-DATA-VIEW.DR-TYPE-ID TO LS-TYPE-ID
  MOVE UR-DOC-DATA-VIEW.OD-ID TO LS-OPERATION-ID
  INCLUDE XBDRSUAC "DC-NUMBER-ATTR-ID" "LS-NUM-DOC"
  INCLUDE XBDRSUDC "DC-DATE-ATTR-ID" "#DATE"
  MOVE EDITED #DATE (EM=YYYYMMDD) TO LS-DATE-A
  INCLUDE XBDRSUIC "DR-MO-IN-ATTR-ID" "LS-SUPPLIER-MO-ID"
  INCLUDE XBDRSUIC "DR-MO-OUT-ATTR-ID" "LS-CUSTOMER-MO-ID"
  INCLUDE XBDRSUIC "DR-VO-IN-ATTR-ID" "LS-VO-ID"
  IF LS-VO-ID EQ 0 THEN
     INCLUDE XBDRSUIC "DR-VO-OUT-ATTR-ID" "LS-VO-ID"
  END-IF
  IF LS-VO-ID EQ 0 THEN
     INCLUDE XBDRSUIC "DR-VO-ATTR-ID" "LS-VO-ID"
  END-IF
  INCLUDE XBDRSUIC "DR-ZK-ATTR-ID" "LS-ZAKAZ-ID"
/*
  MOVE FALSE TO MPOSST0L.LS-UNPACK
  PERFORM STACK-PUSH
 /* CALL 'RWSX' XI MPOSST0L.STRING(1) XW MPXXFN0A.STACK-NUMBER
/*  PERFORM STACK-READ
  CALL 'RWSX' MPOSST0L.STACK-POS MPOSST0L.STACK-REC-B(1)
              STACK-READ MPXXFN0A.STACK-NUMBER
/*  WRITE '='  MPOSST0L.STACK-POS '=' MPOSST0L.LS-SUPPLIER-MO-ID
END-SUBROUTINE
/*
INCLUDE XXSTMN3C "MPXXFN0A" "MPOSST0L-CONST" "MPOSST0L"
        "STACK-INIT" "STACK-FREE" "STACK-PUSH" "STACK-REALLOC"
/*        "SALDO-PUSH" "SALDO-READ" "SALDO-WRITE" "SALDO-LOCATE"
/*
INCLUDE XXERSY1C
END-SUBROUTINE
END


