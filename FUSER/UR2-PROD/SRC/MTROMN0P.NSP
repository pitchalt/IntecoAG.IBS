* >Natural Source Header 000000 /*<RO>>
* :NatName MTROMN0P
* :UID PAUL
* :Mode S
* :CP
* :Date 20070104
* :Time 1141000
* <Natural Source Header /*<<RO>
DEFINE DATA
LOCAL USING XXERX00A
LOCAL USING XXCTXX0A
LOCAL USING UXCSXX0A
/*
LOCAL USING MBMOMN0A
/*
LOCAL USING UETXMN0A
LOCAL USING UEOPPC0A
LOCAL USING MERHMN0A
LOCAL USING MERMMN0A
/*
LOCAL USING MERMLS0A
LOCAL
1 #I          (I4)
1 #COUNT      (N4)
1 #RH-ID-1    (P15)
1 #RM-ID-1    (P15)
1 #TEST-FAIL  (I2)
1 #TEST-PASS  (I2)
1 #TESTNAME   (A70)
END-DEFINE
/*
XXCTXX0A.OG-ID := 1000
XXCTXX0A.VO-OG-ID := 1000
XXCTXX0A.MO-OG-ID := 1000
XXCTXX0A.MT-OG-ID := 1000
XXCTXX0A.TX-NOT-MANAGED := TRUE
/*
#TESTNAME := 'LOCATE MO'
ADD 1 TO #TEST-PASS
MOVE 15 TO MBMOMN0A.MO-CODE
MOVE "LOCATE" TO MBMOMN0A.BL-COMMAND
PERFORM MBMOMN0S XXERX00A XXCTXX0A MBMOMN0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*
XXCTXX0A.US-MO-ID := MBMOMN0A.MO-ID
/*
#TESTNAME := 'LOCATE MO'
ADD 1 TO #TEST-PASS
MOVE 16 TO MBMOMN0A.MO-CODE
MOVE "LOCATE" TO MBMOMN0A.BL-COMMAND
PERFORM MBMOMN0S XXERX00A XXCTXX0A MBMOMN0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*
#TESTNAME := 'OPEN TRANSACTION 1'
ADD 1 TO #TEST-PASS
UETXMN0A.TX-USER := *USER
UETXMN0A.ME-COMMAND := 'OPEN'
PERFORM UETXMN0S XXERX00A XXCTXX0A UETXMN0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*
#TESTNAME := 'INIT HEADER'
ADD 1 TO #TEST-PASS
MERHMN0A.ME-COMMAND := 'INIT'
PERFORM MERHMN0S XXERX00A XXCTXX0A MERHMN0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*
#TESTNAME := 'ADD HEADER 1'
ADD 1 TO #TEST-PASS
MERHMN0A.RO-NUMBER := "TST123"
MERHMN0A.OUT-MO-ID := MBMOMN0A.MO-ID
MERHMN0A.ZK-ID := 141
MERHMN0A.ME-COMMAND := 'ADD'
PERFORM MERHMN0S XXERX00A XXCTXX0A MERHMN0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
#RH-ID-1 := MERHMN0A.RO-ID
/*
#TESTNAME := 'update HEADER 1'
ADD 1 TO #TEST-PASS
MERHMN0A.ME-COMMAND := "UPDATE"
PERFORM MERHMN0S XXERX00A XXCTXX0A MERHMN0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*
XXCTXX0A.OD-ID := 302
XXCTXX0A.IS-OP-DEBUG := FALSE
/*
ADD 1 TO #TEST-PASS
#TESTNAME := 'limit POSITION 1'
MERMMN0A.RO-ID := #RH-ID-1
MERMMN0A.MT-ID := 3701
MERMMN0A.ME-COMMAND := "CHECK-LIM"
PERFORM MERMMN0S XXERX00A XXCTXX0A MERMMN0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*
/*WRITE 'limit' MERMMN0A.MT-ID MERMMN0A.BASE-COL MERMMN0A.BASE-COL-LIMIT
/*
ADD 1 TO #TEST-PASS
#TESTNAME := 'add POSITION 1'
MERMMN0A.RO-ID := #RH-ID-1
MERMMN0A.MT-ID := 3701
MERMMN0A.BASE-COL := 8
MERMMN0A.ME-COMMAND := "ADD"
PERFORM MERMMN0S XXERX00A XXCTXX0A MERMMN0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*
/*WRITE
/*MERMMN0A.RM-ID MERMMN0A.RO-ID /
/*MERMMN0A.MT-ID MERMMN0A.MT-CODE MERMMN0A.MT-NAME (AL=40) /
/*MERMMN0A.CENA-SUMMA MERMMN0A.CENA-SUMMA-LIMIT /
/*MERMMN0A.BASE-COL MERMMN0A.BASE-COL-LIMIT MERMMN0A.BASE-EI-ID
/*MERMMN0A.BASE-EI-CODE MERMMN0A.BASE-EI-SHORT-NAME
#RM-ID-1 := MERMMN0A.RM-ID
/*
ADD 1 TO #TEST-PASS
#TESTNAME := 'udpate POSITION 1'
MERMMN0A.BASE-COL := 2
MERMMN0A.ME-COMMAND := "UPDATE"
PERFORM MERMMN0S XXERX00A XXCTXX0A MERMMN0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*WRITE "UPDATE"
/*MERMMN0A.RM-ID MERMMN0A.RO-ID /
/*MERMMN0A.MT-ID MERMMN0A.MT-CODE MERMMN0A.MT-NAME (AL=40) /
/*MERMMN0A.CENA-SUMMA MERMMN0A.CENA-SUMMA-LIMIT /
/*MERMMN0A.BASE-COL MERMMN0A.BASE-COL-LIMIT MERMMN0A.BASE-EI-ID
/*MERMMN0A.BASE-EI-CODE MERMMN0A.BASE-EI-SHORT-NAME
/*
ADD 1 TO #TEST-PASS
#TESTNAME := 'read POSITION 1'
RESET MERMMN0A
MERMMN0A.RM-ID := #RM-ID-1
MERMMN0A.ME-COMMAND := "READ"
PERFORM MERMMN0S XXERX00A XXCTXX0A MERMMN0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*
ADD 1 TO #TEST-PASS
#TESTNAME := 'limit POSITION 1'
MERMMN0A.ME-COMMAND := "CHECK-LIM"
PERFORM MERMMN0S XXERX00A XXCTXX0A MERMMN0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*WRITE "READ LIM"
/*MERMMN0A.RM-ID MERMMN0A.RO-ID /
/*MERMMN0A.MT-ID MERMMN0A.MT-CODE MERMMN0A.MT-NAME (AL=40) /
/*MERMMN0A.GM-ID MERMMN0A.PR-ID MERMMN0A.PR-CODE /
/*MERMMN0A.CENA MERMMN0A.CENA-SUMMA MERMMN0A.CENA-SUMMA-LIMIT /
/*MERMMN0A.COL MERMMN0A.COL-LIMIT MERMMN0A.EI-ID MERMMN0A.EI-CODE MERMMN0A.EI-SHORT-NAME /
/*MERMMN0A.BASE-COL MERMMN0A.BASE-COL-LIMIT MERMMN0A.BASE-EI-ID
/*MERMMN0A.BASE-EI-CODE MERMMN0A.BASE-EI-SHORT-NAME
/*
FOR #I = 1 TO 9
  ADD 1 TO #TEST-PASS
  MOVE #I TO #COUNT
  COMPRESS 'add POSITION' #COUNT INTO #TESTNAME
  RESET MERMMN0A.RM-ID
  MERMMN0A.RO-ID := #RH-ID-1
  MERMMN0A.MT-ID := 3701
  MERMMN0A.BASE-COL := 1
  MERMMN0A.ME-COMMAND := "ADD"
  PERFORM MERMMN0S XXERX00A XXCTXX0A MERMMN0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/*  WRITE 'pos' #COUNT MERMMN0A.BASE-COL MERMMN0A.BASE-COL-LIMIT MERMMN0A.BASE-EI-ID
/*  MERMMN0A.BASE-EI-CODE MERMMN0A.BASE-EI-SHORT-NAME
END-FOR
/*
ADD 1 TO #TEST-PASS
#TESTNAME := 'READ LIST'
MERMLS0A.RO-ID := #RH-ID-1
MERMLS0A.ME-COMMAND := 'TOP'
MERMLS0A.DR-LIST-READ := 3
RESET #COUNT
REPEAT
  PERFORM MERMLS0S XXERX00A XXCTXX0A MERMLS0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
  MERMLS0A.ME-COMMAND  := 'NEXT'
  FOR #I = 1 TO MERMLS0A.DR-LIST-C
     ADD 1 TO #COUNT
/*     WRITE #I MERMLS0A.RM-ID(#I) MERMLS0A.RM-SORT(#I)
/*        MEPMLS0A.MT-CODE(#I) MEPMLS0A.MT-NAME(#I) (AL=50)
     MOVE MERMLS0A.RM-ID(#I) TO MERMMN0A.RM-ID
     MOVE "READ" TO MERMMN0A.ME-COMMAND
     PERFORM MERMMN0S XXERX00A XXCTXX0A MERMMN0A UXCSXX0A
     IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
     IF #COUNT > 1 THEN
        MOVE MERMMN0A.BASE-COL TO MERMMN0A.CONF-COL
        IF #COUNT < 5 THEN
           ADD 1 TO MERMMN0A.CONF-COL
           MOVE "CONFIRM" TO MERMMN0A.ME-COMMAND
           PERFORM MERMMN0S XXERX00A XXCTXX0A MERMMN0A UXCSXX0A
           IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
           /*
           ADD 1 TO MERMMN0A.BASE-COL
           MOVE "UPDATE" TO MERMMN0A.ME-COMMAND
           PERFORM MERMMN0S XXERX00A XXCTXX0A MERMMN0A UXCSXX0A
           IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
        ELSE
           MOVE "CONFIRM" TO MERMMN0A.ME-COMMAND
           PERFORM MERMMN0S XXERX00A XXCTXX0A MERMMN0A UXCSXX0A
           IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
        END-IF
     END-IF
/*     WRITE MERMMN0A.RM-ID MERMMN0A.CONFIRMED
  END-FOR
  UNTIL MERMLS0A.IS-BOTTOM
END-REPEAT
/*WRITE MERMLS0A.DT-COL-RECORD MERMLS0A.DT-CENA-SUMMA
IF #COUNT NE 10 THEN
  ADD 1 TO #TEST-FAIL
  WRITE 'ÎØÈÁÊÀ ÒÅÑÒ' #TEST-PASS 'ÊÎËÈ×ÅÑÒÂÎ Â ÑÏÈÑÊÅ ÍÅ ÐÀÂÍÎ 10'
END-IF
/* Ïîëíîå ïîäòâåðæäåíèå
ADD 1 TO #TEST-PASS
#TESTNAME := 'confirm full'
MOVE "READ" TO MERHMN0A.ME-COMMAND
PERFORM MERHMN0S XXERX00A XXCTXX0A MERHMN0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
WRITE MERHMN0A.IS-DC-CONFIRMED
/* ×èòàåì ïîçèöèþ
MOVE #RM-ID-1 TO MERMMN0A.RM-ID
MOVE "READ" TO MERMMN0A.ME-COMMAND
PERFORM MERMMN0S XXERX00A XXCTXX0A MERMMN0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/* ÏÎäòâåðæäàåì
MOVE MERMMN0A.BASE-COL TO MERMMN0A.CONF-COL
MOVE "CONFIRM" TO MERMMN0A.ME-COMMAND
PERFORM MERMMN0S XXERX00A XXCTXX0A MERMMN0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
/* Ïðîâåð åì çàãîëîâîê
MOVE "READ" TO MERHMN0A.ME-COMMAND
PERFORM MERHMN0S XXERX00A XXCTXX0A MERHMN0A UXCSXX0A
IF RETURN-CODE NE 0 THEN PERFORM DUMP-ERROR END-IF
WRITE MERHMN0A.IS-DC-CONFIRMED
/*
BACKOUT TRANSACTION
WRITE 'ÂÑÅÃÎ ÒÅÑÒÎÂ' #TEST-PASS 'ÎØÈÁÎ×ÍÛÕ' #TEST-FAIL
DEFINE SUBROUTINE DUMP-ERROR
  ADD 1 TO #TEST-FAIL
  WRITE 'ÎØÈÁÊÀ ÒÅÑÒ' #TEST-PASS #TESTNAME
  PERFORM XPERVW0S XXERX00A
/*  PRINT RETURN-CODE ERROR-ADDITION(1) ERROR-ADDITION(2)
/*  WRITE ERROR-MODULE ERROR-LINE ERROR-NUMBER /
/*        ERROR-STACK-MODULE(1) ERROR-STACK-LINE(1) /
/*        ERROR-STACK-MODULE(2) ERROR-STACK-LINE(2) /
/*        ERROR-STACK-MODULE(3) ERROR-STACK-LINE(3) /
/*        ERROR-STACK-MODULE(4) ERROR-STACK-LINE(4) /
/*        ERROR-STACK-MODULE(5) ERROR-STACK-LINE(5)

END-SUBROUTINE
END


