* >Natural Source Header 000000 /*<RO>>
* :NatName MEPOPL0S
* :UID ARMK01
* :Mode S
* :CP
* :Date 20080228
* :Time 1819000
* <Natural Source Header /*<<RO>
/***********************************************************************
/*
/* СИСТЕМА:
/* ПРОГРАММА:
/*
/* РАЗРАБОТЧИК:
/* ДАТА ВЫПУСКА:
/*
/* НАЗВАНИЕ:
/* КОМАНДЫ:
/*
/* ИСПРАВЛЕНИЯ:
/*
/***********************************************************************
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING XXCTXX0A
PARAMETER USING MEPOPLSA
PARAMETER USING MEPOPL0A
PARAMETER USING UXCSXX0A
/*
LOCAL USING XXXXEC0L
/* Основной стек
LOCAL USING MEPOPLSL
/* Стек сальдо
LOCAL USING MBMTSA1A
LOCAL USING MBSAST0A
LOCAL USING MBSAST0L
/* Доступ к документу
/*LOCAL USING MBRLHM0A
LOCAL USING MBRXPM0A
LOCAL USING MBDRXL0A
LOCAL USING MBPMMN0A
LOCAL USING MBPMLS0A
/* ЛЗК
LOCAL USING MBLKHM0A
/*
LOCAL USING MBMOMN0A
/*
LOCAL USING UBODMN0A
LOCAL USING MBPHMN0A
LOCAL USING MDMZMN0L
LOCAL USING MBMTMN0A
LOCAL USING MBGMMN0A
LOCAL USING MXPXXODL
LOCAL USING XBSOMN0A
LOCAL USING XXSOXX0L
LOCAL
1 #I       (I4)
1 #J       (I4)
1 #K       (I4)
/*1 rx-OD-TYPE       (N7)
/*1 REDEFINE rx-OD-TYPE
/*2 SKIP           (N4)
/*2 ZK-USE-OST     (N1)
/*2 ZK-REQUIRED    (N1)
/*2 UNCOMPRESS     (N1)
END-DEFINE
DEFINE SUBROUTINE MEPOPL0S
RESET XXERX00A
/*
DECIDE ON FIRST VALUE MEPOPL0A.ME-COMMAND
VALUE "LOAD"
  PERFORM STACK-LOAD
VALUE "FREE"
  PERFORM STACK-FREE
NONE VALUE
  MOVE MBMTSA1A.BL-COMMAND TO ERROR-ADDITION(1)
  *ERROR-NR := EC-UNKNOW-COMMAND
END-DECIDE
/*
DEFINE SUBROUTINE STACK-LOAD
  PERFORM STACK-INIT
  /* читаем операцию
  MOVE XXCTXX0A.OD-ID TO UBODMN0A.OD-ID
  IF XXCTXX0A.OD-ID NE 0 THEN
    MOVE "READ" TO UBODMN0A.BL-COMMAND
    PERFORM UBODMN0S XXERX00A XXCTXX0A UBODMN0A UXCSXX0A
    IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
    MOVE UBODMN0A.OD-IT-ID(1) TO PX-OD-TYPE
  END-IF
  MOVE MEPOPL0A.STORNO-PO-ID TO MBPHMN0A.PO-ID
  MOVE "READ" TO MBPHMN0A.BL-COMMAND
  PERFORM MBPHMN0S XXERX00A XXCTXX0A MBPHMN0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /* Читаем записи сторнируемого прихода
  MBPMLS0A.PO-ID := MEPOPL0A.STORNO-PO-ID
  MBPMLS0A.BL-COMMAND := 'TOP'
  MBPMLS0A.DR-LIST-READ := 15
  REPEAT
     PERFORM MBPMLS0S XXERX00A XXCTXX0A MBPMLS0A UXCSXX0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MBPMLS0A.BL-COMMAND  := "NEXT"
     FOR #I = 1 TO MBPMLS0A.DR-LIST-C
        MBPMMN0A.PM-ID := MBPMLS0A.PM-ID(#I)
        MBPMMN0A.BL-COMMAND := "READ"
        PERFORM MBPMMN0S XXERX00A XXCTXX0A MBPMMN0A UXCSXX0A
        IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
/*        WRITE MBPMMN0A.PM-ID MBPMMN0A.MT-ID
        RESET MEPOPLSL.STACK-REC-G MEPOPLSL.STACK-KEY-G
        MOVE BY NAME MBPMMN0A TO MEPOPLSL.STACK-REC-G
        MOVE MBPMMN0A.PO-ID TO MEPOPLSL.STORNO-PO-ID
        MOVE MEPOPL0A.PO-ID TO MEPOPLSL.PO-ID
        /*
        PERFORM SALDO-LOAD
        /*
        PERFORM STACK-PUSH
        /*
     END-FOR
     UNTIL MBPMLS0A.IS-BOTTOM
  END-REPEAT
  /* Читаем записи данного прихода
  MBPMLS0A.PO-ID := MEPOPL0A.PO-ID
  MBPMLS0A.BL-COMMAND := 'TOP'
  MBPMLS0A.DR-LIST-READ := 15
  REPEAT
     PERFORM MBPMLS0S XXERX00A XXCTXX0A MBPMLS0A UXCSXX0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MBPMLS0A.BL-COMMAND  := "NEXT"
     FOR #I = 1 TO MBPMLS0A.DR-LIST-C
        MBPMMN0A.PM-ID := MBPMLS0A.PM-ID(#I)
        MBPMMN0A.BL-COMMAND := "READ"
        PERFORM MBPMMN0S XXERX00A XXCTXX0A MBPMMN0A UXCSXX0A
        IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
/*        WRITE *PROGRAM MBPMMN0A.STORNO-POM-ID
        IF MBPMMN0A.STORNO-POM-ID NE 0 THEN
           MOVE MBPMMN0A.STORNO-POM-ID TO MEPOPLSL.PM-ID
           PERFORM STACK-LOCATE
           IF RETURN-CODE EQ 0 THEN
/*              WRITE 'FOUND'
              PERFORM STACK-READ
              MOVE MBPMMN0A.PM-ID TO MEPOPLSL.DC-PM-ID
              MOVE MBPMMN0A.BASE-COL TO MEPOPLSL.DC-BASE-COL
              MOVE MBPMMN0A.DR-COL TO MEPOPLSL.DC-PRIH-COL
              MOVE MBPMMN0A.DR-CENA-SUMMA TO MEPOPLSL.DC-CENA-SUMMA
              MOVE MBPMMN0A.DR-NDS-SUMMA TO MEPOPLSL.DC-NDS-SUMMA
              PERFORM STACK-WRITE
           ELSE
/*              WRITE 'NOT FOUND'
              RESET RETURN-CODE
           END-IF
        END-IF
        /*
     END-FOR
     UNTIL MBPMLS0A.IS-BOTTOM
  END-REPEAT
END-SUBROUTINE
/*
DEFINE SUBROUTINE SALDO-LOAD
  /* Считываем сальдо
  PERFORM SALDO-STACK-INIT
  /* читаем лимит остатков
  RESET MBMTSA1A
  RESET MEPOPLSL.OST-BALC-SUMMA MEPOPLSL.OST-BASE-COL MEPOPLSL.OST-PRIH-COL
  MOVE UBODMN0A.OD-IT-ID(2) TO MBMTSA1A.IT-ID(1)
  MOVE MBPHMN0A.MO-ID TO MBMTSA1A.MO-ID
/*  MOVE MBPHMN0A.ZK-ID TO MBMTSA1A.ZK-ID
  MOVE MBPMMN0A.MT-ID  TO MBMTSA1A.MT-ID
  MOVE MBPMMN0A.PR-ID  TO MBMTSA1A.PR-ID
/*  WRITE MBMTSA1A.IT-ID(1) MBMTSA1A.MO-ID MBMTSA1A.ZK-ID
/*        MBMTSA1A.MT-ID MBMTSA1A.PR-ID
  MOVE "LIFO" TO MBMTSA1A.BL-COMMAND
  PERFORM MBMTSA1S XXERX00A XXCTXX0A MBSAST0A MBMTSA1A UXCSXX0A
  IF RETURN-CODE NE 0 THEN
     IF RETURN-CODE EQ EC-OBJECT-NOT-FOUND THEN
        RESET RETURN-CODE
     ELSE
        *ERROR-NR := EC-QUIT-STACK-TRACE
     END-IF
  END-IF
  FOR #J = 1 TO MBSAST0A.STACK-LEN
     MOVE #J TO MBSAST0L.STACK-POS PERFORM SALDO-READ
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     IF MBSAST0L.BALC-SUMMA = 0 AND MBSAST0L.BASE-COL = 0 AND
        MBSAST0L.PRIH-COL = 0 THEN
        ESCAPE TOP
     END-IF
     ADD MBSAST0L.BALC-SUMMA TO MEPOPLSL.OST-BALC-SUMMA
     ADD MBSAST0L.BASE-COL TO MEPOPLSL.OST-BASE-COL
     ADD MBSAST0L.PRIH-COL TO MEPOPLSL.OST-PRIH-COL
  END-FOR
  /*
  PERFORM SALDO-STACK-FREE
  /*
END-SUBROUTINE
/*
/* Управление стеком сальдо
INCLUDE XXSTMN4C "MBSAST0A" "MBSAST0L-CONST" "MBSAST0L"
        "SALDO-STACK-INIT" "SALDO-STACK-FREE" "SALDO-STACK-REALLOC"
        "SALDO-PUSH" "SALDO-READ" "SALDO-WRITE" "SALDO-LOCATE"
/* Управление основным стеком
INCLUDE XXSTMN4C "MEPOPLSA" "MEPOPLSL-CONST" "MEPOPLSL"
        "STACK-INIT" "STACK-FREE" "STACK-REALLOC"
        "STACK-PUSH" "STACK-READ" "STACK-WRITE" "STACK-LOCATE"
/*
INCLUDE XXERSY1C
END-SUBROUTINE
END
