* >Natural Source Header 000000 /*<RO>>
* :NatName MBROXA0S
* :UID NAT003
* :Mode S
* :CP
* :Date 20110629
* :Time 1425000
* <Natural Source Header /*<<RO>
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING XXCTXX0A
PARAMETER USING MBRHMN0A
PARAMETER USING UXCSXX0A
/*
LOCAL USING XXXXEC0L
LOCAL USING UDDRLS0L
LOCAL USING MERHMN0A
LOCAL USING MERMMN0A
LOCAL USING MBROPM0A
LOCAL USING MBPRMN0A
LOCAL USING MBMOMN0A
/*
LOCAL USING ASUMEND
LOCAL USING DOCUMENT
LOCAL USING HISTORY
LOCAL USING OSTATKI
LOCAL USING KDFL
LOCAL USING LCLZKL
LOCAL USING VIEW_REC
/*
LOCAL
1 #DOC  (I4)
1 #LINE (I4)
1 #I    (I4)
1 #J    (I4)
1 #K    (I4)
/*
1 #IS-OD (L)
/*
1 #DOC-LOCATE    (P15)
1 #CUR-DOC       (P15)
1 #CUR-DOC-ISN   (P15)
1 #CUR-HIST-ISN  (P15)
/*
1 ENDZAP(A9)
1 REDEFINE ENDZAP
  2 OG_F(N5)
  2 TYPEZAP(A2)
  2 TYPEDOC(A2)
/*
1 #DR-CONT (1:2)
2 DR-CONT-B (B16)
2 REDEFINE DR-CONT-B
3 DR-UP-ID (P15)
3 DR-TYPE-ID (P7)
3 DR-SORT (P7)
/*
1 #DT-A (A8)
1 REDEFINE #DT-A
2 #DT-N (N8)
1 REDEFINE #DT-A
2 #DT-YY1 (A2)
2 #DT-YY2 (A2)
2 #DT-MM  (A2)
/*
1 #DC-PACKAGE (N5)
/*
1 #TY      (A2)
1 REDEFINE #TY
2 #TY-IN   (A1)
2 #TY-OUT  (A1)
/*
 /*
 1 REC(A50)
 1 REDEFINE REC
 2 RSY(A4)  2 ROG(N5)  2 RTY(A2)  2 RDT(N8) 2 RND(N6) 2 RNUM(P11)
END-DEFINE
DEFINE SUBROUTINE MBROXA0S
RESET XXERX00A
/*
MOVE MBRHMN0A.RO-ID TO MERHMN0A.RO-ID
MOVE "READ" TO MERHMN0A.ME-COMMAND
PERFORM MERHMN0S XXERX00A XXCTXX0A MERHMN0A UXCSXX0A
IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
/*
IF NOT MERHMN0A.IS-DC-CONFIRMED THEN
  ESCAPE ROUTINE
END-IF
/*
IF NOT (MERHMN0A.IN-MO-CODE EQ 1 OR EQ 2 OR EQ 3
OR EQ 4 OR EQ 5 OR EQ 6 OR EQ 7 OR EQ 8 OR EQ 12 OR = 14 ) THEN
  ESCAPE ROUTINE
END-IF
IF MERHMN0A.IN-MO-ID EQ MERHMN0A.OUT-MO-ID THEN
  ESCAPE ROUTINE
END-IF
/*
     MOVE MERHMN0A.IN-MO-ID TO MBMOMN0A.MO-ID
     MOVE "READ" TO MBMOMN0A.BL-COMMAND
     PERFORM MBMOMN0S XXERX00A XXCTXX0A MBMOMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE MBMOMN0A.MO-TYPE TO #TY-IN
     /*
     MOVE MERHMN0A.OUT-MO-ID TO MBMOMN0A.MO-ID
     MOVE "READ" TO MBMOMN0A.BL-COMMAND
     PERFORM MBMOMN0S XXERX00A XXCTXX0A MBMOMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE MBMOMN0A.MO-TYPE TO #TY-OUT
/*
IF #TY NE "SL" THEN ESCAPE ROUTINE END-IF
/*
FOR #DOC = 1 TO 10
  IF MBRHMN0A.DR-ASUM-DOC(#DOC) NE 0 THEN
     PERFORM PO-REMOVE
  ELSE
     ESCAPE BOTTOM
  END-IF
END-FOR
/*
PERFORM PO-ADD
/*
ADD 1 TO #DOC
FOR #DOC = #DOC TO 10
  RESET MBRHMN0A.DR-ASUM-DOC(#DOC)
END-FOR
/*
DEFINE SUBROUTINE PO-REMOVE
FD.
  FIND DOCUMENT WITH NUM_ZAP EQ MBRHMN0A.DR-ASUM-DOC(#DOC) AND
                     OG-F EQ 1000
     IF *NUMBER(FD.) NE 1 THEN
        MOVE *NUMBER(FD.) TO ERROR-ADDITION(1)
        *ERROR-NR := EC-RECORD-COUNT-MISMATCH
     END-IF
      REC.RSY := "ASUM" REC.ROG := 1000
      REC.RNUM := NUM_ZAP REC.RTY := TY-F
      REC.RND := ND-F  REC.RDT := DT-F
      FIND VIEW_REC ASUM_DOC = REC
         ACCEPT VIEW_REC.KD-F EQ 1000
         DELETE
      END-FIND
     MOVE DOCUMENT.OG-F TO KEYHISTORY.KEYOG
     MOVE DOCUMENT.NUM_ZAP TO KEYHISTORY.KEYNZ
     MOVE DOCUMENT.TY-F TO KEYHISTORY.KEYTY
     MOVE DOCUMENT.ND-F TO KEYHISTORY.KEYND
     MOVE DOCUMENT.DT-F TO KEYHISTORY.KEYDT
FH.
     FIND HISTORY WITH UNICUM_DOP EQ KEYHISTORY
        IF FALSE THEN
           UPDATE
        END-IF
     END-FIND
     IF *NUMBER(FH.) NE 1 THEN
         MOVE *NUMBER TO ERROR-ADDITION(1)
         *ERROR-NR := EC-RECORD-COUNT-MISMATCH
     END-IF
     FOR #LINE = C*ST-F TO 1 STEP -1
        IF DOCUMENT.KM-F(#LINE) EQ " " THEN ESCAPE TOP END-IF
        IF IS-DR-DEBUG THEN
           WRITE "REMOVE" DOCUMENT.NUM_ZAP DOCUMENT.ND-F DOCUMENT.DT-F DOCUMENT.OP-F
                 #LINE DOCUMENT.KM-F(#LINE) DOCUMENT.SUMM_OST(#LINE)
                 DOCUMENT.KL-F(#LINE)
        END-IF
FO.
        FIND OSTATKI WITH KP-F EQ DOCUMENT.KP-F(#LINE) AND
                          MAT-OT EQ DOCUMENT.OP-F AND
                          COD-MAT EQ DOCUMENT.KM-F(#LINE)
           IF NO RECORD FOUND
              *ERROR-NR := EC-OBJECT-NOT-FOUND
           END-NOREC
           IF *NUMBER(FO.) NE 1 THEN
              MOVE *NUMBER(FO.) TO ERROR-ADDITION(1)
              *ERROR-NR := EC-RECORD-COUNT-MISMATCH
           END-IF
           IF IS-DR-DEBUG THEN
              WRITE "OST ADD" OSTATKI.MAT-OT OSTATKI.COD-MAT
                    OSTATKI.SUMMA OSTATKI.SRED-COL
           END-IF
           ADD SUMM_OST(#LINE) TO OSTATKI.SUMMA
           ADD KL-F(#LINE) TO OSTATKI.SRED-COL
           UPDATE
        END-FIND
     END-FOR
FH1.
     FIND HISTORY WITH UNICUM_DOP EQ KEYHISTORY
        DELETE (FH1.)
     END-FIND
     DELETE (FD.)
  END-FIND
END-SUBROUTINE
/*
DEFINE SUBROUTINE PO-ADD
  RESET #LINE #CUR-DOC
  MOVE 1 TO #DOC
  MOVE MBRHMN0A.RO-ID TO #DR-CONT.DR-UP-ID(1)
  MOVE 1602 TO #DR-CONT.DR-TYPE-ID(1)
  MOVE 0 TO #DR-CONT.DR-SORT(1)
  MOVE MBRHMN0A.RO-ID TO #DR-CONT.DR-UP-ID(2)
  MOVE 1602 TO #DR-CONT.DR-TYPE-ID(2)
  MOVE 9999999 TO #DR-CONT.DR-SORT(2)
/*------------
  FIND UR-DOC-DATA-LIST WITH
           DR-CONT-SUPER EQ DR-CONT-B(1) THRU DR-CONT-B(2)
     MOVE UR-DOC-DATA-LIST.DR-ID TO MERMMN0A.RM-ID
     MOVE "READ" TO MERMMN0A.ME-COMMAND
     PERFORM MERMMN0S XXERX00A XXCTXX0A MERMMN0A UXCSXX0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
/*------------
  MOVE MERMMN0A.RM-ID TO #DR-CONT.DR-UP-ID(1)
  MOVE 1603 TO #DR-CONT.DR-TYPE-ID(1)
  MOVE 0 TO #DR-CONT.DR-SORT(1)
  MOVE MERMMN0A.RM-ID  TO #DR-CONT.DR-UP-ID(2)
  MOVE 1603 TO #DR-CONT.DR-TYPE-ID(2)
  MOVE 9999999 TO #DR-CONT.DR-SORT(2)
  FIND UR-DOC-DATA-LIST WITH
           DR-CONT-SUPER EQ DR-CONT-B(1) THRU DR-CONT-B(2)
/*     WRITE UR-DOC-DATA-LIST.DR-UP-ID UR-DOC-DATA-LIST.DR-ID
     MOVE UR-DOC-DATA-LIST.DR-ID TO MBROPM0A.ROP-ID
     MOVE "READ" TO MBROPM0A.BL-COMMAND
     PERFORM MBROPM0S XXERX00A XXCTXX0A MBROPM0A UXCSXX0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
/*
     MOVE MBROPM0A.PR-ID TO MBPRMN0A.PR-ID
     MOVE "READ" TO MBPRMN0A.BL-COMMAND
     PERFORM MBPRMN0S XXERX00A XXCTXX0A MBPRMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     IF MBPRMN0A.PR-ASUM-INT-NUM EQ 0 THEN
        *ERROR-NR := EC-OBJECT-ATTRIBUTE-REQUIRED
     END-IF
     PERFORM PO-LOCATE
/*
GD.
     GET DOCUMENT #CUR-DOC-ISN
GH.
     GET HISTORY #CUR-HIST-ISN
     ADD 1 TO DOCUMENT.N_STR
     MOVE DOCUMENT.N_STR TO #LINE
     IF DOCUMENT.N_STR > 18 THEN
        ADD 1 TO #DOC
        IF #DOC > 20 THEN
           *ERROR-NR := EC-NUMERIC-OVERFLOW
        END-IF
     END-IF
FM.
     FIND ASUM-KODIF-FILE WITH INT-NUM-KM EQ MERMMN0A.MT-ID
     END-FIND
     IF *NUMBER(FM.) NE 1 THEN
        *ERROR-NR := EC-RECORD-COUNT-MISMATCH
     END-IF
FZ.
        FIND ZAKAZ WITH INT-NUM-ZK EQ MBRHMN0A.ZK-ID
        END-FIND
        IF *NUMBER(FZ.) NE 1 THEN
           *ERROR-NR := EC-RECORD-COUNT-MISMATCH
        END-IF
     MOVE ASUM-KODIF-FILE.KM-F TO DOCUMENT.KM-F(#LINE)
     MOVE ASUM-KODIF-FILE.ML-F TO DOCUMENT.TYPE(#LINE)
     MOVE ASUM-KODIF-FILE.GR-F TO DOCUMENT.GROUP(#LINE)
     MOVE ASUM-KODIF-FILE.EI-F TO DOCUMENT.EI-F(#LINE)
     MOVE MBROPM0A.BALC-SUMMA TO DOCUMENT.SUMM_OST(#LINE)
     MOVE MBROPM0A.BASE-COL TO DOCUMENT.KL-F(#LINE)
     MOVE MBPRMN0A.PR-ASUM-INT-NUM TO KPR_ND
     MOVE MBPRMN0A.PR-ASUM-LINE TO KPR_STR
     MOVE KPR TO DOCUMENT.KP-F(#LINE)
     MOVE "*" TO DOCUMENT.MANUAL(#LINE)
     MOVE "XXX X X" TO CRIT_IN(#LINE)
     MOVE "XXX X X" TO CRIT_OUT(#LINE)
     MOVE MBROPM0A.DT-ID TO DOCUMENT.DT-EKSP(#LINE)
     RESET ZN-F(#LINE)
     MOVE ASUM-KODIF-FILE.BS-F TO SCH-MAT-IN(#LINE)
     RESET SCH-MAT-OUT(#LINE)
     MOVE MBROPM0A.BALC-SUMMA TO SUMM_STR(#LINE)
     MOVE MBROPM0A.BALC-SUMMA TO SUMMA1 (#LINE)
     RESET DOCUMENT.SUMMA2(#LINE) DOCUMENT.SUMMA3(#LINE)
           DOCUMENT.SUMMA4(#LINE)
           DOCUMENT.SUMMA5(#LINE) DOCUMENT.SUMMA6(#LINE)
           DOCUMENT.SUMMA7(#LINE) DOCUMENT.SUMMA8(#LINE)
           DOCUMENT.SUMMA9(#LINE) DOCUMENT.SUMMA10(#LINE)
           DOCUMENT.K_SPIS(#LINE)
     IF IS-DR-DEBUG THEN
        WRITE "ADD" DOCUMENT.NUM_ZAP DOCUMENT.ND-F DOCUMENT.DT-F DOCUMENT.OP-F
              #LINE DOCUMENT.KM-F(#LINE) DOCUMENT.SUMM_OST(#LINE)
              DOCUMENT.KL-F(#LINE)
     END-IF
     UPDATE (GD.)
     /*
     KOR_PATTERN.PSCHET_DB := -1 * ZAKAZ.BS-F
     MOVE DOCUMENT.NZ-F TO KOR_PATTERN.PZAKAZ
     MOVE ASUM-KODIF-FILE.BS-F TO KOR_PATTERN.PSCHET_CR
     MOVE DOCUMENT.NZ-F TO KOR_PATTERN.PZAKAZ
     MOVE KOR_PATTERN TO HISTORY.KOR1(#LINE)
     UPDATE (GH.)
     /*
     FIND OSTATKI WITH KP-F EQ DOCUMENT.KP-F(#LINE) AND
                       MAT-OT EQ DOCUMENT.OP-F AND
                       COD-MAT EQ DOCUMENT.KM-F(#LINE)
        IF NO RECORD FOUND
           *ERROR-NR := EC-OBJECT-NOT-FOUND
        END-NOREC
        IF IS-DR-DEBUG THEN
           WRITE "OST SUBTRACT" OSTATKI.MAT-OT OSTATKI.COD-MAT
                 OSTATKI.SUMMA OSTATKI.SRED-COL
        END-IF
        SUBTRACT DOCUMENT.KL-F(#LINE) FROM OSTATKI.SRED-COL
        SUBTRACT DOCUMENT.SUMM_OST(#LINE) FROM OSTATKI.SUMMA
        UPDATE
     END-FIND
  END-FIND
/*---------------------
  END-FIND
/*
END-SUBROUTINE
/*
DEFINE SUBROUTINE PO-LOCATE
  RESET #CUR-DOC
  MOVE MBRHMN0A.DR-ASUM-DOC(#DOC) TO #DOC-LOCATE
  MOVE MBRHMN0A.DR-ASUM-DOC(#DOC) TO #CUR-DOC
  IF #DOC-LOCATE EQ 0 THEN
     ENDZAP.OG_F    := 1000
     ENDZAP.TYPEZAP := 'ND'
     ENDZAP.TYPEDOC := 'LA'
L12.
     FIND (1) LAST_ZAP END_NUM EQ ENDZAP
        IF NO RECORD FOUND
           *ERROR-NR := EC-RECORD-COUNT-MISMATCH
        END-NOREC
        ADD 1 TO LAST_ZAP.LAST_DOC
        UPDATE(L12.)
     END-FIND
     #CUR-DOC := LAST_ZAP.LAST_DOC
     #DOC-LOCATE := LAST_ZAP.LAST_DOC
     MBRHMN0A.DR-ASUM-DOC(#DOC) := #CUR-DOC
  END-IF
FD1.
  FIND DOCUMENT WITH NUM_ZAP EQ #DOC-LOCATE AND OG-F EQ 1000
     IF NO RECORD FOUND
        RESET #DOC-LOCATE
        ESCAPE BOTTOM
     END-NOREC
     IF *NUMBER(FD1.) NE 1 THEN
        *ERROR-NR := EC-RECORD-COUNT-MISMATCH
     END-IF
     MOVE *ISN TO #CUR-DOC-ISN
     /*
     MOVE DOCUMENT.OG-F TO KEYHISTORY.KEYOG
     MOVE DOCUMENT.NUM_ZAP TO KEYHISTORY.KEYNZ
     MOVE DOCUMENT.TY-F TO KEYHISTORY.KEYTY
     MOVE DOCUMENT.ND-F TO KEYHISTORY.KEYND
     MOVE DOCUMENT.DT-F TO KEYHISTORY.KEYDT
FH2.
     FIND HISTORY WITH UNICUM_DOP EQ KEYHISTORY
        IF FALSE THEN
           UPDATE
        END-IF
        MOVE *ISN TO #CUR-HIST-ISN
     END-FIND
     IF *NUMBER(FH2.) NE 1 THEN
        MOVE *NUMBER(FH2.) TO ERROR-ADDITION(1)
        *ERROR-NR := EC-RECORD-COUNT-MISMATCH
     END-IF
  END-FIND
  IF #DOC-LOCATE EQ 0 THEN
     FIND DOCUMENT WITH NUM_ZAP = #CUR-DOC
                        AND OG-F EQ 1000
        *ERROR-NR := EC-RECORD-COUNT-MISMATCH
     END-FIND
/*     WRITE *PROGRAM #TY
     /*
     RESET DOCUMENT
     DOCUMENT.OG-F := 1000
     DOCUMENT.NUM_ZAP := #CUR-DOC
     IF MERHMN0A.RO-NUMBER IS (N5) THEN
        DOCUMENT.ND-F := VAL(MERHMN0A.RO-NUMBER)
     ELSE
        DOCUMENT.ND-F := 777
     END-IF
     MOVE EDITED MERHMN0A.RO-DATE (EM=YYYYMMDD) TO #DT-A
     DOCUMENT.DT-F := #DT-N
/*     IF #TY EQ "LL" THEN #TY := "SL" END-IF
        DOCUMENT.TY-F := "RD"
        DOCUMENT.NZ-F := MERHMN0A.ZK-CODE
        DOCUMENT.OP-F := MERHMN0A.IN-MO-CODE
        DOCUMENT.T-OP := "S"
        DOCUMENT.PL-F := MERHMN0A.OUT-DP-CODE
        DOCUMENT.T-PL := "P"
        DOCUMENT.KOR-MO := MERHMN0A.OUT-MO-CODE
     RESET DOCUMENT.DS-F
     MOVE MERHMN0A.DC-PACKAGE TO #DC-PACKAGE
     MOVE #DC-PACKAGE TO DOCUMENT.PP-F
     RESET DOCUMENT.DOG_1 DOCUMENT.DOG_2
SD.
     STORE DOCUMENT
     MOVE *ISN(SD.) TO #CUR-DOC-ISN
     /*
     RESET HISTORY
     MOVE DOCUMENT.OG-F TO HISTORY.OG-F
     MOVE DOCUMENT.NUM_ZAP TO HISTORY.NUM_ZAP
     MOVE DOCUMENT.TY-F TO HISTORY.TY-F
     MOVE DOCUMENT.ND-F TO HISTORY.ND-F
     MOVE DOCUMENT.DT-F TO HISTORY.DT-F
SH.
     STORE HISTORY
     MOVE *ISN(SH.) TO #CUR-HIST-ISN
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE ERROR-RECOVER
  IGNORE
END-SUBROUTINE
/*
INCLUDE XXERSY2C
END-SUBROUTINE
END
