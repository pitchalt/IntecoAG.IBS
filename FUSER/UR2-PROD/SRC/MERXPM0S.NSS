* >Natural Source Header 000000 /*<RO>>
* :NatName MERXPM0S
* :UID ARMK01
* :Mode S
* :CP
* :Date 20080408
* :Time 1315000
* <Natural Source Header /*<<RO>
/***********************************************************************
/*
/* —»—“≈Ã¿:
/* œ–Œ√–¿ÃÃ¿:
/*
/* –¿«–¿¡Œ“◊» :  ”«Œ–»Õ œ.¿.
/* ƒ¿“¿ ¬€œ”— ¿:
/*
/* Õ¿«¬¿Õ»≈:  ”–Œ¬≈Õ‹ ¡»«Õ≈— –¿¡Œ“¿ — «¿√ŒÀŒ¬ ŒÃ
/*
/*  ŒÃ¿Õƒ€:
/*   READ
/*   ADD
/*   UPDATE
/*   DELETE
/*
/* »—œ–¿¬À≈Õ»ﬂ:
/*
/***********************************************************************
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING XXCTXX0A
PARAMETER USING MERXPLSA
PARAMETER USING MERXPM0A
PARAMETER USING UXCSXX0A
/*
LOCAL USING XXXXEC0L
LOCAL USING XBTXMN0A
/* ŒÒÌÓ‚ÌÓÈ ÒÚÂÍ
LOCAL USING MERXPLSL
/*
LOCAL USING UBODMN0A
LOCAL USING MBSASH0A
LOCAL USING MBSAMN0A
/*
LOCAL USING MERXHM0A
LOCAL USING MERXMM0A
/*
LOCAL USING MBRXPM0A
LOCAL USING MBPRMN0A
LOCAL USING MBPHMN0A
LOCAL USING MBVOMN0A
LOCAL USING MBEIMN0A
/*
LOCAL USING MBLKHM0A
LOCAL USING MBLKRM0A
/*
LOCAL USING MBRXHM0A
LOCAL USING MBRXMM0A
LOCAL USING MBMZMN0A
/*
LOCAL
/*1 #KOEF             (P8.7)
1 #COL              (P8.7)
1 #DATA             (A8)
1 REDEFINE #DATA
2 #DATA-YYYY        (N4)
END-DEFINE
DEFINE SUBROUTINE MERXPM0S
RESET XXERX00A
/*
DECIDE ON FIRST VALUE MERXPM0A.ME-COMMAND
  VALUE "LOCK"
     PERFORM RECORD-LOCK
  VALUE "EXTEND"
     PERFORM RECORD-EXTEND
  VALUE "UPDATE"
     PERFORM RECORD-UPDATE
  VALUE "READ"
     PERFORM RECORD-READ
  VALUE "READ-TR"
     PERFORM RECORD-READ
  NONE VALUE
     MOVE MERXPM0A.ME-COMMAND TO ERROR-ADDITION(1)
     *ERROR-NR := EC-UNKNOW-COMMAND
END-DECIDE
/*
DEFINE SUBROUTINE RECORD-LOCK
  MOVE MERXPM0A.DR-ID TO MBRXPM0A.DR-ID
  MOVE "LOCK" TO MBRXPM0A.BL-COMMAND
  PERFORM MBRXPM0S XXERX00A XXCTXX0A MBRXPM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE CHECK-MT-OUT-COL
  /*
  MOVE XXCTXX0A.OD-ID TO UBODMN0A.OD-ID
  MOVE "READ" TO UBODMN0A.BL-COMMAND
  PERFORM UBODMN0S XXERX00A XXCTXX0A UBODMN0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /*
  RESET RETURN-CODE
  /*
  MOVE MERXPM0A.RXM-DD-ID TO MBRXMM0A.DD-ID
  MOVE MERXPM0A.DR-UP-ID TO MBRXMM0A.DR-ID
  MOVE "READ" TO MBRXMM0A.BL-COMMAND
  PERFORM MBRXMM0S XXERX00A XXCTXX0A MBRXMM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /*
  MOVE MERXPM0A.RXH-DD-ID TO MBRXHM0A.DD-ID
  MOVE MBRXMM0A.DR-UP-ID TO MBRXHM0A.DR-ID
  MOVE "READ" TO MBRXHM0A.BL-COMMAND
  PERFORM MBRXHM0S XXERX00A XXCTXX0A MBRXHM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /*
  RESET MBSASH0A
  MOVE UBODMN0A.OD-IT-ID(4) TO MBSASH0A.IT-ID(1)
  MOVE MERXPM0A.DR-ID TO MBSASH0A.DR-EXCLUDE
  MOVE MBRXHM0A.OUT-MO-ID TO MBSASH0A.MO-ID
  MOVE MERXPM0A.PR-ID TO MBSASH0A.PR-ID
  MOVE MBRXMM0A.MT-ID TO MBSASH0A.MT-ID
  MOVE MERXPM0A.BASE-EI-ID TO MBSASH0A.BASE-EI-ID
  MOVE MERXPM0A.PRIH-EI-ID TO MBSASH0A.PRIH-EI-ID
  MOVE "SUMMA" TO MBSASH0A.BL-COMMAND
  PERFORM MBSASH2S XXERX00A XXCTXX0A MBSASH0A MBSAMN0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-EXTEND
  IF MERXPM0A.PR-ID NE 0 THEN
     MOVE MERXPM0A.PR-ID TO MBPRMN0A.PR-ID
     MOVE "READ" TO MBPRMN0A.BL-COMMAND
     PERFORM MBPRMN0S XXERX00A XXCTXX0A MBPRMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE MBPRMN0A.PR-CODE TO MERXPM0A.PR-CODE
  END-IF
  IF MBPRMN0A.DC-ID NE 0 THEN
     MOVE MBPRMN0A.DC-ID TO MBPHMN0A.PO-ID
     MOVE "READ" TO MBPHMN0A.BL-COMMAND
     PERFORM MBPHMN0S XXERX00A XXCTXX0A MBPHMN0A UXCSXX0A
     IF RETURN-CODE NE 0 THEN
     IF ERROR-NUMBER NE EC-OBJECT-NOT-FOUND THEN
      *ERROR-NR := EC-QUIT-STACK-TRACE
       ELSE
       RESET MBPHMN0A
       END-IF
       END-IF
     IF MBPHMN0A.PO-ID NE 0 THEN
     MOVE MBPHMN0A.PO-NUMBER TO MERXPM0A.PO-NUMBER
     MOVE MBPHMN0A.PO-DATE TO MERXPM0A.PO-DATE
     /*
     IF MBPHMN0A.VO-ID NE 0 THEN
        MOVE MBPHMN0A.VO-ID TO MBVOMN0A.VO-ID
        MOVE "READ" TO MBVOMN0A.BL-COMMAND
        PERFORM MBVOMN0S XXERX00A XXCTXX0A MBVOMN0A
        IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
        MOVE BY NAME MBVOMN0A TO MERXPM0A
     END-IF
     END-IF
  END-IF
  IF MERXPM0A.PRIH-EI-ID NE 0 THEN
     MOVE MERXPM0A.PRIH-EI-ID TO MBEIMN0A.EI-ID
     MOVE "READ" TO MBEIMN0A.BL-COMMAND
     PERFORM MBEIMN0S XXERX00A XXCTXX0A MBEIMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE MBEIMN0A.EI-CODE TO MERXPM0A.PRIH-EI-CODE
     MOVE MBEIMN0A.EI-SHORT-NAME TO MERXPM0A.PRIH-EI-SHORT-NAME
  END-IF
  IF MERXPM0A.BASE-EI-ID NE 0 THEN
     MOVE MERXPM0A.BASE-EI-ID TO MBEIMN0A.EI-ID
     MOVE "READ" TO MBEIMN0A.BL-COMMAND
     PERFORM MBEIMN0S XXERX00A XXCTXX0A MBEIMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE MBEIMN0A.EI-CODE TO MERXPM0A.BASE-EI-CODE
     MOVE MBEIMN0A.EI-SHORT-NAME TO MERXPM0A.BASE-EI-SHORT-NAME
  END-IF
  IF MERXPM0A.PLAN-EI-ID NE 0 THEN
     MOVE MERXPM0A.PLAN-EI-ID TO MBEIMN0A.EI-ID
     MOVE "READ" TO MBEIMN0A.BL-COMMAND
     PERFORM MBEIMN0S XXERX00A XXCTXX0A MBEIMN0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE MBEIMN0A.EI-CODE TO MERXPM0A.PLAN-EI-CODE
     MOVE MBEIMN0A.EI-SHORT-NAME TO MERXPM0A.PLAN-EI-SHORT-NAME
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-READ
  IF MERXPM0A.STACK-POS NE 0 THEN
     MOVE MERXPM0A.STACK-POS TO MERXPLSL.STACK-POS
     PERFORM STACK-READ
     MOVE BY NAME MERXPLSL.STACK-REC-G TO MERXPM0A
  ELSE
     MOVE MERXPM0A.DD-ID TO MBRXPM0A.DD-ID
     MOVE MERXPM0A.DR-ID TO MBRXPM0A.DR-ID
     MOVE MERXPM0A.ME-COMMAND TO MBRXPM0A.BL-COMMAND
     PERFORM MBRXPM0S XXERX00A XXCTXX0A MBRXPM0A UXCSXX0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE BY NAME MBRXPM0A TO MERXPM0A
  END-IF
  PERFORM RECORD-EXTEND
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-UPDATE
  IF MERXPM0A.DD-ID EQ 0 THEN *ERROR-NR := EC-OBJECT-ID-REQUIRED END-IF
  IF MERXPM0A.DR-UP-ID EQ 0 THEN *ERROR-NR := EC-OBJECT-ID-REQUIRED END-IF
  /*
  MOVE MERXPM0A.RXM-DD-ID TO MBRXMM0A.DD-ID
  MOVE MERXPM0A.DR-UP-ID TO MBRXMM0A.DR-ID
  MOVE "READ" TO MBRXMM0A.BL-COMMAND
  PERFORM MBRXMM0S XXERX00A XXCTXX0A MBRXMM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /*
  MOVE MERXPM0A.RXH-DD-ID TO MBRXHM0A.DD-ID
  MOVE MBRXMM0A.DR-UP-ID TO MBRXHM0A.DR-ID
  MOVE "READ" TO MBRXHM0A.BL-COMMAND
  PERFORM MBRXHM0S XXERX00A XXCTXX0A MBRXHM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  /*
  MOVE MERXPM0A.STACK-POS TO MERXPLSL.STACK-POS
  PERFORM STACK-READ
  /*
  /*  PERFORM CHECK-MT-OUT-COL
  IF COL-TYPE EQ "P" THEN
     #COL := MERXPLSL.PRIH-COL-MIN
  ELSE IF COL-TYPE EQ "B" THEN
     #COL := MERXPLSL.BASE-COL-MIN
  END-IF END-IF
/*IF MERXPM0A.COL < #COL THEN
/*   MERXPM0A.COL := #COL
/*END-IF
  /*
  IF MERXPM0A.COL NE 0 THEN
  /*
  DECIDE ON FIRST VALUE COL-TYPE
     VALUE "P"
        IF MERXPM0A.COL > MERXPLSL.PRIH-COL-LIMIT THEN
           MERXPM0A.COL := MERXPLSL.PRIH-COL-LIMIT
        END-IF
        IF MERXPM0A.COL = MERXPLSL.PRIH-COL-LIMIT THEN
           MERXPLSL.PRIH-COL := MERXPLSL.PRIH-COL-LIMIT
           MERXPLSL.BASE-COL := MERXPLSL.BASE-COL-LIMIT
           MERXPLSL.PLAN-COL := MERXPLSL.PLAN-COL-LIMIT
           MERXPLSL.BALC-SUMMA := MERXPLSL.BALC-SUMMA-LIMIT
        ELSE
/*           COMPUTE ROUNDED #KOEF =
/*                 MERXPM0A.COL / MERXPLSL.PRIH-COL-LIMIT
           COMPUTE ROUNDED MERXPLSL.PRIH-COL = MERXPM0A.COL
           COMPUTE ROUNDED MERXPLSL.BASE-COL = MERXPM0A.COL *
                 MERXPLSL.BASE-COL-LIMIT / MERXPLSL.PRIH-COL-LIMIT
           COMPUTE ROUNDED MERXPLSL.PLAN-COL = MERXPM0A.COL *
                 MERXPLSL.PLAN-COL-LIMIT / MERXPLSL.PRIH-COL-LIMIT
           COMPUTE ROUNDED MERXPLSL.BALC-SUMMA = MERXPM0A.COL *
                 MERXPLSL.BALC-SUMMA-LIMIT / MERXPLSL.PRIH-COL-LIMIT
        END-IF
     VALUE "B"
        IF MERXPM0A.COL > MERXPLSL.BASE-COL-LIMIT THEN
           MERXPM0A.COL := MERXPLSL.BASE-COL-LIMIT
        END-IF
        IF MERXPM0A.COL = MERXPLSL.BASE-COL-LIMIT THEN
           MERXPLSL.PRIH-COL := MERXPLSL.PRIH-COL-LIMIT
           MERXPLSL.BASE-COL := MERXPLSL.BASE-COL-LIMIT
           MERXPLSL.PLAN-COL := MERXPLSL.PLAN-COL-LIMIT
           MERXPLSL.BALC-SUMMA := MERXPLSL.BALC-SUMMA-LIMIT
        ELSE
/*           COMPUTE ROUNDED #KOEF =
/*                 MERXPM0A.COL / MERXPLSL.BASE-COL-LIMIT
           COMPUTE ROUNDED MERXPLSL.BASE-COL = MERXPM0A.COL
           COMPUTE ROUNDED MERXPLSL.PRIH-COL = MERXPM0A.COL *
                 MERXPLSL.PRIH-COL-LIMIT / MERXPLSL.BASE-COL-LIMIT
           COMPUTE ROUNDED MERXPLSL.PLAN-COL = MERXPM0A.COL *
                 MERXPLSL.PLAN-COL-LIMIT / MERXPLSL.BASE-COL-LIMIT
           COMPUTE ROUNDED MERXPLSL.BALC-SUMMA = MERXPM0A.COL *
                 MERXPLSL.BALC-SUMMA-LIMIT / MERXPLSL.BASE-COL-LIMIT
        END-IF
     NONE VALUE
        *ERROR-NR := EC-OBJECT-ATTRIBUTE-REQUIRED
  END-DECIDE
  END-IF
  /*
  IF MERXPLSL.DR-ID EQ 0 THEN
     IF MERXPM0A.COL EQ 0 THEN
        *ERROR-NR := EC-OBJECT-ATTRIBUTE-REQUIRED
     END-IF
     MOVE "ADD" TO MBRXPM0A.BL-COMMAND
  ELSE
     IF MERXPM0A.COL NE 0 THEN
        MOVE "UPDATE" TO MBRXPM0A.BL-COMMAND
     ELSE
        MOVE "DELETE" TO MBRXPM0A.BL-COMMAND
     END-IF
  END-IF
  /*
  IF MBRXMM0A.LK-ID NE 0 THEN
     /*
     MOVE MBRXMM0A.LK-ID TO MBLKHM0A.LK-ID
     MOVE "READ" TO MBLKHM0A.BL-COMMAND
     PERFORM MBLKHM0S XXERX00A XXCTXX0A MBLKHM0A UXCSXX0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE MBLKHM0A.EI-ID TO MERXPLSL.PLAN-EI-ID
     /*
     IF MBRXMM0A.MT-ID EQ MBLKHM0A.MT-ID THEN
        MERXPLSL.PLAN-COL := MERXPLSL.BASE-COL
     ELSE
        MOVE MBRXMM0A.MZ-ID TO MBMZMN0A.MZ-ID
        MOVE "READ" TO MBMZMN0A.BL-COMMAND
        PERFORM MBMZMN0S XXERX00A XXCTXX0A MBMZMN0A
        IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
        MERXPLSL.PLAN-COL := MERXPLSL.BASE-COL / MBMZMN0A.COL
     END-IF
     /*
     MOVE BY NAME MERXPLSL TO MBLKRM0A
     MOVE MERXPLSL.DR-ID TO MBLKRM0A.RL-ID
     MOVE MBRXMM0A.GM-ID TO MBLKRM0A.GM-ID
     MOVE MBRXMM0A.MT-ID TO MBLKRM0A.MT-ID
     MOVE MBRXMM0A.LK-ID TO MBLKRM0A.LKH-ID
     MOVE MERXPLSL.DT-ID TO MBLKRM0A.DT-ID
     MOVE MERXPLSL.BALC-SUMMA TO MBLKRM0A.CENA-SUMMA
/*     IF MBLKRM0A.BASE-COL NE 0 THEN
        COMPUTE ROUNDED MBLKRM0A.CENA = MBLKRM0A.CENA-SUMMA / MBLKRM0A.BASE-COL
/*     END-IF
     MOVE MBRXHM0A.OUT-MO-ID TO MBLKRM0A.OUT-MO-ID
     MOVE MBRXHM0A.RX-DATE TO  MBLKRM0A.RL-DATE
/*  RL-ID  MT-ID   PR-ID  CENA-SUMMA  PLAN-COL PLAN-EI-ID
/*  BASE-COL BASE-EI-ID
     MOVE MBRXPM0A.BL-COMMAND TO MBLKRM0A.BL-COMMAND
     PERFORM MBLKRM0S XXERX00A XXCTXX0A MBLKRM0A UXCSXX0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE MBLKRM0A.LKR-ID TO MERXPLSL.LKR-ID
  END-IF
  /*
  MOVE BY NAME MERXPLSL TO MBRXPM0A
/*  WRITE *PROGRAM MERXPLSL.BASE-MT-ID MBRXPM0A.BASE-MT-ID
  MOVE MERXPM0A.DD-ID TO MBRXPM0A.DD-ID
  MOVE MERXPM0A.DR-UP-ID TO MBRXPM0A.DR-UP-ID
  PERFORM MBRXPM0S XXERX00A XXCTXX0A MBRXPM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  MOVE BY NAME MBRXPM0A TO MERXPLSL
  IF MBLKRM0A.BL-COMMAND EQ "ADD" THEN
     MOVE MBRXPM0A.DR-ID TO MBLKRM0A.RL-ID
     MOVE "UPDATE" TO MBLKRM0A.BL-COMMAND
     PERFORM MBLKRM0S XXERX00A XXCTXX0A MBLKRM0A UXCSXX0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  END-IF
  IF MBRXPM0A.BL-COMMAND EQ "DELETE"  THEN
     RESET MERXPLSL.DR-ID MERXPLSL.DD-ID MERXPLSL.BALC-SUMMA
           MERXPLSL.BASE-COL MERXPLSL.PRIH-COL MERXPLSL.PLAN-COL
  END-IF
  /*
  PERFORM STACK-WRITE
  /*
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-DELETE
  *ERROR-NR  := EC-UNKNOW-COMMAND
  IF MERXPM0A.DR-ID EQ 0 THEN
     *ERROR-NR := EC-OBJECT-ID-REQUIRED
  END-IF
END-SUBROUTINE
/*
INCLUDE XXSTMN4C "MERXPLSA" "MERXPLSL-CONST" "MERXPLSL"
        "STACK-INIT" "STACK-FREE" "STACK-REALLOC"
        "STACK-PUSH" "STACK-READ" "STACK-WRITE" "STACK-LOCATE"
/*
INCLUDE XXERSY1C
END-SUBROUTINE
END
