* >Natural Source Header 000000 /*<RO>>
* :NatName UBODOC0S
* :UID PAUL
* :Mode S
* :CP
* :Date 20070106
* :Time 1845000
* <Natural Source Header /*<<RO>
/***********************************************************************
/*
/* —»—“≈Ã¿:
/* œ–Œ√–¿ÃÃ¿: XETXMN0S
/*
/* –¿«–¿¡Œ“◊» : ”«Œ–»Õ œ.¿.
/* ƒ¿“¿ ¬€œ”— ¿:
/*
/* Õ¿«¬¿Õ»≈:  ¡»«Õ≈— ”–Œ¬≈Õ‹ –¿¡Œ“¿ — »ƒ≈Õ“»‘» ¿“Œ–¿Ã» “–¿Õ«¿ ÷»…
/*  - CALC
/*
/* »—œ–¿¬À≈Õ»ﬂ:
/*
/***********************************************************************
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING XXCTXX0A
PARAMETER USING UBODOC0A
PARAMETER USING UXCSXX0A
/*
LOCAL USING XXXXEC0L
LOCAL USING UXXXEC0L
/*
LOCAL USING UBCLMN0A
LOCAL USING UBITMN0A
LOCAL USING UBODMN0A
LOCAL USING UBDDMN0A
LOCAL USING UDODOC0A
/*
LOCAL
1 #I       (I4)
1 #J       (I4)
1 #K       (I4)
1 #L       (I4)
1 #FOUND   (L)
1 #ARG     (A1)
1 #DOCATTR-C     (I4)
1 #DOCATTR-LIST  (P7/1:250)
1 #ATTR-C  (I4)
1 #ATTR-G  (1:50)
2 ATTR-ID  (P7)
2 IS-VAL   (L/1:2)
2 IS-MES   (L/1:2)
/*
END-DEFINE
DEFINE SUBROUTINE UBODOC0S
/*
DECIDE ON FIRST VALUE UBODOC0A.BL-COMMAND
VALUE 'READ'
  PERFORM RECORD-READ
VALUE 'SET'
  PERFORM RECORD-SET
NONE VALUE
  MOVE UBODOC0A.BL-COMMAND TO ERROR-ADDITION(1)
  *ERROR-NR := EC-UNKNOW-COMMAND
END-DECIDE
/*
DEFINE SUBROUTINE RECORD-READ
  MOVE UBODOC0A.OD-ID TO UDODOC0A.OD-ID
  MOVE UBODOC0A.DD-ID TO UDODOC0A.DD-ID
  MOVE 'READ' TO UDODOC0A.DL-COMMAND
  PERFORM UDODOC0S XXERX00A UDODOC0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  MOVE BY NAME UDODOC0A TO UBODOC0A
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-SET
  IF UBODOC0A.OD-ID EQ 0 THEN *ERROR-NR := EC-OBJECT-ID-REQUIRED END-IF
  IF UBODOC0A.DD-ID EQ 0 THEN *ERROR-NR := EC-OBJECT-ID-REQUIRED END-IF
/* œ–Œ¬≈–»Ã OD-ID
  MOVE UBODOC0A.OD-ID TO UBODMN0A.OD-ID
  MOVE 'READ' TO UBODMN0A.BL-COMMAND
  PERFORM UBODMN0S XXERX00A XXCTXX0A UBODMN0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
/* œ–Œ¬≈–»Ã DD-ID
  MOVE UBODOC0A.DD-ID TO UBDDMN0A.DD-UP-ID
  REPEAT
     WHILE UBDDMN0A.DD-UP-ID NE 0
     MOVE UBDDMN0A.DD-UP-ID TO UBDDMN0A.DD-ID
     MOVE 'READ' TO UBDDMN0A.BL-COMMAND
     PERFORM UBDDMN0S XXERX00A UBDDMN0A UXCSXX0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     FOR #I = 1 TO UBDDMN0A.DD-MA-C
        IF UBDDMN0A.DD-MA-ATTR-TYPE(#I) NE 'P' THEN ESCAPE TOP END-IF
        #FOUND := FALSE
        FOR #J = 1 TO #DOCATTR-C
           IF UBDDMN0A.DD-MA-ATTR-ID(#I) EQ #DOCATTR-LIST(#J) THEN
              #FOUND := TRUE
              ESCAPE BOTTOM
           END-IF
        END-FOR
        IF NOT #FOUND THEN
           ADD 1 TO #DOCATTR-C
           MOVE UBDDMN0A.DD-MA-ATTR-ID(#I) TO #DOCATTR-LIST(#DOCATTR-C)
        END-IF
     END-FOR
  END-REPEAT
/*
  MOVE UBODOC0A.OD-ID TO ERROR-ADDITION(3)
  FOR #I = 1 TO UBODOC0A-OC-C
     MOVE UBODOC0A.OC-ARG-TYPE(#I) TO #ARG
     IF #ARG EQ 'A' THEN
        #FOUND := FALSE
        FOR #J = 1 TO #DOCATTR-C
           IF UBODOC0A.OC-ARG-ATTR(#I) EQ #DOCATTR-LIST(#J)
              #FOUND := TRUE
              ESCAPE BOTTOM
           END-IF
        END-FOR
        IF NOT #FOUND THEN
           MOVE UBODOC0A.OC-ARG-ATTR(#I) TO ERROR-ADDITION(1)
           *ERROR-NR := EC-ATTR-REQUIRED
        END-IF
     END-IF
     IF #ARG EQ 'I' THEN
        IF UBODOC0A.OC-ARG-ATTR(#I) EQ 0 OR
           UBODOC0A.OC-ARG-ATTR(#I) > UBDDMN0A.DD-LEVEL THEN
              MOVE UBODOC0A.OC-ARG-ATTR(#I) TO ERROR-ADDITION(1)
              MOVE 'LEVEL MISMATCH' TO ERROR-ADDITION(2)
              *ERROR-NR := EC-ATTR-VALUE-UNKNOW
        END-IF
     END-IF
     IF UBODOC0A.OC-RES-ATTR(#I) NE 0 THEN
        FOR #J = 1 TO 50
           IF UBODOC0A.OC-RES-ATTR(#I) EQ #ATTR-G.ATTR-ID(#J) THEN
              ESCAPE BOTTOM
           END-IF
        END-FOR
        IF #J > 49 THEN
           ADD 1 TO #ATTR-C
           MOVE #ATTR-C TO #J
           MOVE UBODOC0A.OC-RES-ATTR(#I) TO #ATTR-G.ATTR-ID(#J)
        END-IF
        DECIDE ON EVERY VALUE UBODOC0A.OC-RES-TYPE(#I)
        VALUE 'VA', 'VD'
           MOVE TRUE TO #ATTR-G.IS-VAL(#J,1)
        VALUE 'VA', 'VC'
           MOVE TRUE TO #ATTR-G.IS-VAL(#J,2)
        VALUE 'MA', 'MD'
           MOVE TRUE TO #ATTR-G.IS-MES(#J,1)
        VALUE 'MA', 'MC'
           MOVE TRUE TO #ATTR-G.IS-MES(#J,2)
        VALUE 'D'
           MOVE TRUE TO #ATTR-G.IS-VAL(#J,1)
        NONE VALUE
           IGNORE
        END-DECIDE
     END-IF
     IF UBODOC0A.OC-CODE(#I) EQ 'MKP' THEN
        /* œ–Œ¬≈–»Ã CL-ID
        MOVE UBODOC0A.OC-RES-ATTR(#I) TO UBCLMN0A.CL-ID
        MOVE 'READ' TO UBCLMN0A.BL-COMMAND
        PERFORM UBCLMN0S XXERX00A XXCTXX0A UBCLMN0A UXCSXX0A
        IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
        FOR #J =1 TO 5
           IF AD-ATTR-IDS(#J) EQ 0 THEN ESCAPE BOTTOM END-IF
           IF AD-ATTR-IDS(#J) EQ 901 THEN ESCAPE TOP END-IF
           #FOUND := FALSE
           FOR #K = 1 TO 50
              IF AD-ATTR-IDS(#J) EQ #ATTR-G.ATTR-ID(#K) AND
                 #ATTR-G.IS-VAL(#K,1) THEN
                 #FOUND := TRUE
                 ESCAPE BOTTOM
              END-IF
           END-FOR
           IF NOT #FOUND THEN
              MOVE AD-ATTR-IDS(#J) TO ERROR-ADDITION(1)
              *ERROR-NR := EC-ATTR-REQUIRED
           END-IF
        END-FOR
        IF UBODOC0A.OC-ARG-ATTR(#I) EQ 0 AND
           UBODOC0A.OC-ARG-CONST(#I) EQ 0 THEN
           MOVE 'IT-ID' TO ERROR-ADDITION(1)
           *ERROR-NR := EC-ATTR-REQUIRED
        END-IF
        FOR #J = 1 TO 2
           IF #J = 1 THEN
              MOVE UBODOC0A.OC-ARG-ATTR(#I) TO UBITMN0A.IT-ID
           ELSE IF #J = 2 THEN
              MOVE UBODOC0A.OC-ARG-CONST(#I) TO UBITMN0A.IT-ID
           ELSE
              RESET UBITMN0A.IT-ID
           END-IF END-IF
           IF UBITMN0A.IT-ID EQ 0 THEN ESCAPE TOP END-IF
           MOVE UBCLMN0A.CL-ID TO UBITMN0A.CL-ID
           MOVE 'READ' TO UBITMN0A.BL-COMMAND
           PERFORM UBITMN0S XXERX00A XXCTXX0A UBITMN0A UXCSXX0A
           IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
           IF UBCLMN0A.CL-ID NE UBITMN0A.CL-ID THEN
              MOVE UBCLMN0A.CL-ID TO ERROR-ADDITION(1)
              MOVE 'CL-ID NOT EQ IT.CL-ID' TO ERROR-ADDITION(2)
              MOVE UBITMN0A.CL-ID TO ERROR-ADDITION(3)
              *ERROR-NR := EC-ATTR-VALUE-UNKNOW
           END-IF
           FOR #K = 1 TO 30
              IF UBITMN0A.MA-ID(#K) EQ 0 THEN ESCAPE BOTTOM END-IF
              #FOUND := FALSE
              FOR #L = 1 TO #ATTR-C
/*                 WRITE '-' #I #J #K #L UBITMN0A.MA-ID(#K) #ATTR-G.ATTR-ID(#L)
                 IF UBITMN0A.MA-ID(#K) EQ #ATTR-G.ATTR-ID(#L) THEN
                    IF NOT #ATTR-G.IS-VAL(#L,#J) THEN
                       MOVE UBITMN0A.MA-ID(#K) TO ERROR-ADDITION(1)
                       MOVE 'VALUE' TO ERROR-ADDITION(2)
                       *ERROR-NR := EC-ATTR-REQUIRED
                    END-IF
                    IF UBITMN0A.MA-TYPE(#K) EQ 'M' AND
                       UBITMN0A.MA-CONV-TYPE-ID(#K) NE 0 THEN
                       IF NOT #ATTR-G.IS-MES(#L,#J) THEN
                          MOVE UBITMN0A.MA-ID(#K) TO ERROR-ADDITION(1)
                          MOVE 'MESSUREMENT' TO ERROR-ADDITION(2)
                          *ERROR-NR := EC-ATTR-REQUIRED
                       END-IF
                    END-IF
                    #FOUND := TRUE
                    ESCAPE BOTTOM
                 END-IF
              END-FOR
              IF NOT #FOUND THEN
                 MOVE UBITMN0A.MA-ID(#K) TO ERROR-ADDITION(1)
                 MOVE 'MESSUREMENT' TO ERROR-ADDITION(2)
                 *ERROR-NR := EC-ATTR-REQUIRED
              END-IF
           END-FOR
        END-FOR
     END-IF
  END-FOR
/*
  MOVE BY NAME UBODOC0A TO UDODOC0A
  MOVE 'SET' TO UDODOC0A.DL-COMMAND
  PERFORM UDODOC0S XXERX00A UDODOC0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  MOVE BY NAME UDODOC0A TO UBODOC0A
END-SUBROUTINE
/*
INCLUDE XXERSY1C
END-SUBROUTINE
END
