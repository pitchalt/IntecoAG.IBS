* >Natural Source Header 000000 /*<RO>>
* :NatName XPGMSH0S
* :UID INTECO
* :Mode S
* :CP
* :Date 20060702
* :Time 1446000
* <Natural Source Header /*<<RO>
/***********************************************************************
/*
/* яхярелю: ARM-K
/* опнцпюллю: онхяй б яопюбнвмхйе
/*
/* пюгпюанрвхй:
/* дюрю бшосяйю:
/*
/* мюгбюмхе: онхяй б яопюбнвмхйе люрепхюкнб
/* йнлюмдш:
/*  - LOCATE
/*  - SELECT
/*
/* хяопюбкемхъ:
/*
/***********************************************************************
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING XXCTXX0A
PARAMETER USING XPGMSH0A
/*
LOCAL USING XPGMSC0L
LOCAL USING XPGMSR0L
LOCAL USING STEKL
LOCAL USING ASUMGMAT
LOCAL
1 #GM-ID      (N15)
1 REDEFINE #GM-ID
2 BLANK       (N5)
2 OG-ID       (N5)
2 GM-ID       (N5)
/*
1 #COUNT      (I4)
1 #FLAG       (L)
1 #POSITION   (I4)
1 #SELECTED   (A30)
1 #GM-CODE    (A22)
1 #NUMBER     (P10)
/*
1 CNTST(N5) INIT < 200 >
1 LEN-ST-GM(B4) CONST < 73 >
1 STEKGM
2 GM-CODE   (N5)
2 GM-ID     (P15)
2 GM-NAME   (A60)
1 KEYGM(A12)
1 REDEFINE KEYGM
  2 KEYGMOG (N5)
  2 KEYGMKK (A2)
  2 KEYGMGM (N5)
1 KEYGM-START(A12)
1 REDEFINE KEYGM-START
  2 KEYGMOG (N5)
  2 KEYGMKK (A2)
  2 KEYGMGM (N5)
1 KEYGM-STOP(A12)
1 REDEFINE KEYGM-STOP
  2 KEYGMOG (N5)
  2 KEYGMKK (A2)
  2 KEYGMGM (N5)
1 C-Z(C/7)
1 KEYGR(A10)
1 REDEFINE KEYGR
  2 KEYGROG(N5)  2 KEYGRGR(N5)
1 #KEYGMS (A30)
1 REDEFINE #KEYGMS
2 #KEYGMSA(A1/1:30)
1 #KEYGME (A30)
1 REDEFINE #KEYGME
2 #KEYGMEA(A1/1:30)
1 #KEYLEN (I4)
END-DEFINE
DEFINE SUBROUTINE XPGMSH0S
/*
DEFINE WINDOW WINDOW-RESULT
  SIZE 20*80
  BASE 5/1
  TITLE "мюидеммше цпсоош люрепхюкш"
  FRAMED ON
/*
DEFINE WINDOW WINDOW-CRITERY
  SIZE 18*80
  BASE 7/1
  TITLE "оюпюлерпш нранпю цпсоо люрепхюкнб"
  FRAMED ON
/*
SET KEY ALL
SET CONTROL 'MT'
RESET RETURN-CODE XPGMSH0A.GM-CODE XPGMSH0A.GM-NAME
/*MOVE BY NAME XPGMSH0A TO XPGMSC0L
MOVE GM-SEARCH TO XPGMSC0L.GM-NAME
MOVE "MA" TO KEYGM.KEYGMKK
/*
DECIDE ON FIRST VALUE SH-COMMAND
  VALUE 'LOCATE'
     PERFORM GM-LOCATE
  VALUE 'SELECT'
     PERFORM GM-SELECT
  NONE VALUE
     INCLUDE XXERUS1C '2201'
END-DECIDE
/*
IF XPGMSH0A.GM-ID NE 0 THEN
  MOVE XPGMSH0A.GM-ID TO #GM-ID.GM-ID
  #GM-ID.OG-ID := MT-OG-ID
  MOVE #GM-ID TO XPGMSH0A.GM-ID
END-IF
/*
SET WINDOW OFF
/*
DEFINE SUBROUTINE GM-LOCATE
  MOVE GM-SEARCH TO XPGMSC0L.GM-NAME
  PERFORM GM-SEARCH
  IF #COUNT EQ 0 THEN
     INCLUDE XXERUS1C '2402'
  ELSE
     IF #COUNT EQ 1 THEN
        MOVE BY NAME STEKGM TO XPGMSH0A
        ESCAPE ROUTINE
     END-IF
     PERFORM GM-SHOW
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE GM-SELECT
  PERFORM GM-CRITERY
  IF *PF-KEY NE 'PF3' THEN
     PERFORM GM-SHOW
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE GM-SHOW
  SET WINDOW 'WINDOW-RESULT'
  SET KEY NAMED OFF
  SET KEY ENTR NAMED 'бшапр'
  SET KEY PF3 NAMED 'бшунд'
  SET KEY PF7 NAMED 'боепд'
  SET KEY PF8 NAMED 'мюгюд'
  SET KEY PF6 NAMED 'оюпюл'
  RESET #SELECTED
  #N := 1
  REPEAT
    PERFORM GM-LIST
     INPUT USING MAP 'XPGMSR0M'
     IF *PF-KEY EQ 'PF6' THEN
        PERFORM GM-CRITERY
        SET WINDOW 'WINDOW-RESULT'
        SET KEY NAMED OFF
        SET KEY ENTR NAMED 'бшапр'
        SET KEY PF3 NAMED 'бшунд'
        SET KEY PF7 NAMED 'боепд'
        SET KEY PF8 NAMED 'мюгюд'
        SET KEY PF6 NAMED 'оюпюл'
        RESET #SELECTED
     END-IF
     IF *PF-KEY EQ 'PF3' THEN
        RESET #SELECTED
        ESCAPE BOTTOM
     END-IF
     IF *PF-KEY EQ 'PF7' AND #N > 7
        ADD -7 TO #N
     END-IF
     IF *PF-KEY EQ 'PF8' AND #K < #COUNT
        ADD 7 TO #N
     END-IF
     IF *PF-KEY EQ 'ENTR' THEN
        FOR #I = 1 TO 7
           IF *CURS-FIELD EQ POS(CP-CMD(#I)) THEN
              #SELECTED := XPGMSR0L.GM-CODE(#I)
              XPGMSH0A.GM-CODE := XPGMSR0L.GM-CODE(#I)
              XI := #N + #I - 1  CALL 'RWSX' XI STEKGM.GM-CODE XR XN1
        MOVE BY NAME STEKGM TO XPGMSH0A
              ESCAPE ROUTINE
           END-IF
        END-FOR
     END-IF
  END-REPEAT
END-SUBROUTINE
/*
DEFINE SUBROUTINE GM-CRITERY
  SET WINDOW 'WINDOW-CRITERY'
  SET KEY NAMED OFF
  SET KEY ENTR NAMED 'хяйюр'
  SET KEY PF3 NAMED 'бшунд'
  REPEAT
     INPUT USING MAP 'XPGMSC0M'
     IF *PF-KEY EQ 'PF3' THEN
        RESET #SELECTED
        ESCAPE BOTTOM
     END-IF
     IF *PF-KEY EQ 'ENTR'
        PERFORM GM-SEARCH
        ESCAPE ROUTINE
     END-IF
  END-REPEAT
END-SUBROUTINE
/*
DEFINE SUBROUTINE GM-LIST
  RESET XPGMSR0L.GM-LIST(*)
  #K := #N + 6  #L := 0  C-Z(*) := (AD=PN)
  FOR #I #N #K
    IF #I <= #COUNT  XI := #I  CALL 'RWSX' XI STEKGM.GM-CODE XR XN1
      #SELECTED := STEKGM.GM-CODE
      ADD 1 TO #L  RESET C-Z(#L)
      MOVE BY NAME STEKGM TO XPGMSR0L.GM-LIST(#L)
      XPGMSR0L.GM-NAME(#L) := STEKGM.GM-NAME
    END-IF
  END-FOR
END-SUBROUTINE
/*
DEFINE SUBROUTINE GM-SEARCH
  XI := CNTST
  CALL 'GTSX' LEN-ST-GM XI XN1
  XW := #N := 1
  KEYGM.KEYGMOG := GM-OG-ID   RESET #COUNT
  IF GM-SEARCH IS (N5) AND SH-COMMAND EQ "LOCATE" THEN
     KEYGM.KEYGMGM := VAL(GM-SEARCH)
     FIND ASUMGMAT TP-Y = KEYGM
        PERFORM GM2STEK
        ESCAPE ROUTINE
     END-FIND
  END-IF
  IF XPGMSC0L.GM-CODE NE 0
     KEYGM.KEYGMGM := XPGMSC0L.GM-CODE
     FIND ASUMGMAT TP-Y = KEYGM
        ACCEPT IF ASUMGMAT.NMGROUP NE ' '
           PERFORM GM2STEK
     END-FIND
  ELSE
     KEYGM-START := KEYGM
     KEYGM-STOP := KEYGM
     KEYGM-START.KEYGMGM := 0
     KEYGM-STOP.KEYGMGM := 99999
     FIND ASUMGMAT WITH TP-Y = KEYGM-START THRU KEYGM-STOP
        IF XPGMSC0L.GM-NAME NE " " THEN
           EXAMINE ASUMGMAT.NMGROUP FOR XPGMSC0L.GM-NAME GIVING  #NUMBER
           IF #NUMBER EQ 0 THEN
              ESCAPE TOP
           END-IF
        END-IF
        PERFORM GM2STEK
     END-FIND
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE GM2STEK
  STEKGM.GM-CODE := ASUMGMAT.KD-F
  STEKGM.GM-ID := ASUMGMAT.KD-F
  STEKGM.GM-NAME:= ASUMGMAT.NMGROUP
  ADD 1 TO #COUNT
  IF #COUNT > CNTST  #K := XI := CNTST  CALL 'GTSX' LEN-ST-GM XI XN2
    FOR #I 1 CNTST  XI := #I  CALL 'RWSX' XI STEKGM.GM-CODE XR XN1
      CALL 'RWSX' XI STEKGM.GM-CODE XW XN2
    END-FOR
    CALL 'FRSX' XN1
    ADD 200 TO CNTST  XI := CNTST  CALL 'GTSX' LEN-ST-GM XI XN1
    FOR #I 1 #K  XI := #I  CALL 'RWSX' XI STEKGM.GM-CODE XR XN2
      CALL 'RWSX' XI STEKGM.GM-CODE XW XN1
    END-FOR
    CALL 'FRSX' XN2
  END-IF
  XI := #COUNT  CALL 'RWSX' XI STEKGM.GM-CODE XW XN1
END-SUBROUTINE
/*
END-SUBROUTINE
END

