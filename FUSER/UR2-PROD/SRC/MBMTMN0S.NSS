* >Natural Source Header 000000 /*<RO>>
* :NatName MBMTMN0S
* :UID PAUL
* :Mode S
* :CP
* :Date 20071030
* :Time 1158000
* <Natural Source Header /*<<RO>
/***********************************************************************
/*
/* —»—“≈Ã¿:
/* œ–Œ√–¿ÃÃ¿:
/*
/* –¿«–¿¡Œ“◊» :
/* ƒ¿“¿ ¬€œ”— ¿:
/*
/* Õ¿«¬¿Õ»≈:
/*  ŒÃ¿Õƒ€:
/*  - LOCATE
/*  - SELECT
/*
/* »—œ–¿¬À≈Õ»ﬂ:
/*
/***********************************************************************
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING XXCTXX0A
PARAMETER USING MBMTMN0A
/*PARAMETER USING UXCSXX0A
LOCAL USING XXXXEC0L
LOCAL USING KDFL
LOCAL
1 SUP-KEYMT(A27)
1 REDEFINE SUP-KEYMT
  2 OG-F   (N5)
  2 KM-F   (A22)
1 #MT-NAME (A100)
1 REDEFINE #MT-NAME
  2 #NM-F  (A50/1:2)
1 #I      (I4)
END-DEFINE
DEFINE SUBROUTINE MBMTMN0S
RESET XXERX00A
DECIDE ON FIRST VALUE MBMTMN0A.BL-COMMAND
  VALUE "READ"
     PERFORM READ-RECORD
  VALUE "READHOLD"
     PERFORM READHOLD-RECORD
  VALUE "CHEK"
     PERFORM CHEK-RECORD
  VALUE "LOCATE"
     PERFORM LOCATE-RECORD
  NONE VALUE
     MOVE BL-COMMAND TO ERROR-ADDITION(1)
     *ERROR-NR := EC-UNKNOW-COMMAND
END-DECIDE
/*
DEFINE SUBROUTINE READ-RECORD
  IF MBMTMN0A.MT-ID = 0 THEN
     *ERROR-NR := EC-OBJECT-ID-REQUIRED
  END-IF
  FIND ASUM-KODIF-FILE WITH INT-NUM-KM EQ MBMTMN0A.MT-ID
     IF NO RECORD
        *ERROR-NR := EC-OBJECT-NOT-FOUND
     END-NOREC
IF ASUM-KODIF-FILE.OG-F<0 THEN *ERROR-NR:=EC-OBJECT-NOT-FOUND END-IF
     PERFORM RECORD-EXTEND
  END-FIND
END-SUBROUTINE
/*
DEFINE SUBROUTINE READHOLD-RECORD
  IF MBMTMN0A.MT-ID = 0 THEN
     *ERROR-NR := EC-OBJECT-ID-REQUIRED
  END-IF
  FIND ASUM-KODIF-FILE WITH INT-NUM-KM EQ MBMTMN0A.MT-ID
     IF NO RECORD
        *ERROR-NR := EC-OBJECT-NOT-FOUND
     END-NOREC
     IF FALSE THEN
        UPDATE
     END-IF
     PERFORM RECORD-EXTEND
  END-FIND
END-SUBROUTINE
/*
DEFINE SUBROUTINE CHEK-RECORD
  /* ¬€«€¬¿≈Ã
  IF MBMTMN0A.MT-ID = 0
     *ERROR-NR := EC-OBJECT-ID-REQUIRED
  END-IF
  FIND ASUM-KODIF-FILE WITH INT-NUM-KM EQ MBMTMN0A.MT-ID
     IF NO RECORD
        *ERROR-NR := EC-OBJECT-NOT-FOUND
     END-NOREC
/*  PRINT MBMTMN0A.MT-ID MBMTMN0A.MT-CODE MBMTMN0A.MT-NAME /
/*        MBMTMN0A.MT-ID ASUM-KODIF-FILE.KM-F ASUM-KODIF-FILE.NM-F(1)
/*        ASUM-KODIF-FILE.NM-F(2)
     IF MBMTMN0A.MT-CODE NE ' '
        IF MBMTMN0A.MT-CODE NE ASUM-KODIF-FILE.KM-F
           *ERROR-NR := EC-RECORD-MISMATCH
        END-IF
     END-IF
     IF MBMTMN0A.MT-NAME NE ' '
        MOVE ASUM-KODIF-FILE.NM-F(1:2) TO #NM-F(*)
        IF MBMTMN0A.MT-NAME NE #MT-NAME
           *ERROR-NR := EC-RECORD-MISMATCH
        END-IF
     END-IF
     PERFORM RECORD-EXTEND
  END-FIND
/*  END-FIND
/*     MBMTMN0A.MT-CODE := ASUM-KODIF-FILE.KM-F
/*     MOVE ASUM-KODIF-FILE.NM-F(1:2) TO #NM-F(*)
/*     MBMTMN0A.MT-NAME:= #MT-NAME
END-SUBROUTINE
/*
DEFINE SUBROUTINE LOCATE-RECORD
  IF MBMTMN0A.MT-OG-ID = 0 THEN
     MBMTMN0A.MT-OG-ID := XXCTXX0A.MT-OG-ID
  END-IF
  IF MBMTMN0A.MT-OG-ID = 0 THEN
     *ERROR-NR := EC-OBJECT-ID-REQUIRED
  END-IF
  SUP-KEYMT.OG-F := MBMTMN0A.MT-OG-ID
  SUP-KEYMT.KM-F := MBMTMN0A.MT-CODE
  F1. FIND ASUM-KODIF-FILE WITH OK-F = SUP-KEYMT
     IF NO RECORD
        RETURN-CODE := EC-OBJECT-NOT-FOUND
        ESCAPE ROUTINE
     END-NOREC
     PERFORM RECORD-EXTEND
  END-FIND
END-SUBROUTINE
/*
DEFINE SUBROUTINE RECORD-EXTEND
  MBMTMN0A.MT-ID := INT-NUM-KM
  MBMTMN0A.MT-CODE := ASUM-KODIF-FILE.KM-F
  MBMTMN0A.MT-OG-ID := ASUM-KODIF-FILE.OG-F
  COMPRESS ASUM-KODIF-FILE.NM-F(1:2) INTO #MT-NAME
  MBMTMN0A.MT-NAME:= #MT-NAME
  MBMTMN0A.GM-ID := ASUM-KODIF-FILE.OG-F * 100000 + GR-F
  MBMTMN0A.BS-ID := ASUM-KODIF-FILE.OG-F * 100000 + BS-F
  MBMTMN0A.MO-ID := ASUM-KODIF-FILE.OG-F * 100000 + SK-F
  MBMTMN0A.EI-ID := ASUM-KODIF-FILE.OG-F * 100000 + EI-F
/*  MOVE KD-F(1:5) TO DM-ID(1:5)
  FOR #I = 1 TO 5
     IF ASUM-KODIF-FILE.KD-F(#I) EQ 0 THEN ESCAPE BOTTOM END-IF
     DM-ID(#I) := ASUM-KODIF-FILE.OG-F * 100000 + KD-F(#I)
     DM-EI-ID(#I) := ASUM-KODIF-FILE.OG-F * 100000 + KG-F(#I)
     DM-COL(#I) := ASUM-KODIF-FILE.NS-F(#I)
  END-FOR
/*  MOVE EP-F(1:10) TO CVT-EI-ID(1:10)
  FOR #I = 1 TO 10
     IF EP-F(#I) EQ 0 THEN ESCAPE BOTTOM END-IF
     CVT-EI-ID(#I) := ASUM-KODIF-FILE.OG-F * 100000 + EP-F(#I)
     CVT-COL(#I) := ASUM-KODIF-FILE.KF-F(#I)
  END-FOR
  /*
  MOVE ASUM-KODIF-FILE.OBOZ(1) TO MT-OBOZ
  MOVE ASUM-KODIF-FILE.OBOZ(2) TO MT-SHORT-NAME
  MOVE ASUM-KODIF-FILE.PROF TO MT-PROF
  MOVE ASUM-KODIF-FILE.GOSTS TO MT-SORT
  MOVE ASUM-KODIF-FILE.GOST TO MT-GOST
  MOVE ASUM-KODIF-FILE.GOST TO MT-GOST
  MOVE ASUM-KODIF-FILE.VPR  TO MT-VPR
  IF MT-OBOZ NE " " THEN
     COMPRESS MT-SHORT-NAME MT-OBOZ MT-SORT MT-GOST MT-PROF MT-VPR
              INTO MT-NAME
  END-IF
  COMPRESS ASUM-KODIF-FILE.SG-F ASUM-KODIF-FILE.NY-F(1)
        INTO PLACE WITH DELIMITER '/'
END-SUBROUTINE
/*
INCLUDE XXERSY1C
END-SUBROUTINE
END
