* >Natural Source Header 000000 /*<RO>>
* :NatName MPSKLS0S
* :UID PAUL
* :Mode S
* :CP
* :Date 20070924
* :Time 1226000
* <Natural Source Header /*<<RO>
/* œ–Œ√–¿ÃÃ¿ Œ“Œ¡–¿∆≈Õ»ﬂ —œ»— ¿ Õ¿…ƒ≈ÕÕ€’ ƒŒ ”Ã≈Õ“Œ¬
/*
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING MPXXLS0A
PARAMETER USING MPSKSH0A
PARAMETER USING XPMXXX0A
PARAMETER USING XXCTXX0A
/* —“¿Õƒ¿–“Õ€≈  Œƒ€ Œÿ»¡Œ 
LOCAL USING XXXXEC0L
LOCAL USING XPXXEC0L
/*
LOCAL USING STEKL
/* Œ¡À¿—“‹ › –¿Õ¿
LOCAL USING MPSKLS0L
LOCAL USING XPMXSM0L
/* Œ¡–¿¡Œ“ ¿  ŒÃ¿Õƒ
LOCAL USING XPCPXX0L
/* —“≈ 
LOCAL USING MPSKST0L
/*
LOCAL USING MBMOMN0A
LOCAL USING MBMTMN0A
LOCAL USING MBEIMN0A
LOCAL USING UBDRMN0A
LOCAL USING UBDDMN0A
LOCAL USING MBPRMN0A
LOCAL USING UXCSXX0A
LOCAL USING UBODMN0A
LOCAL USING UBITMN0A
LOCAL USING MBLKHM0A
LOCAL USING MBZKMN0A
LOCAL USING MBRLMM0A
LOCAL USING MBRLPM0A
/*
LOCAL USING MBVOMN0A
LOCAL USING XBDPMN0A
LOCAL USING XBDRSX0L
LOCAL USING MBPHMN0A
LOCAL USING MBTTMN0A
LOCAL USING XPPBXX0A
/*
LOCAL USING XXSOXX0L
LOCAL USING XBSOMN0A
LOCAL
1 #COUNTER  (I4)
1 #STR-POS  (B4/1:2)
1 #STR-LEN  (B4/1:2)
1 #MT-EU    (P15)
1 REDEFINE #MT-EU
  2 #MT-EU-N (P8.7)
1 #MT-SUMMA (P15)
1 REDEFINE #MT-SUMMA
  2 #MT-SUMMA-N (P13.2)
1 #INDEX-NUM  (I2)
1 #INDEX-DAT  (I2)
1 #DATE-NUMBER (N15)
1 REDEFINE #DATE-NUMBER
 2 #DATE-SKIP (A7)
 2 #DATE-VALUE (A8)
1 #DATA   (D)
1 #REC    (I4)
1 #MT-QUANTITY-ITOG (P15)
1 #MT-SUMMA-ITOG (P15)
1 #IL (I4)
END-DEFINE
DEFINE SUBROUTINE MPSKLS0S
/*
#COUNTER := MPXXLS0A.STACK-LEN
/*
IF MX-COMMAND EQ "EXPAND" THEN
  INCLUDE XPPBIN0C "#COUNTER" '"–‡Ò¯ËÙÓ‚Í‡ ÒÔ‡‚Ó˜ÌËÍÓ‚"'
  FOR #REC = 1 TO #COUNTER
     INCLUDE XPPBST0C "#REC"
     PERFORM ITEM-EXPAND
  END-FOR
  ESCAPE ROUTINE
END-IF
/*–¿—ÿ»‘–Œ¬¿“‹ —“≈ 
DEFINE SUBROUTINE ITEM-EXPAND
/*  #COUNTER := MPXXLS0A.STACK-LEN
/*  FOR #REC = 1 TO #COUNTER
     MOVE #REC TO XI
     CALL 'RWSX' XI MPSKST0L.STRING(1) XR MPXXLS0A.STACK-NUMBER
     IF MPSKST0L.IS-EXPANDED THEN ESCAPE ROUTINE END-IF
/*     WRITE #REC MPSKST0L.OP-OD-ID MPSKST0L.OP-DC-DD-ID
     /* N ƒŒ ”Ã≈Õ“¿, ƒ¿“¿ ƒŒ ”Ã≈Õ“¿
     IF MPSKST0L.OP-DC-DD-ID EQ 1001 THEN
        RESET MBPHMN0A
        MOVE MPSKST0L.OP-DC-DR-ID TO MBPHMN0A.PO-ID
        MOVE "READ" TO MBPHMN0A.BL-COMMAND
        PERFORM MBPHMN0S XXERX00A XXCTXX0A MBPHMN0A UXCSXX0A
        IF RETURN-CODE EQ 0 THEN
           RESET MBTTMN0A
           MOVE MBPHMN0A.TT-ID TO MBTTMN0A.TT-ID
           MOVE "READ" TO MBTTMN0A.BL-COMMAND
           PERFORM MBTTMN0S XXERX00A XXCTXX0A MBTTMN0A UXCSXX0A
           IF RETURN-CODE EQ 0 THEN
              RESET MPSKST0L.SK-LZK-ID
/*              MOVE MBTTMN0A.TT-ID TO MPSKST0L.SK-LZK-ID
              MOVE MBTTMN0A.TT-NUMBER TO MPSKST0L.SK-LZK-NUMBER
              MOVE MBTTMN0A.TT-DATE TO MPSKST0L.SK-LZK-DATE
           END-IF
        END-IF
        MOVE MBPHMN0A.PO-NUMBER TO MPSKST0L.DR-NUMBER-DOC
        MOVE EDITED MBPHMN0A.PO-DATE (EM=YYYYMMDD) TO MPSKST0L.DR-DATA-PR
     ELSE
     IF MPSKST0L.OP-DC-DD-ID NE 0 AND MPSKST0L.OP-DC-DR-ID NE 0 THEN
        MOVE MPSKST0L.OP-DC-DD-ID TO UBDRMN0A.DR-TYPE-ID
        MOVE MPSKST0L.OP-DC-DR-ID TO UBDRMN0A.DR-ID
        MOVE 'READ' TO UBDRMN0A.BL-COMMAND
        PERFORM UBDRMN0S XXERX00A XXCTXX0A UBDRMN0A UXCSXX0A
        IF RETURN-CODE NE 0 THEN
           IF ERROR-NUMBER = EC-OBJECT-NOT-FOUND
              RESET XXERX00A
              MPSKST0L.DR-NUMBER-DOC := '¬ —œ–¿¬Œ◊Õ» ≈ Õ≈ Õ¿…ƒ≈Õ.'
           ELSE
              *ERROR-NR := EC-QUIT-STACK-TRACE
           END-IF
        END-IF
        EXAMINE MPSKSH0A.ATTR-NAME(*) FOR 'NUMBER-DOC'
                 GIVING INDEX #INDEX-NUM
        EXAMINE MPSKSH0A.ATTR-NAME(*) FOR 'DATA-DOC'
                 GIVING INDEX #INDEX-DAT
        FOR #I = 1 TO 10
           IF UBDRMN0A.DR-AS-ATTR-ID(#I) = MPSKSH0A.ATTR-CODE(#INDEX-NUM)
              MPSKST0L.DR-NUMBER-DOC := UBDRMN0A.DR-AS-VALUE(#I)
              ESCAPE BOTTOM
           END-IF
        END-FOR
        FOR #I = 1 TO 30
           IF UBDRMN0A.DR-AP-ATTR-ID(#I) = MPSKSH0A.ATTR-CODE(#INDEX-DAT)
              INCLUDE XPDRSUDC 'UBDRMN0A.DR-AP-VALUE(#I)'
                                'MPSKST0L.DR-DATA-PR' '#DATA'
              MPSKST0L.DR-DATA-SORT := 99999999 - MPSKST0L.DR-DATA-PR-N
              ESCAPE BOTTOM
           END-IF
        END-FOR
     END-IF
     END-IF
     IF MPSKST0L.OP-SRC-DD-ID EQ 1703 THEN
        MOVE MPSKST0L.OP-SRC-DR-ID TO MBRLPM0A.RLP-ID
        MOVE "READ" TO MBRLPM0A.BL-COMMAND
        PERFORM MBRLPM0S XXERX00A XXCTXX0A MBRLPM0A UXCSXX0A
        IF RETURN-CODE EQ 0 THEN
           MOVE MBRLPM0A.RLM-ID TO MBRLMM0A.RLM-ID
           MOVE "READ" TO MBRLMM0A.BL-COMMAND
           PERFORM MBRLMM0S XXERX00A XXCTXX0A MBRLMM0A UXCSXX0A
        IF RETURN-CODE EQ 0 THEN
           MOVE MBRLMM0A.LK-ID TO MPSKST0L.SK-LZK-ID
           MOVE MBRLMM0A.ZK-ID TO MPSKST0L.ZK-ID
        END-IF
        END-IF
     END-IF
     /* “»œ ƒŒ ”Ã≈Õ“¿
     IF MPSKST0L.OP-DC-DD-ID NE 0 THEN
        MOVE MPSKST0L.OP-DC-DD-ID TO UBDDMN0A.DD-ID
        MOVE 'READ' TO UBDDMN0A.BL-COMMAND
        PERFORM UBDDMN0S XXERX00A UBDDMN0A UXCSXX0A
        IF RETURN-CODE NE 0 THEN
           IF ERROR-NUMBER = EC-OBJECT-NOT-FOUND
              RESET XXERX00A
              UBDDMN0A.DD-NAME := '¬ —œ–¿¬Œ◊Õ» ≈ Õ≈ Õ¿…ƒ≈Õ.'
           ELSE
              *ERROR-NR := EC-QUIT-STACK-TRACE
           END-IF
        END-IF
        MOVE BY NAME UBDDMN0A TO MPSKST0L
     END-IF
     /* œ¿–“»ﬂ
     IF MPSKST0L.PR-ID NE 0 THEN
        MOVE MPSKST0L.PR-ID TO MBPRMN0A.PR-ID
        MOVE 'READ' TO MBPRMN0A.BL-COMMAND
        PERFORM MBPRMN0S XXERX00A XXCTXX0A MBPRMN0A
        IF RETURN-CODE NE 0 THEN
           IF ERROR-NUMBER = EC-OBJECT-NOT-FOUND
              RESET XXERX00A
              MBPRMN0A.PR-CODE := 0
           ELSE
              *ERROR-NR := EC-QUIT-STACK-TRACE
           END-IF
        END-IF
        MOVE MBPRMN0A.PR-CODE TO MPSKST0L.PR-CODE
     END-IF
     /* ≈ƒ. »«Ã≈–≈Õ
     IF MPSKST0L.EI-ID NE 0 THEN
        MOVE MPSKST0L.EI-ID TO MBEIMN0A.EI-ID
        MOVE 'READ' TO MBEIMN0A.BL-COMMAND
        PERFORM MBEIMN0S XXERX00A XXCTXX0A MBEIMN0A
        IF RETURN-CODE NE 0 THEN
           IF ERROR-NUMBER = EC-OBJECT-NOT-FOUND
              RESET XXERX00A
              MBEIMN0A.EI-SHORT-NAME := 'Õ≈“.'
           ELSE
              *ERROR-NR := EC-QUIT-STACK-TRACE
           END-IF
        END-IF
        MOVE BY NAME MBEIMN0A TO MPSKST0L
     END-IF
     /*
     IF MPSKST0L.ZK-ID NE 0 THEN
        MOVE MPSKST0L.ZK-ID TO MBZKMN0A.ZK-ID
        MOVE 'READ' TO MBZKMN0A.BL-COMMAND
        PERFORM MBZKMN0S XXERX00A XXCTXX0A MBZKMN0A
        IF RETURN-CODE NE 0 THEN
           IF ERROR-NUMBER = EC-OBJECT-NOT-FOUND
              RESET XXERX00A
              MBZKMN0A.ZK-CODE := 'Õ≈“.'
           ELSE
              *ERROR-NR := EC-QUIT-STACK-TRACE
           END-IF
        END-IF
        MOVE BY NAME MBZKMN0A TO MPSKST0L
     END-IF
     /*
     IF MPSKST0L.DF-ID NE 0 THEN
        MOVE SO-TYPE-DF TO XBSOMN0A.SO-TYPE
        MOVE MPSKST0L.DF-ID TO XBSOMN0A.SO-ID
        MOVE 'READ' TO XBSOMN0A.BL-COMMAND
        PERFORM XBSOMN0S XXERX00A XXCTXX0A XBSOMN0A
        IF RETURN-CODE NE 0 THEN
           IF ERROR-NUMBER = EC-OBJECT-NOT-FOUND
              RESET XXERX00A
              XBSOMN0A.SO-CODE := 0
              XBSOMN0A.SO-NAME := 'Õ≈“.'
           ELSE
              *ERROR-NR := EC-QUIT-STACK-TRACE
           END-IF
        END-IF
        MOVE XBSOMN0A.SO-CODE TO MPSKST0L.DF-CODE
        MOVE XBSOMN0A.SO-NAME TO MPSKST0L.DF-NAME
     END-IF
     /* “»œ Œœ≈–¿÷»»
     IF MPSKST0L.OP-OD-ID NE 0 THEN
        MOVE MPSKST0L.OP-OD-ID TO UBODMN0A.OD-ID
        MOVE 'READ' TO UBODMN0A.BL-COMMAND
        PERFORM UBODMN0S XXERX00A XXCTXX0A UBODMN0A UXCSXX0A
        IF RETURN-CODE NE 0 THEN
           IF ERROR-NUMBER = EC-OBJECT-NOT-FOUND
              RESET XXERX00A
              UBODMN0A.OD-NAME := '¬ —œ–¿¬Œ◊Õ» ≈ Õ≈ Õ¿…ƒ≈Õ.'
           ELSE
              *ERROR-NR := EC-QUIT-STACK-TRACE
           END-IF
        END-IF
        COMPRESS UBODMN0A.OD-CODE UBODMN0A.OD-NAME INTO MPSKST0L.OP-TYPE
     END-IF
     /* À« 
     IF MPSKST0L.SK-LZK-ID NE 0 THEN
        MOVE MPSKST0L.SK-LZK-ID TO MBLKHM0A.LK-ID
        MOVE 'READ' TO MBLKHM0A.BL-COMMAND
        PERFORM MBLKHM0S XXERX00A XXCTXX0A MBLKHM0A UXCSXX0A
        IF RETURN-CODE NE 0 THEN
           IF ERROR-NUMBER = EC-OBJECT-NOT-FOUND
              RESET XXERX00A
/*              MBEIMN0A.EI-SHORT-NAME := '¬ —œ–¿¬Œ◊Õ» ≈ Õ≈ Õ¿…ƒ≈Õ.'
           ELSE
              *ERROR-NR := EC-QUIT-STACK-TRACE
           END-IF
        END-IF
        MOVE MBLKHM0A.LK-NUMBER TO MPSKST0L.SK-LZK-NUMBER
        MOVE MBLKHM0A.LK-DATE TO MPSKST0L.SK-LZK-DATE
     END-IF
     /* –≈√»—“–
     IF MPSKST0L.MD-IT-ID NE 0 THEN
        MOVE MPSKST0L.MD-IT-ID TO UBITMN0A.IT-ID
        MOVE 'READ' TO UBITMN0A.BL-COMMAND
        PERFORM UBITMN0S XXERX00A XXCTXX0A UBITMN0A UXCSXX0A
        IF RETURN-CODE NE 0 THEN
           IF ERROR-NUMBER = EC-OBJECT-NOT-FOUND
              RESET XXERX00A
              UBITMN0A.IT-NAME := '¬ —œ–¿¬Œ◊Õ» ≈ Õ≈ Õ¿…ƒ≈Õ.'
           ELSE
              *ERROR-NR := EC-QUIT-STACK-TRACE
           END-IF
        END-IF
        MOVE UBITMN0A.IT-CODE TO MPSKST0L.MD-IT-CODE
     END-IF
     /* œŒƒ—◊≈“ —”ÃÃ€ »  ŒÀÀ»◊≈—“¬¿
     IF MPSKST0L.MD-IT-SALDO-TYPE EQ 1 THEN
        #MT-QUANTITY-ITOG := #MT-QUANTITY-ITOG + MPSKST0L.MT-QUANTITY-EU
        #MT-SUMMA-ITOG := #MT-SUMMA-ITOG + MPSKST0L.MT-SUMMA
     ELSE
        #MT-QUANTITY-ITOG := #MT-QUANTITY-ITOG - MPSKST0L.MT-QUANTITY-EU
        #MT-SUMMA-ITOG := #MT-SUMMA-ITOG - MPSKST0L.MT-SUMMA
     END-IF
     IF MPSKST0L.IS-TARGET-VO THEN
        MOVE MPSKST0L.VO-ID TO MBVOMN0A.VO-ID
        MOVE "READ" TO MBVOMN0A.BL-COMMAND
        PERFORM MBVOMN0S XXERX00A XXCTXX0A MBVOMN0A
        IF RETURN-CODE EQ 0 THEN
           MOVE BY NAME MBVOMN0A TO TARGET-VO
        END-IF
     ELSE
        IF MPSKST0L.OUT-MO-ID NE 0 THEN
           MOVE MPSKST0L.OUT-MO-ID TO MBMOMN0A.MO-ID
           MOVE "READ" TO MBMOMN0A.BL-COMMAND
           PERFORM MBMOMN0S XXERX00A XXCTXX0A MBMOMN0A
           IF RETURN-CODE EQ 0 THEN
              MOVE MBMOMN0A.MO-CODE TO MPSKST0L.OUT-MO-CODE
              MOVE MBMOMN0A.MO-NAME TO MPSKST0L.OUT-MO-NAME
              MOVE MBMOMN0A.DP-ID TO XBDPMN0A.DP-ID
              MOVE "READ" TO XBDPMN0A.BL-COMMAND
              PERFORM XBDPMN0S XXERX00A XXCTXX0A XBDPMN0A
              IF RETURN-CODE EQ 0 THEN
                 MOVE XBDPMN0A.DP-ID TO MPSKST0L.OUT-DP-ID
                 MOVE XBDPMN0A.DP-CODE TO MPSKST0L.OUT-DP-CODE
                 MOVE XBDPMN0A.DP-NAME TO MPSKST0L.OUT-DP-NAME
              END-IF
           END-IF
        END-IF
     END-IF
     MOVE TRUE TO MPSKST0L.IS-EXPANDED
     CALL 'RWSX' XI MPSKST0L.STRING(1) XW MPXXLS0A.STACK-NUMBER
/*  END-FOR
END-SUBROUTINE
     MOVE 1 TO XI
     CALL 'RWSX' XI MPSKST0L.STRING(1) XR MPXXLS0A.STACK-NUMBER
     /* Ã¿“≈–»¿À‹ÕŒ Œ“¬≈“—“
     IF MPSKST0L.MO-ID NE 0 THEN
        MOVE MPSKST0L.MO-ID TO MBMOMN0A.MO-ID
        MOVE 'READ' TO MBMOMN0A.BL-COMMAND
        PERFORM MBMOMN0S XXERX00A XXCTXX0A MBMOMN0A
        IF RETURN-CODE NE 0 THEN
           IF ERROR-NUMBER = EC-OBJECT-NOT-FOUND
              RESET XXERX00A
              MBMOMN0A.MO-NAME := '¬ —œ–¿¬Œ◊Õ» ≈ Õ≈ Õ¿…ƒ≈Õ.'
           ELSE
              *ERROR-NR := EC-QUIT-STACK-TRACE
           END-IF
        END-IF
        MOVE BY NAME MBMOMN0A TO MPSKST0L
     END-IF
     /* Ã¿“≈–»¿À
     IF MPSKST0L.MT-ID NE 0 THEN
        MOVE MPSKST0L.MT-ID TO MBMTMN0A.MT-ID
        MOVE 'READ' TO MBMTMN0A.BL-COMMAND
        PERFORM MBMTMN0S XXERX00A XXCTXX0A MBMTMN0A
        IF RETURN-CODE NE 0 THEN
           IF ERROR-NUMBER = EC-OBJECT-NOT-FOUND
              RESET XXERX00A
              MBMTMN0A.MT-NAME := '¬ —œ–¿¬Œ◊Õ» ≈ Õ≈ Õ¿…ƒ≈Õ.'
           ELSE
              *ERROR-NR := EC-QUIT-STACK-TRACE
           END-IF
        END-IF
        MOVE MBMTMN0A.MT-CODE  TO MPSKST0L.MT-CODE
        MOVE MBMTMN0A.MT-NAME  TO MPSKST0L.MT-NAME
     END-IF
        COMPRESS '(' MPSKST0L.MO-CODE ')' MPSKST0L.MO-NAME TO MX-EDITOR-NAME
        COMPRESS MPSKST0L.MT-CODE  MPSKST0L.MT-NAME TO MT-STRING
*
/*  INCLUDE XPDRSU7C '#MT-QUANTITY-ITOG'
/*                   'MPSKLS0L.MT-QUANTITY-ITOGO'
/*  INCLUDE XPDRSU2C '#MT-SUMMA-ITOG'
/*                   'MT-SUMMA-N-ITOGO'
/* —Œ–“»–Œ¬ ¿ —“≈ ¿
/*  MOVE 1 TO #STR-POS(1)
/*  MOVE 8 TO #STR-LEN(1)
/*  MOVE 1 TO #STR-POS(2)
/*  MOVE 8 TO #STR-LEN(2)
  /*
  /*CALL 'SRTX' #STR-POS(1) #STR-LEN(1) MPXXLS0A.STACK-NUMBER
  /*
INCLUDE MBMFMN0C '"""MPSKLS1M"""'
*
/*CALL 'FRSX' MPXXLS0A.STACK-NUMBER
/*RESET MPXXLS0A.STACK-NUMBER MPXXLS0A.STACK-COUNT MPXXLS0A.STACK-LEN
/* STANDART COMMANDS
INCLUDE XPLSMP0C "3"
/*
DEFINE SUBROUTINE SCREEN-PREPARE
  #N := 1
  IF MX-COMMAND EQ 'VIEW-STEK' THEN
     PERFORM STAK-LIST
  END-IF
  RESET MX-COMMAND
END-SUBROUTINE
/***********************************************************************
/*
DEFINE SUBROUTINE STAK-LIST
  RESET MPSKLS0L.LIST(*)
  #K := #N + 2 #L := 0 C-Z(*) := (AD=PN)
  FOR #IL = #N TO #K
/*     WRITE #IL #N #K #COUNTER
     IF #IL <= #COUNTER
        MOVE #IL TO #REC
        PERFORM ITEM-EXPAND
        XI := #IL  CALL 'RWSX' XI MPSKST0L.STRING(1) XR MPXXLS0A.STACK-NUMBER
        ADD 1 TO #L RESET C-Z(#L)
        RESET LIST(#L)
        MOVE BY NAME MPSKST0L TO LIST(#L)
        DECIDE ON FIRST VALUE MPSKST0L.MD-IT-SALDO-TYPE
           VALUE 1
              MPSKLS0L.MD-IT-SALDO-TYPE(#L) := 'ƒ'
           VALUE 2
              MPSKLS0L.MD-IT-SALDO-TYPE(#L) := ' '
           NONE VALUE
              IGNORE
        END-DECIDE
        MOVE MPSKST0L.DD-CODE TO MPSKLS0L.DD-NAME(#L)
        /* XBDRSU2C XBDRSU7C
        INCLUDE XPDRSU2C "MPSKST0L.MT-SUMMA"
                         "MPSKLS0L.MT-SUMMA-N(#L)"
        INCLUDE XPDRSU7C "MPSKST0L.MT-QUANTITY-EU"
                         "MPSKLS0L.MT-QUANTITY-EU-N(#L)"
        INCLUDE XPDRSU7C "MPSKST0L.OP-SALDO-IN"
                         "MPSKLS0L.OP-SALDO-IN-N(#L)"
        INCLUDE XPDRSU7C "MPSKST0L.OP-SALDO-OUT"
                         "MPSKLS0L.OP-SALDO-OUT-N(#L)"
        RESET MPSKLS0L.OP-COL-IN-N(#L) MPSKLS0L.OP-COL-OUT-N(#L)
        IF MPSKST0L.MD-IT-SALDO-TYPE EQ 1 THEN
           MOVE MPSKLS0L.MT-QUANTITY-EU-N(#L) TO MPSKLS0L.OP-COL-IN-N(#L)
        ELSE
           MOVE MPSKLS0L.MT-QUANTITY-EU-N(#L) TO MPSKLS0L.OP-COL-OUT-N(#L)
        END-IF
        IF MPSKLS0L.MT-QUANTITY-EU-N(#L) NE 0 THEN
           COMPUTE ROUNDED BASE-CENA(#L) =
                 MPSKLS0L.MT-SUMMA-N(#L) / MPSKLS0L.MT-QUANTITY-EU-N(#L)
        ELSE
           RESET BASE-CENA(#L)
        END-IF
        MOVE EDITED MPSKST0L.SK-LZK-DATE (EM=DD.MM.YY) TO
                 MPSKLS0L.SK-DOC-NUMBER(#L)
        COMPRESS MPSKST0L.SK-LZK-NUMBER MPSKLS0L.SK-DOC-NUMBER(#L) INTO
                 MPSKLS0L.SK-DOC-NUMBER(#L)
        IF MPSKST0L.IS-TARGET-VO THEN
           COMPRESS MPSKST0L.VO-CODE MPSKST0L.VO-NAME MPSKST0L.VO-ADDRESS
              INTO MPSKLS0L.OP-TARGET(#L)
        ELSE
           IF MPSKST0L.OUT-MO-ID NE 0 THEN
              COMPRESS MPSKST0L.OUT-MO-CODE MPSKST0L.OUT-MO-NAME
                    MPSKST0L.OUT-DP-CODE MPSKST0L.OUT-DP-NAME
                 INTO MPSKLS0L.OP-TARGET(#L)
           ELSE
              RESET MPSKLS0L.OP-TARGET(#L)
           END-IF
        END-IF
    END-IF
  END-FOR
END-SUBROUTINE
/*
DEFINE SUBROUTINE OBJECT-SELECT
  IGNORE
END-SUBROUTINE
/*
 INCLUDE XXERSY1C
/*
END-SUBROUTINE
END
