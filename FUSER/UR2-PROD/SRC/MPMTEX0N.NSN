* >Natural Source Header 000000 /*<RO>>
* :NatName MPMTEX0N
* :UID NAT003
* :Mode S
* :CP
* :Date 20090720
* :Time 1322000
* <Natural Source Header /*<<RO>
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING XXCTXX0A
PARAMETER USING XABOXX0A
LOCAL USING XXXXEC0L
LOCAL USING KDFL
LOCAL USING MPMTEX0L
LOCAL USING PRM-SH
LOCAL
1 #COUNT   (I4)
1 UTRACT   (B2/1:11) INIT <
  H'B9C1', H'EDC2', H'BDC5', H'CDD2', H'CFD4', H'DAC8',
  H'DBD6', H'DED7', H'DFC3', H'EAE3', H'CAE7'>
1 REDEFINE UTRACT
2 UTRACT-A (A2/1:11)
1 #IS-FOUND (L)
1 #NOT-FOUND (P10)
1 #FOUND (P10)
1 #NOM (A27)
1 REDEFINE #NOM
2 #OG (N5)
2 #KM (A22)
1 #NM (A100)
1 REDEFINE #NM
2 #NM-F (A50/1:2)
1 #DM-COL  (I4)
END-DEFINE
CLOSE WORK FILE 7
READ WORK FILE 7 MPMTEX0L
  EXAMINE MPMTEX0L.NAIM TRANSLATE INTO UPPER CASE
  EXAMINE MPMTEX0L.OBOZ TRANSLATE INTO UPPER CASE
  EXAMINE MPMTEX0L.GOSTSORT TRANSLATE INTO UPPER CASE
  EXAMINE MPMTEX0L.GOST TRANSLATE INTO UPPER CASE
  EXAMINE MPMTEX0L.PROFIL TRANSLATE INTO UPPER CASE
/*
  EXAMINE MPMTEX0L.NAIM TRANSLATE USING UTRACT-A(*)
  EXAMINE MPMTEX0L.OBOZ TRANSLATE USING UTRACT-A(*)
  EXAMINE MPMTEX0L.GOSTSORT TRANSLATE USING UTRACT-A(*)
  EXAMINE MPMTEX0L.GOST TRANSLATE USING UTRACT-A(*)
  EXAMINE MPMTEX0L.PROFIL TRANSLATE USING UTRACT-A(*)
  IF MPMTEX0L.NOM EQ " " THEN
    WRITE MPMTEX0L.KODSYS 'Пустой номенклатурный номер'
    ESCAPE TOP
  END-IF
  IF MPMTEX0L.GR-CODE EQ 0 THEN
    WRITE MPMTEX0L.KODSYS 'Hолева  группа'
    ESCAPE TOP
  END-IF
  MOVE 1000 TO #OG
  MOVE LEFT JUSTIFIED MPMTEX0L.NOM TO #KM
  #IS-FOUND := TRUE
  FIND ASUM-KODIF-FILE WITH OK-F EQ #NOM
    IF NO RECORD
      #IS-FOUND := FALSE
      ADD 1 TO #NOT-FOUND
      MOVE LEFT JUSTIFIED MPMTEX0L.NOM TO ASUM-KODIF-FILE.KM-F
      COMPRESS MPMTEX0L.NAIM MPMTEX0L.OBOZ GOSTSORT
      MPMTEX0L.GOST MPMTEX0L.VIDPRIEMKI
      INTO #NM
      RESET ASUM-KODIF-FILE.NM-F(*)
      MOVE #NM-F(1:2) TO ASUM-KODIF-FILE.NM-F(1:2)
      ASUM-KODIF-FILE.GR-F := GR-CODE
      ASUM-KODIF-FILE.EI-F := EI-CODE
      ASUM-KODIF-FILE.OG-F := 1000
      ASUM-KODIF-FILE.ML-F := 1
      CALLNAT 'SBGKMN' ASUM-KODIF-FILE.OG-F INT-NUM-KM
    END-NOREC
    RESET #DM-COL
     /*
     IF MPMTEX0L.ZOL NE 0 THEN
        ADD 1 TO #DM-COL
        MOVE 1 TO ASUM-KODIF-FILE.KD-F(#DM-COL)
        MOVE 4 TO ASUM-KODIF-FILE.KG-F(#DM-COL)
        MOVE MPMTEX0L.ZOL TO ASUM-KODIF-FILE.NS-F(#DM-COL)
     END-IF
     IF MPMTEX0L.SER NE 0 THEN
        ADD 1 TO #DM-COL
        MOVE 2 TO ASUM-KODIF-FILE.KD-F(#DM-COL)
        MOVE 4 TO ASUM-KODIF-FILE.KG-F(#DM-COL)
        MOVE MPMTEX0L.SER TO ASUM-KODIF-FILE.NS-F(#DM-COL)
     END-IF
     IF MPMTEX0L.PLAT NE 0 THEN
        ADD 1 TO #DM-COL
        MOVE 3 TO ASUM-KODIF-FILE.KD-F(#DM-COL)
        MOVE 4 TO ASUM-KODIF-FILE.KG-F(#DM-COL)
        MOVE MPMTEX0L.PLAT TO ASUM-KODIF-FILE.NS-F(#DM-COL)
     END-IF
     IF MPMTEX0L.PALAD NE 0 THEN
        ADD 1 TO #DM-COL
        MOVE 4 TO ASUM-KODIF-FILE.KD-F(#DM-COL)
        MOVE 4 TO ASUM-KODIF-FILE.KG-F(#DM-COL)
        MOVE MPMTEX0L.PLAT TO ASUM-KODIF-FILE.NS-F(#DM-COL)
     END-IF
     IF MPMTEX0L.OTHER NE 0 THEN
        ADD 1 TO #DM-COL
        MOVE 20 TO ASUM-KODIF-FILE.KD-F(#DM-COL)
        MOVE 4 TO ASUM-KODIF-FILE.KG-F(#DM-COL)
        MOVE MPMTEX0L.PLAT TO ASUM-KODIF-FILE.NS-F(#DM-COL)
     END-IF
    /*
    MOVE MPMTEX0L.KODSYS     TO ASUM-KODIF-FILE.KODSYS
    MOVE MPMTEX0L.NAIM       TO ASUM-KODIF-FILE.OBOZ (2)
    MOVE MPMTEX0L.OBOZ       TO ASUM-KODIF-FILE.OBOZ (1)
    MOVE MPMTEX0L.GOSTSORT   TO ASUM-KODIF-FILE.GOSTS
    MOVE MPMTEX0L.GOST       TO ASUM-KODIF-FILE.GOST
    MOVE MPMTEX0L.PROFIL     TO ASUM-KODIF-FILE.PROF
/*  MOVE MPMTEX0L.NSKL       TO ASUM-KODIF-FILE.GRSNAB
    MOVE MPMTEX0L.GR-SNAB    TO ASUM-KODIF-FILE.GRSNAB
    MOVE MPMTEX0L.VIDPRIEMKI TO ASUM-KODIF-FILE.VPR
    COMPRESS ASUM-KODIF-FILE.OBOZ(2) ASUM-KODIF-FILE.OBOZ (1)
             ASUM-KODIF-FILE.GOSTS ASUM-KODIF-FILE.PROF INTO ST-NM
    PERFORM ST-SHORT PRM-SH
    MOVE SH-NM(*) TO NM-SHORT(*)
    IF #IS-FOUND THEN
      ADD 1 TO #FOUND
      UPDATE
    ELSE
      STORE ASUM-KODIF-FILE
    END-IF
    ADD 1 TO #COUNT
    IF #COUNT > 100 THEN RESET #COUNT END TRANSACTION END-IF
  END-FIND
END-WORK
END TRANSACTION
CLOSE WORK FILE 7
WRITE 'Добавлено' #NOT-FOUND 'Oбновлено' #FOUND
INCLUDE XXERSY1C
END
