* >Natural Source Header 000000 /*<RO>>
* :NatName MERLZL0S
* :UID ARMK01
* :Mode S
* :CP
* :Date 20070122
* :Time 1829000
* <Natural Source Header /*<<RO>
/***********************************************************************
/*
/* СИСТЕМА:
/* ПРОГРАММА:
/*
/* РАЗРАБОТЧИК:
/* ДАТА ВЫПУСКА:
/*
/* НАЗВАНИЕ:
/* КОМАНДЫ:
/*
/* ИСПРАВЛЕНИЯ:
/*
/***********************************************************************
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING XXCTXX0A
PARAMETER USING MERLZL0A
PARAMETER USING MERLZLSA
PARAMETER USING UXCSXX0A
/*
LOCAL USING XXXXEC0L
LOCAL USING MXRXXODL
LOCAL USING XBSOMN0A
LOCAL USING XXSOXX0L
/* Основной стек
LOCAL USING MERLZLSL
/* Стек сальдо
LOCAL USING MBMTSA1A
LOCAL USING MBSAST0A
LOCAL USING MBSAST0L
/* Доступ к документу
LOCAL USING MBRLHM0A
LOCAL USING MBRLMM0A
LOCAL USING MBRLML0A
LOCAL USING MBRXPM0A
/* ЛЗК
LOCAL USING MBLKHM0A
/*
LOCAL USING UBODMN0A
LOCAL USING MDMZMN0L
LOCAL
1 #I       (I4)
1 #J       (I4)
END-DEFINE
DEFINE SUBROUTINE MERLZL0S
RESET XXERX00A
/*
DECIDE ON FIRST VALUE MERLZL0A.ME-COMMAND
VALUE "LOAD"
  PERFORM STACK-LOAD
VALUE "FREE"
  PERFORM STACK-FREE
NONE VALUE
  MOVE MBMTSA1A.BL-COMMAND TO ERROR-ADDITION(1)
  *ERROR-NR := EC-UNKNOW-COMMAND
END-DECIDE
/*
DEFINE SUBROUTINE STACK-LOAD
  IF MERLZLSA.STACK-COUNT EQ 0 THEN
     PERFORM STACK-INIT
  END-IF
  /* читаем операцию
  MOVE XXCTXX0A.OD-ID TO UBODMN0A.OD-ID
  MOVE "READ" TO UBODMN0A.BL-COMMAND
  PERFORM UBODMN0S XXERX00A XXCTXX0A UBODMN0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  MOVE UBODMN0A.OD-IT-ID(1) TO RX-OD-TYPE
  /* читаем заголовок
  MOVE MERLZL0A.RL-ID TO MBRLHM0A.RL-ID
  MOVE "READ" TO MBRLHM0A.BL-COMMAND
  PERFORM MBRLHM0S XXERX00A XXCTXX0A MBRLHM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  MOVE BY NAME MBRLHM0A TO MERLZL0A
  /* читаем ЛЗК
  MOVE MERLZL0A.LK-ID TO MBLKHM0A.LK-ID
  MOVE "READ" TO MBLKHM0A.BL-COMMAND
  PERFORM MBLKHM0S XXERX00A XXCTXX0A MBLKHM0A UXCSXX0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  MOVE MBLKHM0A.ZK-ID TO MERLZL0A.ZK-ID
  MOVE MBLKHM0A.MT-ID TO MERLZL0A.MT-ID
  /*
  RESET MERLZLSL.STACK-REC-G MERLZLSL.STACK-KEY-G
  MOVE MBLKHM0A.LK-ID TO MERLZLSL.LK-ID
  MOVE MBLKHM0A.MT-ID TO MERLZLSL.MT-ID
  PERFORM STACK-LOCATE
  IF RETURN-CODE NE 0 THEN
     IF RETURN-CODE EQ EC-OBJECT-NOT-FOUND THEN
        PERFORM STACK-PUSH
     ELSE
        *ERROR-NR := RETURN-CODE
     END-IF
  END-IF
  /* Найдем все заменители
  MOVE MBLKHM0A.MT-ID TO MZ-FROM-MT-SUPER-G.FROM-MT-ID(*)
  MOVE MBLKHM0A.ZK-ID TO MZ-FROM-MT-SUPER-G.ZK-ID(*)
  ADD 1 TO MZ-FROM-MT-SUPER-G.ZK-ID(2)
  RESET MZ-FROM-MT-SUPER-G.DT-START(*)
  FIND MA-MATERIAL-CHANGE-VIEW WITH MZ-FROM-MT-SUPER EQ
                    MZ-FROM-MT-SUPER(1) THRU MZ-FROM-MT-SUPER(2)
/*                    AND ZK-ID EQ MBLKHM0A.ZK-ID
     ACCEPT MBLKHM0A.MT-ID EQ MA-MATERIAL-CHANGE-VIEW.FROM-MT-ID AND
            MA-MATERIAL-CHANGE-VIEW.DT-START LE MBRLHM0A.RL-DATE AND
            MA-MATERIAL-CHANGE-VIEW.DT-STOP  GE MBRLHM0A.RL-DATE
/*     WRITE MA-MATERIAL-CHANGE-VIEW.FROM-MT-ID MA-MATERIAL-CHANGE-VIEW.TO-MT-ID
     RESET MERLZLSL.STACK-REC-G MERLZLSL.STACK-KEY-G
     MOVE MBLKHM0A.LK-ID TO MERLZLSL.LK-ID
     MOVE MA-MATERIAL-CHANGE-VIEW.TO-MT-ID TO MERLZLSL.MT-ID
     MOVE MA-MATERIAL-CHANGE-VIEW.MZ-ID TO MERLZLSL.MZ-ID
     MOVE MA-MATERIAL-CHANGE-VIEW.COL TO MERLZLSL.MZ-COL
     PERFORM STACK-LOCATE
     IF RETURN-CODE NE 0 THEN
        IF RETURN-CODE EQ EC-OBJECT-NOT-FOUND THEN
           PERFORM STACK-PUSH
        ELSE
           *ERROR-NR := RETURN-CODE
        END-IF
     END-IF
  END-FIND
  /* Найдем уже задействованные позиции
  MOVE MBRLHM0A.RL-ID TO MBRLML0A.RL-ID
  MOVE "TOP" TO MBRLML0A.BL-COMMAND
  MOVE 20 TO MBRLML0A.DR-LIST-READ
  REPEAT
     PERFORM MBRLML0S XXERX00A XXCTXX0A MBRLML0A UXCSXX0A
     IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE "NEXT" TO MBRLML0A.BL-COMMAND
     FOR #I = 1 TO MBRLML0A.DR-LIST-C
        MOVE MBRLML0A.RLM-ID(#I) TO MBRLMM0A.RLM-ID
        MOVE "READ" TO MBRLMM0A.BL-COMMAND
        PERFORM MBRLMM0S XXERX00A XXCTXX0A MBRLMM0A UXCSXX0A
        IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
        MOVE MBRLML0A.RLM-ID(#I) TO MBRXPM0A.DR-ID
        MOVE 1703 TO MBRXPM0A.DD-ID
        MOVE "READ-TR" TO MBRXPM0A.BL-COMMAND
        PERFORM MBRXPM0S XXERX00A XXCTXX0A MBRXPM0A UXCSXX0A
        IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
        IF MBLKHM0A.LK-ID NE MBRLMM0A.LK-ID THEN
           ESCAPE TOP
        END-IF
        MOVE MBLKHM0A.LK-ID TO MERLZLSL.LK-ID
        MOVE MBRLMM0A.MT-ID TO MERLZLSL.MT-ID
/*        WRITE "LOCATE" MBLKHM0A.LK-ID MBRLMM0A.MT-ID  /* MERLZLSL.STACK-KEY-B(*)
        PERFORM STACK-LOCATE
/*        WRITE "LOCATE" RETURN-CODE
        IF RETURN-CODE NE 0 THEN
           IF RETURN-CODE EQ EC-OBJECT-NOT-FOUND THEN
              IGNORE
           ELSE
              *ERROR-NR := RETURN-CODE
           END-IF
        ELSE
           PERFORM STACK-READ
           MOVE MBRLMM0A.RLM-ID TO MERLZLSL.RLM-ID
           MOVE MBRXPM0A.BASE-COL TO MERLZLSL.BASE-COL
           MOVE MBRLMM0A.BASE-EI-ID TO MERLZLSL.BASE-EI-ID
           MOVE MBRXPM0A.PLAN-COL TO MERLZLSL.PLAN-COL
           MOVE MBRLMM0A.PLAN-EI-ID TO MERLZLSL.PLAN-EI-ID
           PERFORM STACK-WRITE
/*           MOVE MBRLMM0A
        END-IF
     END-FOR
     UNTIL MBRLML0A.IS-TOP
  END-REPEAT
  IF MXRXXODL.DF-CODE NE 0 THEN
     MOVE MXRXXODL.DF-CODE TO XBSOMN0A.SO-CODE
     MOVE SO-TYPE-DF TO XBSOMN0A.SO-TYPE
     MOVE "LOCATE" TO XBSOMN0A.BL-COMMAND
     PERFORM XBSOMN0S XXERX00A XXCTXX0A XBSOMN0A
     IF RETURN-CODE LT 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
     MOVE XBSOMN0A.SO-ID TO MBMTSA1A.DF-ID
  ELSE
     RESET MBMTSA1A.DF-ID
  END-IF
  FOR #I = 1 TO MERLZLSA.STACK-LEN
/*     WRITE #I MERLZLSA.STACK-LEN
     MOVE #I TO MERLZLSL.STACK-POS
     PERFORM STACK-READ
     /*
     RESET MERLZLSL.BASE-COL-LIMIT
     PERFORM CHECK-LIMIT
     RESET XXERX00A
     /*
/*     WRITE MERLZLSL.LK-ID MERLZLSL.MT-ID MERLZLSL.BASE-COL
/*           MERLZLSL.RLM-ID MERLZLSL.BASE-COL-LIMIT
     PERFORM STACK-WRITE
  END-FOR
END-SUBROUTINE
/*
DEFINE SUBROUTINE CHECK-LIMIT
  PERFORM SALDO-STACK-INIT
  /* читаем лимит остатков
  RESET MBMTSA1A
  MOVE UBODMN0A.OD-IT-ID(2) TO MBMTSA1A.IT-ID(1)
  MOVE MERLZLSL.RLM-ID TO MBMTSA1A.DR-EXCLUDE
  MOVE MBRLHM0A.IN-MO-ID TO MBMTSA1A.MO-ID
  MOVE MERLZLSL.MT-ID  TO MBMTSA1A.MT-ID
/*  MOVE MERLMM0A.EI-ID TO MBMTSA1A.PRIH-EI-ID
/*  MOVE MERLMM0A.BASE-EI-ID TO MBMTSA1A.BASE-EI-ID
  MOVE "LIFO" TO MBMTSA1A.BL-COMMAND
  PERFORM MBMTSA1S XXERX00A XXCTXX0A MBSAST0A MBMTSA1A UXCSXX0A
/*  WRITE 'limit' RETURN-CODE MBMTSA1A.PR-ID MBMTSA1A.PRIH-COL MBMTSA1A.PRIH-EI-ID MBMTSA1A.BASE-COL MBMTSA1A.BASE-EI-ID MBMTSA1A.BALC-SUMMA
  IF RETURN-CODE NE 0 THEN
     IF RETURN-CODE EQ EC-OBJECT-NOT-FOUND THEN
        IGNORE
     ELSE
        *ERROR-NR := EC-QUIT-STACK-TRACE
     END-IF
  END-IF
  FOR #J = 1 TO MBSAST0A.STACK-LEN
     MOVE #J TO MBSAST0L.STACK-POS PERFORM SALDO-READ
     IF RETURN-CODE NE 0 THEN *ERROR-NR := RETURN-CODE END-IF
     IF MBMTSA1A.DF-ID NE 0 THEN
        IF MBSAST0L.DF-ID NE MBMTSA1A.DF-ID THEN
           ESCAPE TOP
        END-IF
     END-IF
/*     IF MBSAST0L.BASE-COL LE 0 THEN ESCAPE TOP END-IF
     ADD MBSAST0L.BASE-COL TO MERLZLSL.BASE-COL-LIMIT
/*     ADD MBSAST0L.BALC-SUMMA TO MERLMM0A.CENA-SUMMA-LIMIT
  END-FOR
  PERFORM SALDO-STACK-FREE
/*
END-SUBROUTINE
/* Управление стеком сальдо
INCLUDE XXSTMN4C "MBSAST0A" "MBSAST0L-CONST" "MBSAST0L"
        "SALDO-STACK-INIT" "SALDO-STACK-FREE" "SALDO-STACK-REALLOC"
        "SALDO-PUSH" "SALDO-READ" "SALDO-WRITE" "SALDO-LOCATE"
/* Управление основным стеком
INCLUDE XXSTMN4C "MERLZLSA" "MERLZLSL-CONST" "MERLZLSL"
        "STACK-INIT" "STACK-FREE" "STACK-REALLOC"
        "STACK-PUSH" "STACK-READ" "STACK-WRITE" "STACK-LOCATE"
/*
INCLUDE XXERSY1C
END-SUBROUTINE
END
