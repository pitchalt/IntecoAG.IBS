* >Natural Source Header 000000 /*<RO>>
* :NatName MPOPEX0N
* :UID ARMK523
* :Mode S
* :CP
* :Date 20091230
* :Time 1016000
* <Natural Source Header /*<<RO>
DEFINE DATA
PARAMETER USING XXERX00A
PARAMETER USING XXCTXX0A
PARAMETER USING XABOXX0A
/*
LOCAL USING XXXXEC0L
LOCAL USING UXCSXX0A
LOCAL USING MPOPEX0L
LOCAL USING XPMXSM0L
LOCAL USING XPPBXX0A
/*
LOCAL USING UDOPMN0L
LOCAL USING UDSASH0L
LOCAL USING MBOPEX0L
/*
LOCAL USING MXITAT0L
LOCAL USING XBDRSX0L
/*
LOCAL USING MBLKHM0A
LOCAL USING MBLKRM0A
LOCAL USING MBRLHM0A
LOCAL USING MBRLMM0A
LOCAL USING MBRLPM0A
/*
LOCAL USING MBMOMN0A
LOCAL USING XBDPMN0A
LOCAL USING MBDCHM0A
LOCAL USING MBMTMN0A
LOCAL USING MBZKMN0A
LOCAL USING MBMZMN0A
/*
LOCAL
1 #I             (I4)
1 #PF-KEY        (A5)
1 #TIME-START    (T)
1 #TIME-STOP     (T)
1 #MODIF         (I4)
1 #INDEX         (I4)
1 #REGISTERS     (P15/1:10)  INIT<121, 122, 123, 124, 125>
/*
END-DEFINE
/*
SET KEY OFF
SET KEY COMMAND OFF
SET KEY NAMED OFF
SET KEY ON
SET KEY ALL
SET CONTROL 'M=RE'
SET CONTROL "M3"
SET KEY ENTR NAMED 'Провр'
SET KEY PF3 NAMED 'Выход'
SET KEY PF5 NAMED 'Выпол'
/*
MOVE *PROGRAM TO MX-EDITOR-PROGRAM
MOVE 'Администрирование' TO MX-FUNCTION-NAME
MOVE 'Выгрузка операций за период' TO MX-EDITOR-NAME
/*
MOVE *DATN TO DATA-START-N
MOVE *DATN TO DATA-STOP-N
/*
REPEAT
  INPUT USING MAP "MPOPEX0M"
  MOVE *PF-KEY TO #PF-KEY
  IF *PF-KEY EQ "PF3" OR EQ "CLR" THEN
     ESCAPE BOTTOM
  END-IF
  IF *PF-KEY EQ "ENTR" THEN
     PERFORM SCREEN-CHECK
     ESCAPE TOP
  END-IF
  IF *PF-KEY EQ "PF5" THEN
     PERFORM SCREEN-CHECK
     PERFORM DATA-UNLOAD
     IF RETURN-CODE EQ 0 THEN ESCAPE BOTTOM END-IF
  END-IF
  REINPUT *2102, #PF-KEY
END-REPEAT
/*
DEFINE SUBROUTINE SCREEN-CHECK
  IF DATA-START-N EQ 0 THEN
     REINPUT *2305 MARK *DATA-START-N
  END-IF
  IF DATA-START-N < 19000000 OR DATA-START-N NE MASK(YYYYMMDD) THEN
     REINPUT *2302 MARK *DATA-START-N
  END-IF
  IF DATA-STOP-N EQ 0 THEN
     REINPUT *2305 MARK *DATA-STOP-N
  END-IF
  IF DATA-STOP-N < 19000000 OR DATA-STOP-N NE MASK(YYYYMMDD) THEN
     REINPUT *2302 MARK *DATA-STOP-N
  END-IF
  IF DATA-STOP-N < DATA-START-N THEN
     REINPUT *2306 MARK *DATA-STOP-N
  END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE DATA-UNLOAD
  MOVE EDITED DATA-START-A TO #TIME-START (EM=YYYYMMDD)
  MOVE EDITED DATA-STOP-A TO #TIME-STOP (EM=YYYYMMDD)
/*FOR #I = 1 TO 10
/*   IF #REGISTERS(#I) EQ 0 THEN ESCAPE BOTTOM END-IF
/*   MOVE 2000 TO UD-IT-ID-SUPER-G.OP-CL-ID(#I,*)
/*   MOVE #REGISTERS(#I) TO UD-IT-ID-SUPER-G.MD-IT-ID(#I,*)
/*   MOVE 0 TO UD-IT-ID-SUPER-G.DT-INDEX(#I,1)
/*   MOVE 99999999999 TO UD-IT-ID-SUPER-G.DT-INDEX(#I,2)
/*END-FOR
  FIND UR-ACC-OP-VIEW WITH
        OP-TIME-LAST-MODIF EQ #TIME-START THRU #TIME-STOP
/*      (UD-IT-ID-SUPER EQ
/*       UD-IT-ID-SUPER(1,1) THRU UD-IT-ID-SUPER(1,2) OR
/*       UD-IT-ID-SUPER EQ
/*       UD-IT-ID-SUPER(2,1) THRU UD-IT-ID-SUPER(2,2) OR
/*       UD-IT-ID-SUPER EQ
/*       UD-IT-ID-SUPER(3,1) THRU UD-IT-ID-SUPER(3,2) OR
/*       UD-IT-ID-SUPER EQ
/*       UD-IT-ID-SUPER(4,1) THRU UD-IT-ID-SUPER(4,2) OR
/*       UD-IT-ID-SUPER EQ
/*       UD-IT-ID-SUPER(5,1) THRU UD-IT-ID-SUPER(5,2))
     AT START DATA
        INCLUDE XPPBIN0C "*NUMBER" '"Выгрузка операций"'
     END-START
     INCLUDE XPPBST0C "*COUNTER"
     IF UR-ACC-OP-VIEW.CL-ID NE 2000 THEN ESCAPE TOP END-IF
     IF UR-ACC-OP-VIEW.MD-IT-ID(1) EQ 302 OR
        UR-ACC-OP-VIEW.MD-IT-ID(2) EQ 302 THEN
        ESCAPE TOP
     END-IF
     IF TX-STATUS NE "N" AND TX-STATUS NE "P" THEN
        ESCAPE TOP
     END-IF
     RESET MBOPEX0L
     MOVE UR-ACC-OP-VIEW.OP-ID(1) TO MBOPEX0L.OP-ID
     MOVE UR-ACC-OP-VIEW.OP-OD-ID(1) TO MBOPEX0L.OD-ID
     MOVE UR-ACC-OP-VIEW.OP-DC-DR-ID(1) TO MBOPEX0L.DC-ID
     MOVE UR-ACC-OP-VIEW.OP-DC-DD-ID(1) TO MBOPEX0L.DD-ID
     IF TX-STATUS EQ "N" THEN MOVE "A" TO MBOPEX0L.OP-STATE END-IF
     IF TX-STATUS EQ "P" THEN MOVE "D" TO MBOPEX0L.OP-STATE END-IF
     /*
     MOVE UR-ACC-OP-VIEW.OP-DC-DD-ID(1) TO MBDCHM0A.DD-ID
     MOVE UR-ACC-OP-VIEW.OP-DC-DR-ID(1) TO MBDCHM0A.DR-ID
     MOVE "READ" TO MBDCHM0A.BL-COMMAND
     PERFORM MBDCHM0S XXERX00A XXCTXX0A MBDCHM0A UXCSXX0A
     IF RETURN-CODE NE 0 THEN
/*      PERFORM XPERVW0S XXERX00A
        PERFORM DUMP-ERROR
     ELSE
        MOVE MBDCHM0A.DC-NUMBER TO MBOPEX0L.DC-NUMB
        MOVE EDITED MBDCHM0A.DC-DATE (EM=YYYYMMDD) TO MBOPEX0L.DC-DATE
     END-IF
     /*
     IF UR-ACC-OP-VIEW.OP-SRC-DD-ID(1) EQ 1703 THEN
        MOVE UR-ACC-OP-VIEW.OP-SRC-DR-ID(1) TO MBRLPM0A.RLP-ID
        MOVE "READ" TO MBRLPM0A.BL-COMMAND
        PERFORM MBRLPM0S XXERX00A XXCTXX0A MBRLPM0A UXCSXX0A
        IF RETURN-CODE EQ 0 THEN
           MOVE MBRLPM0A.PLAN-COL TO MBOPEX0L.PLAN-COL
           MOVE MBRLPM0A.RLM-ID TO MBRLMM0A.RLM-ID
           MOVE "READ" TO MBRLMM0A.BL-COMMAND
           PERFORM MBRLMM0S XXERX00A XXCTXX0A MBRLMM0A UXCSXX0A
        IF RETURN-CODE EQ 0 THEN
           IF MBRLMM0A.MZ-ID NE 0
              MOVE MBRLMM0A.MZ-ID TO MBMZMN0A.MZ-ID
              MOVE "READ" TO MBMZMN0A.BL-COMMAND
              PERFORM MBMZMN0S XXERX00A XXCTXX0A MBMZMN0A
           ELSE
              RESET MBMZMN0A
           END-IF
        IF RETURN-CODE EQ 0 THEN
           MOVE MBMZMN0A.COL TO MBOPEX0L.MZ-COL
           MOVE MBRLMM0A.LK-ID TO MBLKHM0A.LK-ID
           MOVE "READ" TO MBLKHM0A.BL-COMMAND
           PERFORM MBLKHM0S XXERX00A XXCTXX0A MBLKHM0A UXCSXX0A
        IF RETURN-CODE EQ 0 THEN
           MOVE MBLKHM0A.LK-ID TO MBOPEX0L.LK-ID
           MOVE MBLKHM0A.LK-NUMBER TO MBOPEX0L.LK-NUMB
           MOVE EDITED MBLKHM0A.LK-DATE (EM=YYYYMMDD) TO MBOPEX0L.LK-DATE
        END-IF
        END-IF
        END-IF
        END-IF
     END-IF
     FOR #I = 1 TO C*AD-G
        IF UR-ACC-OP-VIEW.AD-ATTR-ID(#I) EQ 901 THEN
           MOVE EDITED UR-ACC-OP-VIEW.AD-VALUE(#I) (EM=YYYYMMDD) TO OP-DATE1
        END-IF
        IF UR-ACC-OP-VIEW.AD-ATTR-ID(#I) EQ 902 THEN
           MOVE EDITED UR-ACC-OP-VIEW.AD-VALUE(#I) (EM=YYYYMMDD) TO OP-DATE2
        END-IF
        IF UR-ACC-OP-VIEW.AD-ATTR-ID(#I) EQ 903 THEN
           MOVE EDITED UR-ACC-OP-VIEW.AD-VALUE(#I) (EM=YYYYMMDD) TO OP-DATE3
        END-IF
     END-FOR
     /*
     FOR #MODIF = 1 TO 2
        IF UR-ACC-OP-VIEW.MD-MODIF(#MODIF) EQ 1 THEN
           #INDEX := 1
        ELSE IF UR-ACC-OP-VIEW.MD-MODIF(#MODIF) EQ 2 THEN
           #INDEX := 2
        ELSE
           ESCAPE TOP
        END-IF END-IF
        MOVE UR-ACC-OP-VIEW.MD-IT-ID(#MODIF) TO MBOPEX0L.IT-ID(#INDEX)
        MOVE UR-ACC-OP-VIEW.MD-IX-ID(#MODIF) TO MBOPEX0L.IX-ID(#INDEX)
        FOR #I = 1 TO UR-ACC-OP-VIEW.C*AT-G
           IF NOT(#MODIF EQ UR-ACC-OP-VIEW.AT-MD-INT-NUM(#I,*)) THEN
              ESCAPE TOP
           END-IF
/* WRITE MBOPEX0L.IT-ID(#INDEX) VO-ATTR-ID UR-ACC-OP-VIEW.AT-ATTR-ID(#I)
           DECIDE ON FIRST VALUE UR-ACC-OP-VIEW.AT-ATTR-ID(#I)
/*           VALUE DT-ATTR-ID
/*              MOVE UR-ACC-OP-VIEW.AT-VALUE(#I) TO mbopex0l.DT-ID
           VALUE MO-ATTR-ID
              MOVE UR-ACC-OP-VIEW.AT-VALUE(#I) TO MBOPEX0L.MO-ID(#INDEX)
  MOVE UR-ACC-OP-VIEW.AT-VALUE(#I) TO MBMOMN0A.MO-ID
  MOVE "READ" TO MBMOMN0A.BL-COMMAND
  PERFORM MBMOMN0S XXERX00A XXCTXX0A MBMOMN0A
  IF RETURN-CODE NE 0 THEN
    PERFORM DUMP-ERROR
    ESCAPE TOP
  END-IF
  MOVE MBMOMN0A.DP-ID TO XBDPMN0A.DP-ID
  MOVE "READ" TO XBDPMN0A.BL-COMMAND
  PERFORM XBDPMN0S XXERX00A XXCTXX0A XBDPMN0A
  IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
  MOVE XBDPMN0A.DP-CODE TO MBOPEX0L.DP-CODE(#INDEX)
           VALUE VO-ATTR-ID
              MOVE UR-ACC-OP-VIEW.AT-VALUE(#I) TO MBOPEX0L.VO-ID(#INDEX)
/*           VALUE GM-ATTR-ID
/*              MOVE UR-ACC-OP-VIEW.AT-VALUE(#I) TO mbopex0l.GM-ID
           VALUE PR-ATTR-ID
              MOVE UR-ACC-OP-VIEW.AT-VALUE(#I) TO MBOPEX0L.PR-ID(#INDEX)
           VALUE MT-ATTR-ID
              MOVE UR-ACC-OP-VIEW.AT-VALUE(#I) TO MBOPEX0L.MT-ID(#INDEX)
           VALUE DF-ATTR-ID
              MOVE UR-ACC-OP-VIEW.AT-VALUE(#I) TO MBOPEX0L.DF-ID(#INDEX)
/*         VALUE LK-ATTR-ID
/*            MOVE UR-ACC-OP-VIEW.AT-VALUE(#I) TO MBOPEX0L.LK-ID(#INDEX)
/*            IF MBOPEX0L.LK-ID(#INDEX) NE 0 THEN
/*               MOVE MBOPEX0L.LK-ID(#INDEX) TO MBLKHM0A.LK-ID
/*               MOVE "READ" TO MBLKHM0A.BL-COMMAND
/*               PERFORM MBLKHM0S XXERX00A XXCTXX0A MBLKHM0A UXCSXX0A
/*               IF RETURN-CODE NE 0 THEN
/*                  PERFORM XPERVW0S XXERX00A
/*               ELSE
/*                  MOVE MBLKHM0A.LK-NUMBER TO
/*                          MBOPEX0L.LK-NUMB(#INDEX)
/*                  MOVE EDITED MBLKHM0A.LK-DATE (EM=YYYYMMDD) TO
/*                        MBOPEX0L.LK-DATE(#INDEX)
/*               END-IF
/*            END-IF
           VALUE ZK-ATTR-ID
              MOVE UR-ACC-OP-VIEW.AT-VALUE(#I) TO MBOPEX0L.ZK-ID(#INDEX)
              IF MBOPEX0L.ZK-ID(#INDEX) NE 0 THEN
                 MOVE MBOPEX0L.ZK-ID(#INDEX) TO MBZKMN0A.ZK-ID
                 MOVE "READ" TO MBZKMN0A.BL-COMMAND
                 PERFORM MBZKMN0S XXERX00A XXCTXX0A MBZKMN0A
                 IF RETURN-CODE NE 0 THEN
                    PERFORM XPERVW0S XXERX00A
                 ELSE
                    MOVE MBZKMN0A.ZK-CODE  TO  MBOPEX0L.ZK-CODE(#INDEX)
                 END-IF
              END-IF
/*           VALUE BS-ATTR-ID
/*              MOVE UR-ACC-OP-VIEW.AT-VALUE(#I) TO mbopex0l.BS-ID
           VALUE PRIH-COL-ATTR-ID
              MOVE UR-ACC-OP-VIEW.AT-EDIZ-ID(#I) TO
                    MBOPEX0L.PRIH-ID(#INDEX)
              MOVE UR-ACC-OP-VIEW.AT-VALUE(#I) TO SX-NUMBER-NUMBER
              MOVE SX-NUMBER7-VALUE TO MBOPEX0L.PRIH-CL(#INDEX)
           VALUE BASE-COL-ATTR-ID
              MOVE UR-ACC-OP-VIEW.AT-EDIZ-ID(#I) TO
                    MBOPEX0L.BASE-ID(#INDEX)
              MOVE UR-ACC-OP-VIEW.AT-VALUE(#I) TO SX-NUMBER-NUMBER
              MOVE SX-NUMBER7-VALUE TO MBOPEX0L.BASE-CL(#INDEX)
/*           VALUE PLAN-COL-ATTR-ID
/*              MOVE UR-ACC-OP-VIEW.AT-EDIZ-ID(#I) TO mbopex0l.PLAN-EI-ID()
/*        MOVE UR-ACC-OP-VIEW.AT-VALUE(#I) TO SX-NUMBER-NUMBER
/*        mbopex0l.PLAN-COL := mbopex0l.PLAN-COL +
/*              #SIGN * SX-NUMBER4e7-VALUE
           VALUE BALC-SUM-ATTR-ID
              MOVE UR-ACC-OP-VIEW.AT-VALUE(#I) TO SX-NUMBER-NUMBER
              MOVE SX-NUMBER2-VALUE TO MBOPEX0L.BALC-SM(#INDEX)
           NONE VALUE
              IGNORE
           END-DECIDE
        END-FOR
     END-FOR
     IF MBOPEX0L.MT-ID(1) NE 0 THEN
        MOVE MBOPEX0L.MT-ID(1) TO MBMTMN0A.MT-ID
        MOVE "READ" TO MBMTMN0A.BL-COMMAND
        PERFORM MBMTMN0S XXERX00A XXCTXX0A MBMTMN0A
        IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
        MOVE BY NAME MBMTMN0A TO MBOPEX0L.OP-DATA(1)
        MOVE MBMTMN0A.MT-SHORT-NAME TO MBOPEX0L.MT-SHORT(1)
     END-IF
     IF MBOPEX0L.MT-ID(2) NE 0 THEN
        MOVE MBOPEX0L.MT-ID(2) TO MBMTMN0A.MT-ID
        MOVE "READ" TO MBMTMN0A.BL-COMMAND
        PERFORM MBMTMN0S XXERX00A XXCTXX0A MBMTMN0A
        IF RETURN-CODE NE 0 THEN *ERROR-NR := EC-QUIT-STACK-TRACE END-IF
        MOVE BY NAME MBMTMN0A TO MBOPEX0L.OP-DATA(2)
        MOVE MBMTMN0A.MT-SHORT-NAME TO MBOPEX0L.MT-SHORT(2)
     END-IF
     WRITE WORK FILE 7 MBOPEX0L
  END-FIND
  CLOSE WORK FILE 7
  CLOSE WORK FILE 8
END-SUBROUTINE
DEFINE SUBROUTINE DUMP-ERROR
  WRITE WORK FILE 8 ERROR-NUMBER ERROR-MODULE ERROR-ADDITION(1)
  UR-ACC-OP-VIEW.UD-ID UR-ACC-OP-VIEW.OP-OD-ID(1)
  UR-ACC-OP-VIEW.MD-MODIF(1) UR-ACC-OP-VIEW.MD-IT-ID(1)
  UR-ACC-OP-VIEW.MD-MODIF(2) UR-ACC-OP-VIEW.MD-IT-ID(2)
END-SUBROUTINE
/*
INCLUDE XXERSY1C
END
